name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  secret-detection:
    name: Secret Detection with Gitleaks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}  # Optional: for Gitleaks Pro
        with:
          config-path: .gitleaks.toml
          
      - name: Upload Gitleaks Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          retention-days: 30

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Generate audit report
        if: always()
        run: npm audit --json > npm-audit-report.json
        continue-on-error: true
      
      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit-report.json
          retention-days: 30

  code-quality:
    name: Code Quality & Security Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Run TypeScript type check
        run: npm run typecheck
        continue-on-error: true

  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [secret-detection, dependency-scan, code-quality]
    if: always()
    
    steps:
      - name: Check scan results
        run: |
          echo "Security scan completed"
          echo "Secret Detection: ${{ needs.secret-detection.result }}"
          echo "Dependency Scan: ${{ needs.dependency-scan.result }}"
          echo "Code Quality: ${{ needs.code-quality.result }}"
          
          if [ "${{ needs.secret-detection.result }}" == "failure" ]; then
            echo "❌ Secret detection failed - potential secrets found!"
            exit 1
          fi
          
          echo "✅ All security scans passed"

