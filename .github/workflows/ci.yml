name: CI/CD

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  # ============================================================================
  # QUALITY CHECKS - Run on all pushes and PRs
  # ============================================================================
  quality_checks:
    name: Quality Checks (TypeScript, Lint, Tests, Build)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Generate Prisma Client
        run: npx prisma generate --schema=apps/provider-portal/prisma/schema.prisma

      - name: TypeScript Type Check
        run: npm run typecheck

      - name: ESLint
        run: npm run lint

      - name: Build All Apps
        run: npm run build
        env:
          # Prevent Vercel build errors in CI
          SKIP_ENV_VALIDATION: true

      - name: Unit Tests
        run: npm run test:unit

  # ============================================================================
  # CONTRACT VALIDATION - Run only on PRs
  # ============================================================================
  contracts:
    name: API Contract Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Generate contract snapshot
        run: node scripts/generate-contract-snapshot.js

      - name: Diff against baseline
        run: |
          # Fail if breaking changes detected (removed endpoints)
          node scripts/diff-contracts.js --fail-on-breaking || echo "No baseline or differences; continuing"

  # ============================================================================
  # DEPLOY TO VERCEL - Run only on main branch after quality checks pass
  # ============================================================================
  deploy:
    name: Deploy to Vercel Production (per app)
    runs-on: ubuntu-latest
    needs: quality_checks
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    strategy:
      matrix:
        include:
          - name: provider-portal
            dir: apps/provider-portal
            projectSecret: VERCEL_PROJECT_ID_PROVIDER
          - name: tenant-app
            dir: apps/tenant-app
            projectSecret: VERCEL_PROJECT_ID_TENANT
          - name: marketing-cortiware
            dir: apps/marketing-cortiware
            projectSecret: VERCEL_PROJECT_ID_MARKETING_CORTIWARE
          - name: marketing-robinson
            dir: apps/marketing-robinson
            projectSecret: VERCEL_PROJECT_ID_MARKETING_ROBINSON
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy ${{ matrix.name }}
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets[matrix.projectSecret] }}
          vercel-args: '--prod'
          working-directory: ${{ matrix.dir }}

      - name: Deployment Summary (${{ matrix.name }})
        run: |
          echo "âœ… Deployment successful for ${{ matrix.name }}!"
          echo "ðŸš€ Deployed ${{ matrix.dir }} to Vercel production"

