version: 2.1

# ============================================================================
# CIRCLECI CONFIGURATION FOR ROBINSON SOLUTIONS (STREAMFLOW)
# ============================================================================
# This pipeline runs on every push to test code quality and deploy to Vercel
# ============================================================================

orbs:
  node: circleci/node@5.1.0

# ============================================================================
# JOBS
# ============================================================================

jobs:
  # --------------------------------------------------------------------------
  # TEST JOB - Run on all branches
  # --------------------------------------------------------------------------
  test:
    docker:
      - image: cimg/node:20.11
    
    resource_class: medium
    
    steps:
      - checkout
      
      # Restore cached dependencies
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps-
      
      # Install dependencies
      - run:
          name: Install Dependencies
          command: npm ci
      
      # Save dependencies to cache
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.npm
      
      # Generate Prisma Client
      - run:
          name: Generate Prisma Client
          command: npx prisma generate
      
      # Type checking
      - run:
          name: TypeScript Type Check
          command: npm run typecheck
      
      # Linting
      - run:
          name: ESLint Check
          command: npm run lint
      
      # Build the application
      - run:
          name: Build Application
          command: npm run build
      
      # Run tests (if you have them)
      - run:
          name: Run Tests
          command: npm test || echo "No tests configured yet"
      
      # Store test results
      - store_test_results:
          path: test-results
      
      # Store artifacts
      - store_artifacts:
          path: .next
          destination: build-output

  # --------------------------------------------------------------------------
  # DEPLOY JOB - Run only on main branch
  # --------------------------------------------------------------------------
  deploy:
    docker:
      - image: cimg/node:20.11
    
    resource_class: medium
    
    steps:
      - checkout
      
      # Install Vercel CLI
      - run:
          name: Install Vercel CLI
          command: npm i -g vercel
      
      # Deploy to Vercel Production
      - run:
          name: Deploy to Vercel
          command: |
            vercel pull --yes --environment=production --token=$VERCEL_TOKEN
            vercel build --prod --token=$VERCEL_TOKEN
            vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
      
      # Notify deployment success
      - run:
          name: Deployment Complete
          command: |
            echo "âœ… Deployment successful!"
            echo "ðŸš€ Application deployed to production"

# ============================================================================
# WORKFLOWS
# ============================================================================

workflows:
  version: 2
  
  # --------------------------------------------------------------------------
  # TEST ALL BRANCHES - Run tests on every push
  # --------------------------------------------------------------------------
  test-all-branches:
    jobs:
      - test:
          filters:
            branches:
              only: /.*/  # Run on all branches
  
  # --------------------------------------------------------------------------
  # DEPLOY MAIN - Deploy only when pushing to main
  # --------------------------------------------------------------------------
  deploy-production:
    jobs:
      - test:
          filters:
            branches:
              only: main
      
      - deploy:
          requires:
            - test  # Only deploy if tests pass
          filters:
            branches:
              only: main

# ============================================================================
# NOTES
# ============================================================================
#
# ENVIRONMENT VARIABLES REQUIRED IN CIRCLECI:
# - VERCEL_TOKEN (get from Vercel â†’ Settings â†’ Tokens)
# - VERCEL_ORG_ID (get from .vercel/project.json after running 'vercel link')
# - VERCEL_PROJECT_ID (get from .vercel/project.json after running 'vercel link')
#
# OPTIONAL ENVIRONMENT VARIABLES:
# - DATABASE_URL (if you want to run tests against a test database)
#
# WHAT THIS PIPELINE DOES:
# 1. On ANY branch push:
#    - Installs dependencies
#    - Generates Prisma client
#    - Runs TypeScript type checking
#    - Runs ESLint
#    - Builds the application
#    - Runs tests (if configured)
#
# 2. On MAIN branch push (after tests pass):
#    - Deploys to Vercel production
#
# CACHING:
# - node_modules are cached based on package-lock.json
# - Cache is restored on subsequent builds for faster execution
#
# RESOURCE CLASS:
# - Using 'medium' (2 vCPUs, 4GB RAM)
# - Upgrade to 'large' if builds are slow
#
# ============================================================================

