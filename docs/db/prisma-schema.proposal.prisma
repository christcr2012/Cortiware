// Prisma schema proposal (GPT-5) for Sonnet implementation
// Notes:
// - Soft deletes via deletedAt? (apply where needed)
// - Add createdAt/updatedAt defaults
// - Add multi-column indexes noted below

// datasource and generator are defined in prisma/schema.prisma; this is a proposal only.

model Organization {
  id        String   @id @default(cuid())
  name      String
  ownerId   String
  users     User[]
  leads     Lead[]
  opps      Opportunity[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String   @id @default(cuid())
  orgId     String
  org       Organization @relation(fields: [orgId], references: [id])
  email     String @unique
  name      String?
  roles     String   // CSV or JSON; Sonnet may switch to enum[] with PostgreSQL

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orgId, email])
}

model Lead {
  id        String   @id @default(cuid())
  orgId     String
  org       Organization @relation(fields: [orgId], references: [id])
  createdBy String
  name      String
  status    String   // enum later: new|qualified|won|lost
  contactEmail String?
  contactPhone String?
  source    String?
  notes     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orgId, createdAt])
  // Dedupe strategy: optional unique on (orgId, contactEmail) when not null
  //@@unique([orgId, contactEmail])
}

model Opportunity {
  id        String   @id @default(cuid())
  orgId     String
  org       Organization @relation(fields: [orgId], references: [id])
  leadId    String?
  lead      Lead? @relation(fields: [leadId], references: [id])

  stage     String  // enum later: new|qualified|proposal|won|lost
  amount    Int     // cents
  title     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orgId, createdAt])
  @@index([orgId, stage])
}

