
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrgScalarFieldEnum = {
  id: 'id',
  name: 'name',
  featureFlags: 'featureFlags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  aiMonthlyBudgetCents: 'aiMonthlyBudgetCents',
  aiCreditBalance: 'aiCreditBalance',
  aiPlan: 'aiPlan',
  aiAlerts: 'aiAlerts',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  subscriptionStatus: 'subscriptionStatus',
  subscriptionStartDate: 'subscriptionStartDate',
  subscriptionEndDate: 'subscriptionEndDate',
  brandConfig: 'brandConfig',
  settingsJson: 'settingsJson'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  email: 'email',
  name: 'name',
  role: 'role',
  passwordHash: 'passwordHash',
  mustChangePassword: 'mustChangePassword',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  isLocked: 'isLocked',
  lockedUntil: 'lockedUntil',
  failedLoginAttempts: 'failedLoginAttempts',
  lastFailedLogin: 'lastFailedLogin',
  lastSuccessfulLogin: 'lastSuccessfulLogin',
  lastPasswordChange: 'lastPasswordChange',
  totpSecret: 'totpSecret',
  totpEnabled: 'totpEnabled',
  backupCodesHash: 'backupCodesHash'
};

exports.Prisma.UserRecoveryCodeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  codeHash: 'codeHash',
  usedAt: 'usedAt',
  usedFrom: 'usedFrom',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.UserSecurityQuestionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  question: 'question',
  answerHash: 'answerHash',
  createdAt: 'createdAt'
};

exports.Prisma.UserBreakglassAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orgId: 'orgId',
  encryptedEmail: 'encryptedEmail',
  encryptedPasswordHash: 'encryptedPasswordHash',
  encryptionIV: 'encryptionIV',
  createdAt: 'createdAt',
  lastActivatedAt: 'lastActivatedAt',
  activationCount: 'activationCount',
  isEnabled: 'isEnabled',
  canAutoActivate: 'canAutoActivate',
  minDelayMinutes: 'minDelayMinutes'
};

exports.Prisma.UserDeviceFingerprintScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fingerprint: 'fingerprint',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  isTrusted: 'isTrusted',
  trustScore: 'trustScore',
  firstSeenAt: 'firstSeenAt',
  lastSeenAt: 'lastSeenAt',
  loginCount: 'loginCount'
};

exports.Prisma.UserLoginHistoryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  success: 'success',
  method: 'method',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  deviceFingerprint: 'deviceFingerprint',
  riskScore: 'riskScore',
  riskFactors: 'riskFactors',
  country: 'country',
  city: 'city',
  timestamp: 'timestamp'
};

exports.Prisma.BreakglassActivationLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orgId: 'orgId',
  reason: 'reason',
  method: 'method',
  riskScore: 'riskScore',
  riskFactors: 'riskFactors',
  delayMinutes: 'delayMinutes',
  verificationSteps: 'verificationSteps',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  success: 'success',
  errorMessage: 'errorMessage',
  notifiedAdmins: 'notifiedAdmins',
  timestamp: 'timestamp'
};

exports.Prisma.RecoveryRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orgId: 'orgId',
  type: 'type',
  status: 'status',
  verificationToken: 'verificationToken',
  verificationCode: 'verificationCode',
  codeExpiresAt: 'codeExpiresAt',
  codeAttempts: 'codeAttempts',
  riskScore: 'riskScore',
  delayUntil: 'delayUntil',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  completedAt: 'completedAt'
};

exports.Prisma.LeadScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  publicId: 'publicId',
  sourceType: 'sourceType',
  identityHash: 'identityHash',
  company: 'company',
  contactName: 'contactName',
  email: 'email',
  phoneE164: 'phoneE164',
  website: 'website',
  serviceCode: 'serviceCode',
  zip: 'zip',
  enrichmentJson: 'enrichmentJson',
  aiScore: 'aiScore',
  scoreFactors: 'scoreFactors',
  systemGenerated: 'systemGenerated',
  convertedAt: 'convertedAt',
  rfp: 'rfp',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  city: 'city',
  notes: 'notes',
  sourceDetail: 'sourceDetail',
  state: 'state',
  postalCode: 'postalCode',
  address: 'address',
  addressLine1: 'addressLine1',
  addressLine2: 'addressLine2',
  country: 'country'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  publicId: 'publicId',
  company: 'company',
  primaryName: 'primaryName',
  primaryEmail: 'primaryEmail',
  primaryPhone: 'primaryPhone',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OpportunityScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  valueType: 'valueType',
  estValue: 'estValue',
  stage: 'stage',
  ownerId: 'ownerId',
  sourceLeadId: 'sourceLeadId',
  classification: 'classification',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  amount: 'amount',
  status: 'status',
  issuedAt: 'issuedAt',
  items: 'items'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  invoiceId: 'invoiceId',
  amount: 'amount',
  method: 'method',
  receivedAt: 'receivedAt',
  reference: 'reference',
  status: 'status',
  stripePaymentIntentId: 'stripePaymentIntentId',
  stripeChargeId: 'stripeChargeId',
  failureReason: 'failureReason',
  retryCount: 'retryCount',
  lastRetryAt: 'lastRetryAt'
};

exports.Prisma.RfpScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  publicId: 'publicId',
  sourceSite: 'sourceSite',
  title: 'title',
  dueDate: 'dueDate',
  docs: 'docs',
  aiBidFit: 'aiBidFit',
  aiPriceHint: 'aiPriceHint',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  rfpId: 'rfpId',
  status: 'status',
  schedule: 'schedule',
  assignedTo: 'assignedTo',
  checklist: 'checklist',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  employeeId: 'employeeId',
  referredName: 'referredName',
  referredEmail: 'referredEmail',
  referredPhone: 'referredPhone',
  status: 'status',
  convertedAt: 'convertedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BillingLedgerScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  type: 'type',
  amount: 'amount',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.LeadInvoiceScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  number: 'number',
  periodFrom: 'periodFrom',
  periodTo: 'periodTo',
  status: 'status',
  subtotalCents: 'subtotalCents',
  taxCents: 'taxCents',
  totalCents: 'totalCents',
  currency: 'currency',
  stripeInvoiceId: 'stripeInvoiceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  leadCount: 'leadCount'
};

exports.Prisma.LeadInvoiceLineScalarFieldEnum = {
  id: 'id',
  invoiceId: 'invoiceId',
  leadId: 'leadId',
  description: 'description',
  quantity: 'quantity',
  unitPriceCents: 'unitPriceCents',
  amountCents: 'amountCents',
  source: 'source',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  actorUserId: 'actorUserId',
  entity: 'entity',
  entityId: 'entityId',
  field: 'field',
  oldValue: 'oldValue',
  newValue: 'newValue',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.RbacPermissionScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.RbacRoleScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  slug: 'slug',
  isSystem: 'isSystem',
  createdAt: 'createdAt'
};

exports.Prisma.RbacRolePermissionScalarFieldEnum = {
  roleId: 'roleId',
  permissionId: 'permissionId'
};

exports.Prisma.RbacUserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orgId: 'orgId',
  roleId: 'roleId'
};

exports.Prisma.ProviderConfigScalarFieldEnum = {
  id: 'id',
  samApiKey: 'samApiKey',
  stripeSecretKey: 'stripeSecretKey',
  otherConfig: 'otherConfig',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PricingPlanScalarFieldEnum = {
  orgId: 'orgId',
  model: 'model',
  currency: 'currency',
  unitAmount: 'unitAmount',
  tiersJson: 'tiersJson',
  includedUnits: 'includedUnits'
};

exports.Prisma.AiUsageEventScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  feature: 'feature',
  model: 'model',
  tokensIn: 'tokensIn',
  tokensOut: 'tokensOut',
  costUsd: 'costUsd',
  creditsUsed: 'creditsUsed',
  requestId: 'requestId',
  createdAt: 'createdAt'
};

exports.Prisma.AiMonthlySummaryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  monthKey: 'monthKey',
  tokensIn: 'tokensIn',
  tokensOut: 'tokensOut',
  costUsd: 'costUsd',
  creditsUsed: 'creditsUsed',
  callCount: 'callCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  actorType: 'actorType',
  actorId: 'actorId',
  entityType: 'entityType',
  entityId: 'entityId',
  action: 'action',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  plan: 'plan',
  status: 'status',
  startedAt: 'startedAt',
  canceledAt: 'canceledAt',
  renewsAt: 'renewsAt',
  priceCents: 'priceCents',
  meta: 'meta',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsageMeterScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  meter: 'meter',
  quantity: 'quantity',
  windowStart: 'windowStart',
  windowEnd: 'windowEnd',
  createdAt: 'createdAt'
};

exports.Prisma.AddonPurchaseScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  sku: 'sku',
  amount: 'amount',
  status: 'status',
  purchasedAt: 'purchasedAt',
  refundedAt: 'refundedAt',
  meta: 'meta'
};

exports.Prisma.FederationKeyScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  keyId: 'keyId',
  secretHash: 'secretHash',
  scope: 'scope',
  createdAt: 'createdAt',
  disabledAt: 'disabledAt'
};

exports.Prisma.IncidentScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  severity: 'severity',
  status: 'status',
  title: 'title',
  description: 'description',
  assigneeUserId: 'assigneeUserId',
  slaResponseDeadline: 'slaResponseDeadline',
  slaResolveDeadline: 'slaResolveDeadline',
  acknowledgedAt: 'acknowledgedAt',
  resolvedAt: 'resolvedAt',
  closedAt: 'closedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceLineScalarFieldEnum = {
  id: 'id',
  invoiceId: 'invoiceId',
  description: 'description',
  lineType: 'lineType',
  quantity: 'quantity',
  unitPriceCents: 'unitPriceCents',
  amountCents: 'amountCents',
  sourceType: 'sourceType',
  sourceId: 'sourceId',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  audience: 'audience',
  type: 'type',
  title: 'title',
  body: 'body',
  severity: 'severity',
  readAt: 'readAt',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  OWNER: 'OWNER',
  MANAGER: 'MANAGER',
  STAFF: 'STAFF',
  PROVIDER: 'PROVIDER',
  ACCOUNTANT: 'ACCOUNTANT'
};

exports.LeadSource = exports.$Enums.LeadSource = {
  COLD: 'COLD',
  HOT: 'HOT',
  RFP: 'RFP',
  MANUAL_EMPLOYEE_REFERRAL: 'MANUAL_EMPLOYEE_REFERRAL',
  MANUAL_EXISTING_CUSTOMER: 'MANUAL_EXISTING_CUSTOMER',
  MANUAL_NEW_CUSTOMER: 'MANUAL_NEW_CUSTOMER',
  MANUAL_OTHER: 'MANUAL_OTHER',
  SYSTEM: 'SYSTEM',
  EMPLOYEE_REFERRAL: 'EMPLOYEE_REFERRAL',
  MANUAL: 'MANUAL',
  LSA: 'LSA'
};

exports.ValueType = exports.$Enums.ValueType = {
  RELATIONSHIP: 'RELATIONSHIP',
  JOB: 'JOB'
};

exports.LedgerType = exports.$Enums.LedgerType = {
  CONVERSION_FEE: 'CONVERSION_FEE',
  PACK_PURCHASE: 'PACK_PURCHASE'
};

exports.PricingModel = exports.$Enums.PricingModel = {
  PER_LEAD_FIXED: 'PER_LEAD_FIXED',
  TIERED: 'TIERED',
  SUBSCRIPTION: 'SUBSCRIPTION',
  HYBRID: 'HYBRID'
};

exports.LeadStatus = exports.$Enums.LeadStatus = {
  NEW: 'NEW',
  CONVERTED: 'CONVERTED'
};

exports.AiPlan = exports.$Enums.AiPlan = {
  BASE: 'BASE',
  PRO: 'PRO',
  ELITE: 'ELITE'
};

exports.IncidentSeverity = exports.$Enums.IncidentSeverity = {
  P1: 'P1',
  P2: 'P2',
  P3: 'P3'
};

exports.IncidentStatus = exports.$Enums.IncidentStatus = {
  OPEN: 'OPEN',
  ACK: 'ACK',
  IN_PROGRESS: 'IN_PROGRESS',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED'
};

exports.InvoiceLineType = exports.$Enums.InvoiceLineType = {
  subscription: 'subscription',
  usage: 'usage',
  addon: 'addon',
  one_time: 'one_time'
};

exports.Prisma.ModelName = {
  Org: 'Org',
  User: 'User',
  UserRecoveryCode: 'UserRecoveryCode',
  UserSecurityQuestion: 'UserSecurityQuestion',
  UserBreakglassAccount: 'UserBreakglassAccount',
  UserDeviceFingerprint: 'UserDeviceFingerprint',
  UserLoginHistory: 'UserLoginHistory',
  BreakglassActivationLog: 'BreakglassActivationLog',
  RecoveryRequest: 'RecoveryRequest',
  Lead: 'Lead',
  Customer: 'Customer',
  Opportunity: 'Opportunity',
  Invoice: 'Invoice',
  Payment: 'Payment',
  Rfp: 'Rfp',
  Job: 'Job',
  Referral: 'Referral',
  BillingLedger: 'BillingLedger',
  LeadInvoice: 'LeadInvoice',
  LeadInvoiceLine: 'LeadInvoiceLine',
  AuditLog: 'AuditLog',
  RbacPermission: 'RbacPermission',
  RbacRole: 'RbacRole',
  RbacRolePermission: 'RbacRolePermission',
  RbacUserRole: 'RbacUserRole',
  ProviderConfig: 'ProviderConfig',
  PricingPlan: 'PricingPlan',
  AiUsageEvent: 'AiUsageEvent',
  AiMonthlySummary: 'AiMonthlySummary',
  Activity: 'Activity',
  Subscription: 'Subscription',
  UsageMeter: 'UsageMeter',
  AddonPurchase: 'AddonPurchase',
  FederationKey: 'FederationKey',
  Incident: 'Incident',
  InvoiceLine: 'InvoiceLine',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\chris\\Git Local\\StreamFlow\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\chris\\Git Local\\StreamFlow\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Org {\n  id           String   @id @default(cuid())\n  name         String\n  featureFlags Json     @default(\"{}\")\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // AI Cost Control & Monetization - PROVIDER MODEL\n  aiMonthlyBudgetCents Int    @default(5000) // $50 provider cost limit\n  aiCreditBalance      Int    @default(1000) // 1k credits = $50 worth (1 credit = $0.05 client-facing)\n  aiPlan               AiPlan @default(BASE) // Client subscription tier\n  aiAlerts             Json   @default(\"{}\") // Usage alert thresholds\n\n  // Stripe Subscription Management\n  stripeCustomerId      String? // Stripe customer ID for billing\n  stripeSubscriptionId  String? // Current active subscription ID\n  subscriptionStatus    String? // active, past_due, canceled, etc\n  subscriptionStartDate DateTime? // When subscription started\n  subscriptionEndDate   DateTime? // When subscription ends/ended\n\n  // Back-relations\n  auditLogs          AuditLog[]\n  ledger             BillingLedger[]\n  customers          Customer[]\n  invoices           Invoice[]\n  jobs               Job[]\n  leads              Lead[]\n  opportunities      Opportunity[]\n  payments           Payment[]\n  referrals          Referral[]\n  rfps               Rfp[]\n  users              User[]\n  rbacRoles          RbacRole[]         @relation(\"OrgRbacRoles\")\n  rbacUserRoles      RbacUserRole[]     @relation(\"OrgRbacUserRoles\")\n  leadInvoices       LeadInvoice[]      @relation(\"OrgLeadInvoices\")\n  pricingPlan        PricingPlan?       @relation(\"OrgPricingPlan\")\n  aiUsageEvents      AiUsageEvent[]     @relation(\"OrgAiUsageEvents\")\n  aiMonthlySummaries AiMonthlySummary[] @relation(\"OrgAiMonthlySummaries\")\n\n  // Provider Operations Relations\n  activities     Activity[]      @relation(\"OrgActivities\")\n  subscriptions  Subscription[]  @relation(\"OrgSubscriptions\")\n  usageMeters    UsageMeter[]    @relation(\"OrgUsageMeters\")\n  addonPurchases AddonPurchase[] @relation(\"OrgAddonPurchases\")\n\n  incidents     Incident[]     @relation(\"OrgIncidents\")\n  notifications Notification[] @relation(\"OrgNotifications\")\n\n  /// brandConfig stores white-label brand settings such as name, colors, and logo URL.\n  /// It is JSON to allow arbitrary keys like { name: \"Mountain Vista\", color: \"#123456\", logoUrl: \"https://...\" }\n  brandConfig Json? @default(\"{}\")\n\n  /// settingsJson stores arbitrary organization-level settings.  This can be used\n  /// by owners to configure API keys or other preferences needed at runtime.\n  settingsJson Json? @default(\"{}\")\n}\n\nmodel User {\n  id                 String   @id @default(cuid())\n  orgId              String\n  email              String   @unique\n  name               String?\n  role               Role     @default(STAFF)\n  passwordHash       String?  @db.VarChar(255)\n  mustChangePassword Boolean  @default(false)\n  status             String   @default(\"active\")\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n\n  // Unified Auth System - Security Fields\n  isActive            Boolean   @default(true)\n  isLocked            Boolean   @default(false)\n  lockedUntil         DateTime?\n  failedLoginAttempts Int       @default(0)\n  lastFailedLogin     DateTime?\n  lastSuccessfulLogin DateTime?\n  lastPasswordChange  DateTime?\n\n  // Two-Factor Authentication (TOTP)\n  totpSecret      String?\n  totpEnabled     Boolean @default(false)\n  backupCodesHash String? // JSON array of hashed backup codes\n\n  org           Org            @relation(fields: [orgId], references: [id])\n  rbacUserRoles RbacUserRole[] @relation(\"UserRbacUserRoles\")\n\n  // Unified Auth System - Relations\n  recoveryCodes      UserRecoveryCode[]\n  breakglassAccount  UserBreakglassAccount?\n  securityQuestions  UserSecurityQuestion[]\n  loginHistory       UserLoginHistory[]\n  deviceFingerprints UserDeviceFingerprint[]\n}\n\n// ============================================================================\n// UNIFIED AUTH SYSTEM - RECOVERY & SECURITY\n// ============================================================================\n\n/// Recovery codes for self-service account recovery (Layer 1)\nmodel UserRecoveryCode {\n  id        String    @id @default(cuid())\n  userId    String\n  codeHash  String // Bcrypt hashed recovery code\n  usedAt    DateTime?\n  usedFrom  String? // IP address where code was used\n  createdAt DateTime  @default(now())\n  expiresAt DateTime // Valid for 1 year by default\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([usedAt])\n}\n\n/// Security questions for additional verification (Layer 2)\nmodel UserSecurityQuestion {\n  id         String   @id @default(cuid())\n  userId     String\n  question   String // \"What was your first pet's name?\"\n  answerHash String // Bcrypt hashed answer (case-insensitive)\n  createdAt  DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\n/// Breakglass account for automated emergency access (Layer 3)\nmodel UserBreakglassAccount {\n  id     String @id @default(cuid())\n  userId String @unique\n  orgId  String\n\n  // Encrypted credentials (AES-256-GCM with per-user key derived from master)\n  encryptedEmail        String\n  encryptedPasswordHash String\n  encryptionIV          String // Initialization vector for decryption\n\n  // Usage tracking\n  createdAt       DateTime  @default(now())\n  lastActivatedAt DateTime?\n  activationCount Int       @default(0)\n\n  // Automated security\n  isEnabled       Boolean @default(true)\n  canAutoActivate Boolean @default(true) // Can activate without manual approval\n  minDelayMinutes Int     @default(0) // Minimum delay before activation (risk-based)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([orgId])\n  @@index([userId])\n}\n\n/// Device fingerprinting for trust scoring\nmodel UserDeviceFingerprint {\n  id     String @id @default(cuid())\n  userId String\n\n  // Device identification\n  fingerprint String // Hash of: User-Agent + Screen Resolution + Timezone + Canvas fingerprint\n  ipAddress   String\n  userAgent   String\n\n  // Trust level\n  isTrusted  Boolean @default(false)\n  trustScore Int     @default(0) // 0-100\n\n  // Metadata\n  firstSeenAt DateTime @default(now())\n  lastSeenAt  DateTime @default(now())\n  loginCount  Int      @default(1)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, fingerprint])\n  @@index([userId])\n  @@index([fingerprint])\n}\n\n/// Comprehensive login history for audit trail\nmodel UserLoginHistory {\n  id     String @id @default(cuid())\n  userId String\n\n  // Login details\n  success           Boolean\n  method            String // \"password\", \"recovery_code\", \"breakglass\", \"totp\"\n  ipAddress         String\n  userAgent         String\n  deviceFingerprint String?\n\n  // Risk assessment\n  riskScore   Int     @default(0) // 0-100\n  riskFactors String? // JSON array of risk factors\n\n  // Geolocation (optional)\n  country String?\n  city    String?\n\n  // Metadata\n  timestamp DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, timestamp])\n  @@index([success])\n  @@index([riskScore])\n}\n\n/// Breakglass activation log for automated actions\nmodel BreakglassActivationLog {\n  id     String @id @default(cuid())\n  userId String\n  orgId  String\n\n  // Activation details\n  reason String // \"password_reset\", \"account_locked\", \"lost_access\"\n  method String // \"email_verification\", \"recovery_code\", \"security_questions\"\n\n  // Risk assessment\n  riskScore    Int // 0-100\n  riskFactors  String // JSON array\n  delayMinutes Int // How long user had to wait\n\n  // Verification\n  verificationSteps String // JSON array of completed verification steps\n  ipAddress         String\n  userAgent         String\n\n  // Outcome\n  success      Boolean\n  errorMessage String?\n\n  // Notifications sent\n  notifiedAdmins String // JSON array of admin emails notified\n\n  // Metadata\n  timestamp DateTime @default(now())\n\n  @@index([userId, timestamp])\n  @@index([orgId, timestamp])\n  @@index([riskScore])\n}\n\n/// Pending recovery requests with automated delay timers\nmodel RecoveryRequest {\n  id     String @id @default(cuid())\n  userId String\n  orgId  String\n\n  // Request details\n  type   String // \"password_reset\", \"breakglass_activation\", \"unlock_account\"\n  status String // \"pending\", \"verified\", \"completed\", \"expired\", \"denied\"\n\n  // Verification\n  verificationToken String    @unique\n  verificationCode  String? // 6-digit code sent via email/SMS\n  codeExpiresAt     DateTime?\n  codeAttempts      Int       @default(0)\n\n  // Risk-based delay\n  riskScore  Int\n  delayUntil DateTime // When the request can be processed\n\n  // Metadata\n  ipAddress   String\n  userAgent   String\n  createdAt   DateTime  @default(now())\n  expiresAt   DateTime // Request expires after 24 hours\n  completedAt DateTime?\n\n  @@index([userId])\n  @@index([verificationToken])\n  @@index([status, delayUntil])\n}\n\nmodel Lead {\n  id              String     @id @default(cuid())\n  orgId           String\n  publicId        String     @unique\n  sourceType      LeadSource\n  identityHash    String\n  company         String?\n  contactName     String?\n  email           String?\n  phoneE164       String?\n  website         String?\n  serviceCode     String?\n  zip             String?\n  enrichmentJson  Json       @default(\"{}\")\n  aiScore         Int        @default(0)\n  scoreFactors    Json       @default(\"{}\")\n  /// systemGenerated: true if lead came from SAM/automated import\n  systemGenerated Boolean    @default(false)\n  /// convertedAt: timestamp when lead was converted (if status changes to converted)\n  convertedAt     DateTime?\n  /// rfp: raw RFP metadata from SAM.gov\n  rfp             Json?\n  /// Status of the lead. Stored as an enum rather than string for consistency.\n  status          LeadStatus @default(NEW)\n  createdAt       DateTime   @default(now())\n  updatedAt       DateTime   @updatedAt\n  city            String?\n  notes           String?\n  sourceDetail    String?\n  state           String?\n  postalCode      String?    @db.VarChar(20)\n  address         String?\n  addressLine1    String?\n  addressLine2    String?\n  country         String?\n\n  org             Org               @relation(fields: [orgId], references: [id])\n  LeadInvoiceLine LeadInvoiceLine[]\n\n  @@index([orgId, createdAt])\n  @@index([orgId, convertedAt])\n  @@index([orgId, status])\n  @@index([orgId, sourceType])\n  @@index([orgId, identityHash])\n}\n\nmodel Customer {\n  id           String   @id @default(cuid())\n  orgId        String\n  publicId     String   @unique\n  company      String?\n  primaryName  String?\n  primaryEmail String?\n  primaryPhone String?\n  notes        String?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  org           Org           @relation(fields: [orgId], references: [id])\n  invoices      Invoice[]\n  jobs          Job[]\n  opportunities Opportunity[]\n}\n\nmodel Opportunity {\n  id             String    @id @default(cuid())\n  orgId          String\n  customerId     String\n  valueType      ValueType @default(RELATIONSHIP)\n  estValue       Decimal?  @db.Decimal(12, 2)\n  stage          String    @default(\"new\")\n  ownerId        String?\n  sourceLeadId   String?\n  classification Json      @default(\"{}\")\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  customer Customer @relation(fields: [customerId], references: [id])\n  org      Org      @relation(fields: [orgId], references: [id])\n}\n\nmodel Invoice {\n  id         String        @id @default(cuid())\n  orgId      String\n  customerId String?\n  amount     Decimal       @db.Decimal(12, 2)\n  status     String        @default(\"draft\")\n  issuedAt   DateTime      @default(now())\n  items      Json          @default(\"[]\")\n  lineItems  InvoiceLine[]\n\n  customer Customer? @relation(fields: [customerId], references: [id])\n  org      Org       @relation(fields: [orgId], references: [id])\n  payments Payment[]\n}\n\nmodel Payment {\n  id         String   @id @default(cuid())\n  orgId      String\n  invoiceId  String?\n  amount     Decimal  @db.Decimal(12, 2)\n  method     String   @default(\"stripe\")\n  receivedAt DateTime @default(now())\n  reference  String?\n\n  // Enhancements for Stripe/dunning\n  status                String    @default(\"succeeded\") // 'pending' | 'succeeded' | 'failed' | 'refunded'\n  stripePaymentIntentId String?\n  stripeChargeId        String?\n  failureReason         String?\n  retryCount            Int       @default(0)\n  lastRetryAt           DateTime?\n\n  invoice Invoice? @relation(fields: [invoiceId], references: [id])\n  org     Org      @relation(fields: [orgId], references: [id])\n\n  @@index([orgId, status])\n  @@index([stripePaymentIntentId])\n  @@index([stripeChargeId])\n}\n\nmodel Rfp {\n  id          String    @id @default(cuid())\n  orgId       String\n  publicId    String    @unique\n  sourceSite  String\n  title       String\n  dueDate     DateTime?\n  docs        Json      @default(\"[]\")\n  aiBidFit    Int?\n  aiPriceHint Json      @default(\"{}\")\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  jobs Job[]\n  org  Org   @relation(fields: [orgId], references: [id])\n}\n\nmodel Job {\n  id         String   @id @default(cuid())\n  orgId      String\n  customerId String?\n  rfpId      String?\n  status     String   @default(\"planned\")\n  schedule   Json     @default(\"{}\")\n  assignedTo String?\n  checklist  Json     @default(\"[]\")\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  customer Customer? @relation(fields: [customerId], references: [id])\n  org      Org       @relation(fields: [orgId], references: [id])\n  rfp      Rfp?      @relation(fields: [rfpId], references: [id])\n}\n\nmodel Referral {\n  id            String    @id @default(cuid())\n  orgId         String\n  employeeId    String?\n  referredName  String\n  referredEmail String?\n  referredPhone String?\n  status        String    @default(\"new\")\n  convertedAt   DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id])\n}\n\nmodel BillingLedger {\n  id        String     @id @default(cuid())\n  orgId     String\n  type      LedgerType\n  amount    Decimal    @db.Decimal(12, 2)\n  meta      Json       @default(\"{}\")\n  createdAt DateTime   @default(now())\n\n  org Org @relation(fields: [orgId], references: [id])\n\n  @@index([orgId, type])\n}\n\n/// LeadInvoice represents a monthly invoice for converted leads. This is separate from the\n/// existing Invoice model used for customers/jobs. It aggregates lead conversions and\n/// includes metadata to support billing and optional Stripe integration.\nmodel LeadInvoice {\n  id              String   @id @default(cuid())\n  orgId           String?\n  org             Org?     @relation(\"OrgLeadInvoices\", fields: [orgId], references: [id])\n  number          String   @unique\n  periodFrom      DateTime\n  periodTo        DateTime\n  status          String // \"draft\" | \"open\" | \"paid\" | \"void\" | \"uncollectible\"\n  subtotalCents   Int\n  taxCents        Int      @default(0)\n  totalCents      Int\n  currency        String   @default(\"usd\")\n  stripeInvoiceId String?\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n  /// Number of leads billed on this invoice (to support flat-per-lead billing)\n  leadCount       Int      @default(0)\n\n  lines LeadInvoiceLine[]\n}\n\n/// LeadInvoiceLine represents an individual line item on a LeadInvoice. Each line is typically\n/// associated with a converted lead, but generic fee/credit lines are also supported.\nmodel LeadInvoiceLine {\n  id        String      @id @default(cuid())\n  invoiceId String\n  invoice   LeadInvoice @relation(fields: [invoiceId], references: [id])\n\n  // Optional association back to a Lead for traceability.\n  leadId String?\n  lead   Lead?   @relation(fields: [leadId], references: [id])\n\n  description    String\n  quantity       Int      @default(1)\n  unitPriceCents Int\n  amountCents    Int\n  source         String?\n  createdAt      DateTime @default(now())\n\n  @@index([invoiceId])\n  @@index([leadId])\n}\n\nmodel AuditLog {\n  id          String   @id @default(cuid())\n  orgId       String\n  actorUserId String?\n  /// The entity type affected (e.g. 'lead', 'invoice', 'pricing', etc.)\n  entity      String\n  /// Identifier of the record affected\n  entityId    String?\n  /// Name of the field that was changed (nullable for record-level actions)\n  field       String?\n  /// Previous value (JSON) before the change, if applicable\n  oldValue    Json?\n  /// New value (JSON) after the change, if applicable\n  newValue    Json?\n  /// Free-form reason or comment describing why the change was made\n  reason      String?\n  createdAt   DateTime @default(now())\n\n  org Org @relation(fields: [orgId], references: [id])\n}\n\nenum Role {\n  OWNER\n  MANAGER\n  STAFF\n  PROVIDER\n  ACCOUNTANT\n}\n\nenum LeadSource {\n  COLD\n  HOT\n  RFP\n  MANUAL_EMPLOYEE_REFERRAL\n  MANUAL_EXISTING_CUSTOMER\n  MANUAL_NEW_CUSTOMER\n  MANUAL_OTHER\n  /// System-generated leads imported from external sources like SAM.gov\n  SYSTEM\n  /// Employee referrals (for internal referral program)\n  EMPLOYEE_REFERRAL\n  /// Manually added leads not fitting other categories\n  MANUAL\n  /// Leads imported from Local Service Ads or other lead sources\n  LSA\n}\n\nenum ValueType {\n  RELATIONSHIP\n  JOB\n}\n\nenum LedgerType {\n  CONVERSION_FEE\n  PACK_PURCHASE\n}\n\n// === RBAC (namespaced to avoid collision with your existing Role enum) ===\n\nmodel RbacPermission {\n  id          String   @id @default(cuid())\n  code        String   @unique // e.g. \"lead:create\"\n  description String?\n  createdAt   DateTime @default(now())\n\n  rolePerms RbacRolePermission[]\n}\n\nmodel RbacRole {\n  id        String   @id @default(cuid())\n  orgId     String?\n  // 👇 keep the named relation to match Org.rbacRoles\n  org       Org?     @relation(\"OrgRbacRoles\", fields: [orgId], references: [id])\n  name      String\n  slug      String\n  isSystem  Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  rolePerms RbacRolePermission[]\n  userRoles RbacUserRole[]\n\n  @@unique([orgId, slug])\n}\n\nmodel RbacRolePermission {\n  roleId       String\n  permissionId String\n\n  role       RbacRole       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  permission RbacPermission @relation(fields: [permissionId], references: [id], onDelete: Cascade)\n\n  @@id([roleId, permissionId])\n}\n\nmodel RbacUserRole {\n  id     String  @id @default(cuid())\n  userId String\n  orgId  String?\n  roleId String\n\n  // 👇 named relations to match Org/User sides\n  user User     @relation(\"UserRbacUserRoles\", fields: [userId], references: [id], onDelete: Cascade)\n  org  Org?     @relation(\"OrgRbacUserRoles\", fields: [orgId], references: [id])\n  role RbacRole @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, roleId, orgId])\n}\n\n/// ProviderConfig holds provider-level secrets and configuration separate from any organization.\n/// These values are used for system integrations that the provider controls, such as SAM.gov or\n/// Stripe secrets used when billing clients.  Only one row is typically used.  Use a simple\n/// admin interface to update these values.\nmodel ProviderConfig {\n  id              String   @id @default(cuid())\n  samApiKey       String?\n  stripeSecretKey String?\n  otherConfig     Json?    @default(\"{}\")\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n}\n\n/// PricingPlan defines how an organization is billed for leads. Each org can have only\n/// one pricing plan record. A plan specifies the billing model (e.g. per-lead fixed fee)\n/// and can include tiered structures or prepaid units via includedUnits and tiersJson.\nmodel PricingPlan {\n  // We keep FK as primary key to enforce 1:1 with Org\n  orgId String @id\n  /// Relation to organization (named to match Org.pricingPlan)\n  org   Org    @relation(\"OrgPricingPlan\", fields: [orgId], references: [id])\n\n  /// Billing model used for this organization (per-lead, tiered, subscription, or hybrid)\n  model         PricingModel @default(PER_LEAD_FIXED)\n  /// ISO currency code (e.g. \"usd\")\n  currency      String       @default(\"usd\")\n  /// Fixed unit price in cents for per-lead billing\n  unitAmount    Int          @default(10000)\n  /// JSON-encoded pricing tiers (used when model is TIERED or HYBRID)\n  tiersJson     Json?\n  /// Number of prepaid leads included before billing starts\n  includedUnits Int          @default(0)\n}\n\n/// PricingModel enumerates the possible billing models for lead invoices.  The default is\n/// PER_LEAD_FIXED which charges a flat fee per converted lead.  Additional models support\n/// tiered pricing, subscription (monthly base fee), or hybrid structures.\nenum PricingModel {\n  PER_LEAD_FIXED\n  TIERED\n  SUBSCRIPTION\n  HYBRID\n}\n\n/// LeadStatus defines the possible states of a lead in the pipeline.  The default is\n/// NEW and transitions to CONVERTED when the lead is converted into a paying job.\nenum LeadStatus {\n  NEW\n  CONVERTED\n}\n\n// AI Plan Tiers for Monetization - CLIENT SUBSCRIPTION TIERS\nenum AiPlan {\n  BASE // MVP: Free lead generation, $100/conversion only\n  PRO // $97/month: Advanced AI, unlimited leads, priority support\n  ELITE // $297/month: Market intelligence, priority RFPs, dedicated support\n}\n\n// Individual AI API call tracking for cost monitoring and analytics\nmodel AiUsageEvent {\n  id          String   @id @default(cuid())\n  orgId       String\n  userId      String? // Optional user who triggered the call\n  feature     String // 'lead_analysis', 'rfp_strategy', 'pricing', 'response_gen'\n  model       String // 'gpt-4o-mini', etc\n  tokensIn    Int // Input tokens consumed\n  tokensOut   Int // Output tokens generated\n  costUsd     Decimal  @db.Decimal(8, 6) // Actual cost in USD (precise to $0.000001)\n  creditsUsed Int // Credits deducted from user's balance\n  requestId   String? // For request correlation and debugging\n  createdAt   DateTime @default(now())\n\n  org Org @relation(\"OrgAiUsageEvents\", fields: [orgId], references: [id])\n\n  @@index([orgId, createdAt])\n  @@index([orgId, feature])\n}\n\n// Monthly AI usage rollups for dashboard and billing\nmodel AiMonthlySummary {\n  id          String   @id @default(cuid())\n  orgId       String\n  monthKey    String // Format: \"2025-01\" for January 2025\n  tokensIn    Int      @default(0)\n  tokensOut   Int      @default(0)\n  costUsd     Decimal  @default(0) @db.Decimal(8, 2)\n  creditsUsed Int      @default(0)\n  callCount   Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  org Org @relation(\"OrgAiMonthlySummaries\", fields: [orgId], references: [id])\n\n  @@unique([orgId, monthKey])\n  @@index([monthKey])\n}\n\n// ============================================================================\n// PROVIDER OPERATIONS - ACTIVITY TIMELINE\n// ============================================================================\n\n/// Activity tracks cross-entity timeline events for provider operations\n/// Used for unified activity feeds across leads, invoices, incidents, etc.\nmodel Activity {\n  id         String   @id @default(cuid())\n  orgId      String\n  actorType  String // 'system' | 'user' | 'machine'\n  actorId    String?\n  entityType String // 'lead' | 'invoice' | 'incident' | 'subscription' | etc.\n  entityId   String\n  action     String // 'created' | 'updated' | 'converted' | 'paid' | etc.\n  meta       Json     @default(\"{}\")\n  createdAt  DateTime @default(now())\n\n  org Org @relation(\"OrgActivities\", fields: [orgId], references: [id])\n\n  @@index([orgId, entityType, entityId, createdAt])\n  @@index([orgId, createdAt])\n}\n\n// ============================================================================\n// PROVIDER OPERATIONS - SUBSCRIPTION MANAGEMENT\n// ============================================================================\n\n/// Subscription tracks plan lifecycle for provider billing operations\n/// Supports MRR/ARR calculations, churn analysis, and plan changes\nmodel Subscription {\n  id         String    @id @default(cuid())\n  orgId      String\n  plan       String // Plan identifier (e.g., 'starter', 'professional', 'enterprise')\n  status     String // 'trialing' | 'active' | 'past_due' | 'canceled'\n  startedAt  DateTime\n  canceledAt DateTime?\n  renewsAt   DateTime?\n  priceCents Int // Monthly price in cents\n  meta       Json      @default(\"{}\")\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n\n  org Org @relation(\"OrgSubscriptions\", fields: [orgId], references: [id])\n\n  @@index([orgId, status])\n  @@index([status, renewsAt])\n}\n\n// ============================================================================\n// PROVIDER OPERATIONS - USAGE METERING\n// ============================================================================\n\n/// UsageMeter records raw usage units before rating/billing\n/// Used for usage-based billing and cost tracking\nmodel UsageMeter {\n  id          String   @id @default(cuid())\n  orgId       String\n  meter       String // Meter identifier (e.g., 'emails_sent', 'api_calls', 'storage_gb')\n  quantity    Int // Raw quantity for the window\n  windowStart DateTime // Start of measurement window\n  windowEnd   DateTime // End of measurement window\n  createdAt   DateTime @default(now())\n\n  org Org @relation(\"OrgUsageMeters\", fields: [orgId], references: [id])\n\n  @@index([orgId, meter, windowStart])\n  @@index([windowStart, windowEnd])\n}\n\n// ============================================================================\n// PROVIDER OPERATIONS - ADD-ON PURCHASES\n// ============================================================================\n\n/// AddonPurchase tracks one-off purchases and refunds\n/// Used for add-on revenue tracking and reconciliation\nmodel AddonPurchase {\n  id          String    @id @default(cuid())\n  orgId       String\n  sku         String // SKU identifier (e.g., 'extra_storage_100gb', 'priority_support')\n  amount      Decimal   @db.Decimal(12, 2)\n  status      String // 'purchased' | 'refunded'\n  purchasedAt DateTime  @default(now())\n  refundedAt  DateTime?\n  meta        Json      @default(\"{}\")\n\n  org Org @relation(\"OrgAddonPurchases\", fields: [orgId], references: [id])\n\n  @@index([orgId, sku, status])\n  @@index([purchasedAt])\n}\n\n// ============================================================================\n// PROVIDER OPERATIONS - FEDERATION KEY MANAGEMENT\n// ============================================================================\n\n/// FederationKey stores HMAC keys for provider-side federation\n/// Used for secure machine-to-machine authentication\nmodel FederationKey {\n  id         String    @id @default(cuid())\n  tenantId   String // Tenant identifier (orgId or external ID)\n  keyId      String    @unique // Public key identifier\n  secretHash String // Hashed secret for HMAC verification\n  scope      String // 'events' | 'usage' | 'billing' | 'all'\n  createdAt  DateTime  @default(now())\n  disabledAt DateTime? // When key was disabled (soft delete)\n\n  @@index([tenantId, scope])\n  @@index([keyId, disabledAt])\n}\n\n// ============================================================================\n// PROVIDER CONTROL CENTER - NEW MODELS (GPT-5)\n// ============================================================================\n\n/// Incident lifecycle tracking with SLA fields\nmodel Incident {\n  id                  String           @id @default(cuid())\n  orgId               String\n  severity            IncidentSeverity\n  status              IncidentStatus   @default(OPEN)\n  title               String\n  description         String\n  assigneeUserId      String?\n  slaResponseDeadline DateTime?\n  slaResolveDeadline  DateTime?\n  acknowledgedAt      DateTime?\n  resolvedAt          DateTime?\n  closedAt            DateTime?\n  createdAt           DateTime         @default(now())\n  updatedAt           DateTime         @updatedAt\n\n  org Org @relation(\"OrgIncidents\", fields: [orgId], references: [id])\n\n  @@index([orgId, status, createdAt])\n  @@index([orgId, severity])\n}\n\n/// InvoiceLine ties granular charges to Invoices\nmodel InvoiceLine {\n  id             String          @id @default(cuid())\n  invoiceId      String\n  description    String\n  lineType       InvoiceLineType\n  quantity       Int             @default(1)\n  unitPriceCents Int\n  amountCents    Int\n  sourceType     String?\n  sourceId       String?\n  createdAt      DateTime        @default(now())\n\n  invoice Invoice @relation(fields: [invoiceId], references: [id])\n\n  @@index([invoiceId])\n  @@index([sourceType, sourceId])\n}\n\n/// Provider in-app notifications\nmodel Notification {\n  id        String    @id @default(cuid())\n  orgId     String?\n  audience  String // 'provider' | 'developer'\n  type      String\n  title     String\n  body      String\n  severity  String // 'info' | 'warning' | 'error'\n  readAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  org Org? @relation(\"OrgNotifications\", fields: [orgId], references: [id])\n\n  @@index([orgId, createdAt])\n}\n\nenum IncidentSeverity {\n  P1\n  P2\n  P3\n}\n\nenum IncidentStatus {\n  OPEN\n  ACK\n  IN_PROGRESS\n  RESOLVED\n  CLOSED\n}\n\nenum InvoiceLineType {\n  subscription\n  usage\n  addon\n  one_time\n}\n",
  "inlineSchemaHash": "cf9b165cf2919fddeae7c24baa896ea8da123563ec333f6f31613a7201540dfa",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Org\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featureFlags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aiMonthlyBudgetCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiCreditBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiPlan\",\"kind\":\"enum\",\"type\":\"AiPlan\"},{\"name\":\"aiAlerts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionStartDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptionEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToOrg\"},{\"name\":\"ledger\",\"kind\":\"object\",\"type\":\"BillingLedger\",\"relationName\":\"BillingLedgerToOrg\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrg\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToOrg\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToOrg\"},{\"name\":\"leads\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToOrg\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"OpportunityToOrg\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrgToPayment\"},{\"name\":\"referrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"OrgToReferral\"},{\"name\":\"rfps\",\"kind\":\"object\",\"type\":\"Rfp\",\"relationName\":\"OrgToRfp\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrgToUser\"},{\"name\":\"rbacRoles\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"OrgRbacRoles\"},{\"name\":\"rbacUserRoles\",\"kind\":\"object\",\"type\":\"RbacUserRole\",\"relationName\":\"OrgRbacUserRoles\"},{\"name\":\"leadInvoices\",\"kind\":\"object\",\"type\":\"LeadInvoice\",\"relationName\":\"OrgLeadInvoices\"},{\"name\":\"pricingPlan\",\"kind\":\"object\",\"type\":\"PricingPlan\",\"relationName\":\"OrgPricingPlan\"},{\"name\":\"aiUsageEvents\",\"kind\":\"object\",\"type\":\"AiUsageEvent\",\"relationName\":\"OrgAiUsageEvents\"},{\"name\":\"aiMonthlySummaries\",\"kind\":\"object\",\"type\":\"AiMonthlySummary\",\"relationName\":\"OrgAiMonthlySummaries\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"OrgActivities\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrgSubscriptions\"},{\"name\":\"usageMeters\",\"kind\":\"object\",\"type\":\"UsageMeter\",\"relationName\":\"OrgUsageMeters\"},{\"name\":\"addonPurchases\",\"kind\":\"object\",\"type\":\"AddonPurchase\",\"relationName\":\"OrgAddonPurchases\"},{\"name\":\"incidents\",\"kind\":\"object\",\"type\":\"Incident\",\"relationName\":\"OrgIncidents\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"OrgNotifications\"},{\"name\":\"brandConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"settingsJson\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mustChangePassword\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isLocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"failedLoginAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastFailedLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastSuccessfulLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastPasswordChange\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totpSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totpEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"backupCodesHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToUser\"},{\"name\":\"rbacUserRoles\",\"kind\":\"object\",\"type\":\"RbacUserRole\",\"relationName\":\"UserRbacUserRoles\"},{\"name\":\"recoveryCodes\",\"kind\":\"object\",\"type\":\"UserRecoveryCode\",\"relationName\":\"UserToUserRecoveryCode\"},{\"name\":\"breakglassAccount\",\"kind\":\"object\",\"type\":\"UserBreakglassAccount\",\"relationName\":\"UserToUserBreakglassAccount\"},{\"name\":\"securityQuestions\",\"kind\":\"object\",\"type\":\"UserSecurityQuestion\",\"relationName\":\"UserToUserSecurityQuestion\"},{\"name\":\"loginHistory\",\"kind\":\"object\",\"type\":\"UserLoginHistory\",\"relationName\":\"UserToUserLoginHistory\"},{\"name\":\"deviceFingerprints\",\"kind\":\"object\",\"type\":\"UserDeviceFingerprint\",\"relationName\":\"UserToUserDeviceFingerprint\"}],\"dbName\":null},\"UserRecoveryCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codeHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usedFrom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRecoveryCode\"}],\"dbName\":null},\"UserSecurityQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answerHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSecurityQuestion\"}],\"dbName\":null},\"UserBreakglassAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encryptedEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encryptedPasswordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encryptionIV\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"activationCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canAutoActivate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"minDelayMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBreakglassAccount\"}],\"dbName\":null},\"UserDeviceFingerprint\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fingerprint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isTrusted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"trustScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"loginCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserDeviceFingerprint\"}],\"dbName\":null},\"UserLoginHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceFingerprint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"riskFactors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserLoginHistory\"}],\"dbName\":null},\"BreakglassActivationLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"riskFactors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"verificationSteps\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifiedAdmins\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RecoveryRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codeExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"codeAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"riskScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delayUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Lead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceType\",\"kind\":\"enum\",\"type\":\"LeadSource\"},{\"name\":\"identityHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneE164\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enrichmentJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scoreFactors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"systemGenerated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"convertedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rfp\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeadStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceDetail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"LeadToOrg\"},{\"name\":\"LeadInvoiceLine\",\"kind\":\"object\",\"type\":\"LeadInvoiceLine\",\"relationName\":\"LeadToLeadInvoiceLine\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"CustomerToOrg\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CustomerToJob\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"CustomerToOpportunity\"}],\"dbName\":null},\"Opportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valueType\",\"kind\":\"enum\",\"type\":\"ValueType\"},{\"name\":\"estValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"stage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceLeadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classification\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOpportunity\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OpportunityToOrg\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lineItems\",\"kind\":\"object\",\"type\":\"InvoiceLine\",\"relationName\":\"InvoiceToInvoiceLine\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"InvoiceToOrg\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"InvoiceToPayment\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePaymentIntentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeChargeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failureReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastRetryAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToPayment\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToPayment\"}],\"dbName\":null},\"Rfp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceSite\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"docs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiBidFit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiPriceHint\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToRfp\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToRfp\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rfpId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schedule\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checklist\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToJob\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"JobToOrg\"},{\"name\":\"rfp\",\"kind\":\"object\",\"type\":\"Rfp\",\"relationName\":\"JobToRfp\"}],\"dbName\":null},\"Referral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToReferral\"}],\"dbName\":null},\"BillingLedger\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"LedgerType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"BillingLedgerToOrg\"}],\"dbName\":null},\"LeadInvoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgLeadInvoices\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodTo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtotalCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"taxCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeInvoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lines\",\"kind\":\"object\",\"type\":\"LeadInvoiceLine\",\"relationName\":\"LeadInvoiceToLeadInvoiceLine\"}],\"dbName\":null},\"LeadInvoiceLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"LeadInvoice\",\"relationName\":\"LeadInvoiceToLeadInvoiceLine\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToLeadInvoiceLine\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPriceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actorUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldValue\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"newValue\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"AuditLogToOrg\"}],\"dbName\":null},\"RbacPermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rolePerms\",\"kind\":\"object\",\"type\":\"RbacRolePermission\",\"relationName\":\"RbacPermissionToRbacRolePermission\"}],\"dbName\":null},\"RbacRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRbacRoles\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSystem\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rolePerms\",\"kind\":\"object\",\"type\":\"RbacRolePermission\",\"relationName\":\"RbacRoleToRbacRolePermission\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"RbacUserRole\",\"relationName\":\"RbacRoleToRbacUserRole\"}],\"dbName\":null},\"RbacRolePermission\":{\"fields\":[{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RbacRoleToRbacRolePermission\"},{\"name\":\"permission\",\"kind\":\"object\",\"type\":\"RbacPermission\",\"relationName\":\"RbacPermissionToRbacRolePermission\"}],\"dbName\":null},\"RbacUserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserRbacUserRoles\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRbacUserRoles\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RbacRoleToRbacUserRole\"}],\"dbName\":null},\"ProviderConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"samApiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSecretKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otherConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PricingPlan\":{\"fields\":[{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgPricingPlan\"},{\"name\":\"model\",\"kind\":\"enum\",\"type\":\"PricingModel\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tiersJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"includedUnits\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"AiUsageEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokensIn\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokensOut\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"creditsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAiUsageEvents\"}],\"dbName\":null},\"AiMonthlySummary\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monthKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokensIn\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokensOut\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"creditsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"callCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAiMonthlySummaries\"}],\"dbName\":null},\"Activity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actorType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgActivities\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"renewsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"priceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgSubscriptions\"}],\"dbName\":null},\"UsageMeter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"windowStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"windowEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgUsageMeters\"}],\"dbName\":null},\"AddonPurchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refundedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAddonPurchases\"}],\"dbName\":null},\"FederationKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secretHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"disabledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Incident\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"IncidentSeverity\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IncidentStatus\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigneeUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slaResponseDeadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slaResolveDeadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acknowledgedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgIncidents\"}],\"dbName\":null},\"InvoiceLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lineType\",\"kind\":\"enum\",\"type\":\"InvoiceLineType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPriceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToInvoiceLine\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgNotifications\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

