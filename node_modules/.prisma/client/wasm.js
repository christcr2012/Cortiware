
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrgScalarFieldEnum = {
  id: 'id',
  name: 'name',
  featureFlags: 'featureFlags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  industryType: 'industryType',
  naicsCode: 'naicsCode',
  sicCode: 'sicCode',
  industryConfig: 'industryConfig',
  activeCapabilities: 'activeCapabilities',
  plan: 'plan',
  industry: 'industry',
  externalCustomerId: 'externalCustomerId',
  settings: 'settings',
  aiMonthlyBudgetCents: 'aiMonthlyBudgetCents',
  aiCreditBalance: 'aiCreditBalance',
  aiPlan: 'aiPlan',
  aiAlerts: 'aiAlerts',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  subscriptionStatus: 'subscriptionStatus',
  subscriptionStartDate: 'subscriptionStartDate',
  subscriptionEndDate: 'subscriptionEndDate',
  brandConfig: 'brandConfig',
  settingsJson: 'settingsJson'
};

exports.Prisma.IndustryPackScalarFieldEnum = {
  id: 'id',
  industryCode: 'industryCode',
  displayName: 'displayName',
  description: 'description',
  naicsRanges: 'naicsRanges',
  sicRanges: 'sicRanges',
  leadFields: 'leadFields',
  workflowSteps: 'workflowSteps',
  catalogItems: 'catalogItems',
  contractTemplates: 'contractTemplates',
  complianceReqs: 'complianceReqs',
  rateCards: 'rateCards',
  formulaSet: 'formulaSet',
  measurementUnits: 'measurementUnits',
  requiredCapabilities: 'requiredCapabilities',
  optionalCapabilities: 'optionalCapabilities',
  hiddenCapabilities: 'hiddenCapabilities',
  isActive: 'isActive',
  version: 'version',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CapabilityScalarFieldEnum = {
  id: 'id',
  code: 'code',
  displayName: 'displayName',
  description: 'description',
  category: 'category',
  isCore: 'isCore',
  requiresSubscription: 'requiresSubscription',
  minimumPlan: 'minimumPlan',
  apiEndpoints: 'apiEndpoints',
  uiComponents: 'uiComponents',
  permissions: 'permissions',
  dependencies: 'dependencies',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IndustryCapabilityScalarFieldEnum = {
  id: 'id',
  industryPackId: 'industryPackId',
  capabilityId: 'capabilityId',
  isRequired: 'isRequired',
  isRecommended: 'isRecommended',
  isHidden: 'isHidden',
  defaultEnabled: 'defaultEnabled',
  industryConfig: 'industryConfig',
  displayOrder: 'displayOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  email: 'email',
  name: 'name',
  role: 'role',
  passwordHash: 'passwordHash',
  mustChangePassword: 'mustChangePassword',
  emailVerified: 'emailVerified',
  status: 'status',
  passwordResetToken: 'passwordResetToken',
  passwordResetExpiry: 'passwordResetExpiry',
  roleScope: 'roleScope',
  audience: 'audience',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionId: 'sessionId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  deviceInfo: 'deviceInfo',
  location: 'location',
  isActive: 'isActive',
  lastSeenAt: 'lastSeenAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.UserTwoFactorScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  isEnabled: 'isEnabled',
  totpSecret: 'totpSecret',
  backupCodes: 'backupCodes',
  phoneNumber: 'phoneNumber',
  verifiedAt: 'verifiedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProviderSettingsScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  totpSecret: 'totpSecret',
  displayName: 'displayName',
  permissions: 'permissions',
  isActive: 'isActive',
  lastLoginAt: 'lastLoginAt',
  lastLoginIp: 'lastLoginIp',
  failedLoginCount: 'failedLoginCount',
  lockedUntil: 'lockedUntil',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ProviderAuditLogScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  action: 'action',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  sessionId: 'sessionId',
  isRecoveryMode: 'isRecoveryMode',
  timestamp: 'timestamp'
};

exports.Prisma.ThemeConfigScalarFieldEnum = {
  id: 'id',
  themeId: 'themeId',
  name: 'name',
  description: 'description',
  category: 'category',
  orgId: 'orgId',
  isGlobal: 'isGlobal',
  isActive: 'isActive',
  customColors: 'customColors',
  customPatterns: 'customPatterns',
  customTypography: 'customTypography',
  brandAssets: 'brandAssets',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.ThemeUsageScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  themeId: 'themeId',
  userId: 'userId',
  appliedAt: 'appliedAt',
  sessionId: 'sessionId',
  userAgent: 'userAgent'
};

exports.Prisma.LeadScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  publicId: 'publicId',
  sourceType: 'sourceType',
  identityHash: 'identityHash',
  company: 'company',
  contactName: 'contactName',
  email: 'email',
  phoneE164: 'phoneE164',
  website: 'website',
  stage: 'stage',
  ownerId: 'ownerId',
  archived: 'archived',
  version: 'version',
  buId: 'buId',
  convertedToCustomerId: 'convertedToCustomerId',
  convertedToOrganizationId: 'convertedToOrganizationId',
  convertedToContactId: 'convertedToContactId',
  conversionAuditId: 'conversionAuditId',
  industryType: 'industryType',
  leadType: 'leadType',
  naicsCode: 'naicsCode',
  sicCode: 'sicCode',
  serviceCode: 'serviceCode',
  zip: 'zip',
  city: 'city',
  state: 'state',
  postalCode: 'postalCode',
  address: 'address',
  addressLine1: 'addressLine1',
  addressLine2: 'addressLine2',
  country: 'country',
  customFields: 'customFields',
  enrichmentJson: 'enrichmentJson',
  aiScore: 'aiScore',
  scoreFactors: 'scoreFactors',
  systemGenerated: 'systemGenerated',
  convertedAt: 'convertedAt',
  rfp: 'rfp',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  notes: 'notes',
  sourceDetail: 'sourceDetail'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  publicId: 'publicId',
  company: 'company',
  primaryName: 'primaryName',
  primaryEmail: 'primaryEmail',
  primaryPhone: 'primaryPhone',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OpportunityScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  organizationId: 'organizationId',
  customerId: 'customerId',
  valueType: 'valueType',
  estValue: 'estValue',
  stage: 'stage',
  ownerId: 'ownerId',
  sourceLeadId: 'sourceLeadId',
  classification: 'classification',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  title: 'title',
  probability: 'probability',
  closeDate: 'closeDate',
  leadId: 'leadId',
  version: 'version',
  buId: 'buId'
};

exports.Prisma.QuoteScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  opportunityId: 'opportunityId',
  customerId: 'customerId',
  title: 'title',
  description: 'description',
  items: 'items',
  subtotal: 'subtotal',
  tax: 'tax',
  total: 'total',
  status: 'status',
  validUntil: 'validUntil',
  acceptedAt: 'acceptedAt',
  rejectedAt: 'rejectedAt',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  email: 'email',
  phone: 'phone',
  title: 'title',
  department: 'department',
  organizationId: 'organizationId',
  isPrimary: 'isPrimary',
  mobilePhone: 'mobilePhone',
  workPhone: 'workPhone',
  fax: 'fax',
  website: 'website',
  address: 'address',
  linkedIn: 'linkedIn',
  twitter: 'twitter',
  ownerId: 'ownerId',
  source: 'source',
  status: 'status',
  notes: 'notes',
  tags: 'tags',
  customFields: 'customFields',
  version: 'version',
  buId: 'buId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastContactedAt: 'lastContactedAt'
};

exports.Prisma.CrmTaskScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  entityType: 'entityType',
  entityId: 'entityId',
  title: 'title',
  dueAt: 'dueAt',
  assigneeUserId: 'assigneeUserId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CrmNoteScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  entityType: 'entityType',
  entityId: 'entityId',
  body: 'body',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CrmFileScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  entityType: 'entityType',
  entityId: 'entityId',
  filename: 'filename',
  mimeType: 'mimeType',
  sizeBytes: 'sizeBytes',
  storageKey: 'storageKey',
  createdAt: 'createdAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  domain: 'domain',
  industry: 'industry',
  size: 'size',
  annualRevenue: 'annualRevenue',
  website: 'website',
  phone: 'phone',
  ownerId: 'ownerId',
  archived: 'archived',
  version: 'version',
  buId: 'buId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversionAuditScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  organizationId: 'organizationId',
  userId: 'userId',
  action: 'action',
  resource: 'resource',
  meta: 'meta',
  ip: 'ip',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  amount: 'amount',
  status: 'status',
  issuedAt: 'issuedAt',
  items: 'items'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  invoiceId: 'invoiceId',
  amount: 'amount',
  method: 'method',
  receivedAt: 'receivedAt',
  reference: 'reference'
};

exports.Prisma.RfpScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  publicId: 'publicId',
  sourceSite: 'sourceSite',
  title: 'title',
  dueDate: 'dueDate',
  docs: 'docs',
  aiBidFit: 'aiBidFit',
  aiPriceHint: 'aiPriceHint',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  rfpId: 'rfpId',
  status: 'status',
  schedule: 'schedule',
  assignedTo: 'assignedTo',
  checklist: 'checklist',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  employeeId: 'employeeId',
  referredName: 'referredName',
  referredEmail: 'referredEmail',
  referredPhone: 'referredPhone',
  status: 'status',
  convertedAt: 'convertedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BillingLedgerScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  type: 'type',
  amount: 'amount',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.LeadInvoiceScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  number: 'number',
  periodFrom: 'periodFrom',
  periodTo: 'periodTo',
  status: 'status',
  subtotalCents: 'subtotalCents',
  taxCents: 'taxCents',
  totalCents: 'totalCents',
  currency: 'currency',
  stripeInvoiceId: 'stripeInvoiceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  leadCount: 'leadCount'
};

exports.Prisma.LeadInvoiceLineScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  invoiceId: 'invoiceId',
  leadId: 'leadId',
  description: 'description',
  quantity: 'quantity',
  unitPriceCents: 'unitPriceCents',
  amountCents: 'amountCents',
  source: 'source',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  actorId: 'actorId',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  delta: 'delta',
  createdAt: 'createdAt'
};

exports.Prisma.RbacPermissionScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.RbacRoleScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  slug: 'slug',
  isSystem: 'isSystem',
  createdAt: 'createdAt'
};

exports.Prisma.RbacRolePermissionScalarFieldEnum = {
  roleId: 'roleId',
  permissionId: 'permissionId'
};

exports.Prisma.RbacUserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orgId: 'orgId',
  roleId: 'roleId'
};

exports.Prisma.RoleVersionScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  orgId: 'orgId',
  version: 'version',
  name: 'name',
  description: 'description',
  changeReason: 'changeReason',
  changedBy: 'changedBy',
  isActive: 'isActive',
  permissions: 'permissions',
  config: 'config',
  scopeConfig: 'scopeConfig',
  createdAt: 'createdAt'
};

exports.Prisma.RoleTemplateScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  description: 'description',
  industry: 'industry',
  category: 'category',
  isSystemTemplate: 'isSystemTemplate',
  isPublic: 'isPublic',
  usageCount: 'usageCount',
  permissions: 'permissions',
  config: 'config',
  scopeConfig: 'scopeConfig',
  tags: 'tags',
  complexity: 'complexity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.PermissionBundleScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  description: 'description',
  permissions: 'permissions',
  category: 'category',
  isReusable: 'isReusable',
  usageCount: 'usageCount',
  tags: 'tags',
  color: 'color',
  icon: 'icon',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.RoleScopeScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  orgId: 'orgId',
  scopeType: 'scopeType',
  scopeKey: 'scopeKey',
  scopeName: 'scopeName',
  permissions: 'permissions',
  restrictions: 'restrictions',
  startDate: 'startDate',
  endDate: 'endDate',
  timeZone: 'timeZone',
  isActive: 'isActive',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.RoleReviewScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  roleId: 'roleId',
  reviewType: 'reviewType',
  status: 'status',
  reviewFrequency: 'reviewFrequency',
  nextReviewDate: 'nextReviewDate',
  lastReviewDate: 'lastReviewDate',
  reviewerId: 'reviewerId',
  approvers: 'approvers',
  findings: 'findings',
  actions: 'actions',
  riskLevel: 'riskLevel',
  complianceFramework: 'complianceFramework',
  exceptions: 'exceptions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt'
};

exports.Prisma.ProvisioningFlowScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  trigger: 'trigger',
  defaultRoles: 'defaultRoles',
  conditionalRoles: 'conditionalRoles',
  scimMapping: 'scimMapping',
  ssoGroupMapping: 'ssoGroupMapping',
  steps: 'steps',
  approvalRequired: 'approvalRequired',
  approvers: 'approvers',
  notifyUsers: 'notifyUsers',
  notifyManagers: 'notifyManagers',
  emailTemplate: 'emailTemplate',
  requireMFA: 'requireMFA',
  ipRestrictions: 'ipRestrictions',
  sessionDuration: 'sessionDuration',
  usageCount: 'usageCount',
  successRate: 'successRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.TemporaryElevationScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  requestedBy: 'requestedBy',
  approvedBy: 'approvedBy',
  targetRole: 'targetRole',
  currentRole: 'currentRole',
  reason: 'reason',
  requestedDuration: 'requestedDuration',
  actualDuration: 'actualDuration',
  status: 'status',
  requestedAt: 'requestedAt',
  approvedAt: 'approvedAt',
  activatedAt: 'activatedAt',
  expiresAt: 'expiresAt',
  terminatedAt: 'terminatedAt',
  approvalRequired: 'approvalRequired',
  autoApproved: 'autoApproved',
  emergencyAccess: 'emergencyAccess',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  grantedPermissions: 'grantedPermissions',
  previousPermissions: 'previousPermissions',
  usageTracked: 'usageTracked',
  alertsSent: 'alertsSent',
  reviewRequired: 'reviewRequired',
  terminationReason: 'terminationReason',
  terminatedBy: 'terminatedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProviderConfigScalarFieldEnum = {
  id: 'id',
  samApiKey: 'samApiKey',
  stripeSecretKey: 'stripeSecretKey',
  otherConfig: 'otherConfig',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PricingPlanScalarFieldEnum = {
  orgId: 'orgId',
  model: 'model',
  currency: 'currency',
  unitAmount: 'unitAmount',
  tiersJson: 'tiersJson',
  includedUnits: 'includedUnits',
  stripePriceId: 'stripePriceId'
};

exports.Prisma.LeadActivityScalarFieldEnum = {
  id: 'id',
  leadId: 'leadId',
  orgId: 'orgId',
  userId: 'userId',
  type: 'type',
  title: 'title',
  description: 'description',
  scheduledAt: 'scheduledAt',
  completedAt: 'completedAt',
  contactMethod: 'contactMethod',
  duration: 'duration',
  attachments: 'attachments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LeadTaskScalarFieldEnum = {
  id: 'id',
  leadId: 'leadId',
  orgId: 'orgId',
  assignedTo: 'assignedTo',
  createdBy: 'createdBy',
  title: 'title',
  description: 'description',
  priority: 'priority',
  status: 'status',
  dueDate: 'dueDate',
  completedAt: 'completedAt',
  reminderAt: 'reminderAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AiUsageEventScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  feature: 'feature',
  model: 'model',
  tokensIn: 'tokensIn',
  tokensOut: 'tokensOut',
  costUsd: 'costUsd',
  creditsUsed: 'creditsUsed',
  requestId: 'requestId',
  createdAt: 'createdAt'
};

exports.Prisma.AiMonthlySummaryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  monthKey: 'monthKey',
  tokensIn: 'tokensIn',
  tokensOut: 'tokensOut',
  costUsd: 'costUsd',
  creditsUsed: 'creditsUsed',
  callCount: 'callCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeProfileScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  adpWorkerId: 'adpWorkerId',
  managerId: 'managerId',
  mobilePrefs: 'mobilePrefs',
  emergencyContact: 'emergencyContact',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkOrderScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  title: 'title',
  description: 'description',
  status: 'status',
  priority: 'priority',
  scheduledStartAt: 'scheduledStartAt',
  scheduledEndAt: 'scheduledEndAt',
  actualStartAt: 'actualStartAt',
  actualEndAt: 'actualEndAt',
  jobSiteId: 'jobSiteId',
  estimatedValue: 'estimatedValue',
  actualCost: 'actualCost',
  pausedAt: 'pausedAt',
  resumedAt: 'resumedAt',
  pauseReason: 'pauseReason',
  completedBy: 'completedBy',
  version: 'version',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobSiteScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  latitude: 'latitude',
  longitude: 'longitude',
  radiusMeters: 'radiusMeters',
  accessInstructions: 'accessInstructions',
  emergencyContacts: 'emergencyContacts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobAssignmentScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  jobId: 'jobId',
  employeeId: 'employeeId',
  role: 'role',
  assignedAt: 'assignedAt',
  unassignedAt: 'unassignedAt'
};

exports.Prisma.TimesheetEntryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  employeeId: 'employeeId',
  jobId: 'jobId',
  jobSiteId: 'jobSiteId',
  clockInAt: 'clockInAt',
  clockOutAt: 'clockOutAt',
  breakMinutes: 'breakMinutes',
  clockInLat: 'clockInLat',
  clockInLng: 'clockInLng',
  clockOutLat: 'clockOutLat',
  clockOutLng: 'clockOutLng',
  deviceInfo: 'deviceInfo',
  notes: 'notes',
  status: 'status',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobChecklistItemScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  jobId: 'jobId',
  title: 'title',
  description: 'description',
  required: 'required',
  sortOrder: 'sortOrder',
  status: 'status',
  completedBy: 'completedBy',
  completedAt: 'completedAt',
  notes: 'notes',
  photosCount: 'photosCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IssueReportScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  jobId: 'jobId',
  reportedBy: 'reportedBy',
  title: 'title',
  description: 'description',
  severity: 'severity',
  category: 'category',
  status: 'status',
  resolvedBy: 'resolvedBy',
  resolvedAt: 'resolvedAt',
  resolution: 'resolution',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MediaAssetScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  uploadedBy: 'uploadedBy',
  filename: 'filename',
  originalName: 'originalName',
  contentType: 'contentType',
  fileSize: 'fileSize',
  url: 'url',
  thumbnailUrl: 'thumbnailUrl',
  assetType: 'assetType',
  workOrderId: 'workOrderId',
  issueReportId: 'issueReportId',
  checklistItemId: 'checklistItemId',
  trainingModuleId: 'trainingModuleId',
  exifJson: 'exifJson',
  description: 'description',
  tags: 'tags',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrainingModuleScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  title: 'title',
  description: 'description',
  content: 'content',
  requiredForRoles: 'requiredForRoles',
  isActive: 'isActive',
  version: 'version',
  requiresQuiz: 'requiresQuiz',
  passingScore: 'passingScore',
  validityDays: 'validityDays',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrainingCompletionScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  employeeId: 'employeeId',
  moduleId: 'moduleId',
  completedAt: 'completedAt',
  score: 'score',
  passed: 'passed',
  expiresAt: 'expiresAt',
  isValid: 'isValid',
  timeSpentMinutes: 'timeSpentMinutes',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalRequestScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  requestedBy: 'requestedBy',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  reason: 'reason',
  status: 'status',
  approverRoles: 'approverRoles',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedReason: 'rejectedReason',
  requestedAt: 'requestedAt',
  expiresAt: 'expiresAt',
  escalationRules: 'escalationRules'
};

exports.Prisma.SecurityIncidentScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  incidentType: 'incidentType',
  severity: 'severity',
  description: 'description',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  requestPath: 'requestPath',
  metadata: 'metadata',
  status: 'status',
  assignedTo: 'assignedTo',
  resolvedAt: 'resolvedAt',
  resolution: 'resolution',
  detectedAt: 'detectedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DeviceAccessScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  userAgent: 'userAgent',
  deviceType: 'deviceType',
  deviceName: 'deviceName',
  fingerprint: 'fingerprint',
  firstSeenAt: 'firstSeenAt',
  lastSeenAt: 'lastSeenAt',
  accessCount: 'accessCount',
  isBlocked: 'isBlocked',
  lastIpAddress: 'lastIpAddress',
  lastLocation: 'lastLocation'
};

exports.Prisma.UserLockoutScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  reason: 'reason',
  lockoutType: 'lockoutType',
  severity: 'severity',
  lockedAt: 'lockedAt',
  expiresAt: 'expiresAt',
  unlockedAt: 'unlockedAt',
  unlockedBy: 'unlockedBy',
  isActive: 'isActive'
};

exports.Prisma.SecurityPolicyScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  category: 'category',
  name: 'name',
  enabled: 'enabled',
  config: 'config',
  version: 'version',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastUpdatedBy: 'lastUpdatedBy'
};

exports.Prisma.FeatureModuleScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  moduleKey: 'moduleKey',
  name: 'name',
  description: 'description',
  category: 'category',
  enabled: 'enabled',
  usageLimit: 'usageLimit',
  costPerUnit: 'costPerUnit',
  monthlyBudget: 'monthlyBudget',
  config: 'config',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeatureUsageScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  moduleId: 'moduleId',
  userId: 'userId',
  amount: 'amount',
  costCents: 'costCents',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.OrganizationBudgetScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  monthlyLimitCents: 'monthlyLimitCents',
  alertThreshold: 'alertThreshold',
  autoDisable: 'autoDisable',
  notifyOwners: 'notifyOwners',
  currentSpendCents: 'currentSpendCents',
  lastResetAt: 'lastResetAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IntegrationScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  type: 'type',
  name: 'name',
  enabled: 'enabled',
  config: 'config',
  metadata: 'metadata',
  lastSyncAt: 'lastSyncAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SupportSessionScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  supportUserId: 'supportUserId',
  targetUserId: 'targetUserId',
  sessionType: 'sessionType',
  reason: 'reason',
  consentGiven: 'consentGiven',
  consentAt: 'consentAt',
  startedAt: 'startedAt',
  expiresAt: 'expiresAt',
  endedAt: 'endedAt',
  status: 'status',
  metadata: 'metadata'
};

exports.Prisma.AuditEventScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  sessionId: 'sessionId',
  action: 'action',
  target: 'target',
  targetId: 'targetId',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  severity: 'severity',
  category: 'category',
  success: 'success',
  errorMessage: 'errorMessage',
  hash: 'hash',
  previousEventId: 'previousEventId',
  previousHash: 'previousHash',
  immutable: 'immutable',
  createdAt: 'createdAt'
};

exports.Prisma.AppEventScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  sessionId: 'sessionId',
  featureKey: 'featureKey',
  eventType: 'eventType',
  metadata: 'metadata',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  duration: 'duration',
  createdAt: 'createdAt'
};

exports.Prisma.FeatureRegistryScalarFieldEnum = {
  id: 'id',
  key: 'key',
  name: 'name',
  description: 'description',
  category: 'category',
  defaultEnabled: 'defaultEnabled',
  requiresPlan: 'requiresPlan',
  dependencies: 'dependencies',
  incompatible: 'incompatible',
  discoverability: 'discoverability',
  recommendWhen: 'recommendWhen',
  helpUrl: 'helpUrl',
  demoVideoUrl: 'demoVideoUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrgFeatureStateScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  featureId: 'featureId',
  enabled: 'enabled',
  enabledAt: 'enabledAt',
  enabledBy: 'enabledBy',
  config: 'config',
  firstUsedAt: 'firstUsedAt',
  lastUsedAt: 'lastUsedAt',
  usageCount: 'usageCount',
  recommended: 'recommended',
  recommendedAt: 'recommendedAt',
  recommendedBy: 'recommendedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DelegationGrantScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  granteeId: 'granteeId',
  granterId: 'granterId',
  toolId: 'toolId',
  scope: 'scope',
  isActive: 'isActive',
  expiresAt: 'expiresAt',
  revokedAt: 'revokedAt',
  revokedBy: 'revokedBy',
  usedCount: 'usedCount',
  lastUsedAt: 'lastUsedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AiActionLogScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  toolId: 'toolId',
  action: 'action',
  targetType: 'targetType',
  targetId: 'targetId',
  requestedBy: 'requestedBy',
  authorizedBy: 'authorizedBy',
  delegationId: 'delegationId',
  status: 'status',
  beforeState: 'beforeState',
  afterState: 'afterState',
  errorMessage: 'errorMessage',
  requestContext: 'requestContext',
  approvalMethod: 'approvalMethod',
  costCents: 'costCents',
  createdAt: 'createdAt',
  executedAt: 'executedAt'
};

exports.Prisma.AiDocChunkScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  contentType: 'contentType',
  sourceUrl: 'sourceUrl',
  featureKey: 'featureKey',
  tags: 'tags',
  version: 'version',
  embedding: 'embedding',
  tokenCount: 'tokenCount',
  isActive: 'isActive',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookEndpointScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  url: 'url',
  secret: 'secret',
  events: 'events',
  active: 'active',
  failureCount: 'failureCount',
  maxRetries: 'maxRetries',
  lastDeliveryAt: 'lastDeliveryAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookEventScalarFieldEnum = {
  id: 'id',
  type: 'type',
  data: 'data',
  orgId: 'orgId',
  timestamp: 'timestamp'
};

exports.Prisma.WebhookDeliveryScalarFieldEnum = {
  id: 'id',
  webhookEndpointId: 'webhookEndpointId',
  eventId: 'eventId',
  status: 'status',
  httpStatus: 'httpStatus',
  responseBody: 'responseBody',
  attemptCount: 'attemptCount',
  nextRetryAt: 'nextRetryAt',
  deliveredAt: 'deliveredAt',
  createdAt: 'createdAt'
};

exports.Prisma.EncryptionKeyScalarFieldEnum = {
  id: 'id',
  keyId: 'keyId',
  orgId: 'orgId',
  algorithm: 'algorithm',
  active: 'active',
  createdAt: 'createdAt',
  rotatedAt: 'rotatedAt'
};

exports.Prisma.BackupScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  type: 'type',
  status: 'status',
  size: 'size',
  checksum: 'checksum',
  encrypted: 'encrypted',
  compressed: 'compressed',
  destinations: 'destinations',
  errorMessage: 'errorMessage',
  createdAt: 'createdAt'
};

exports.Prisma.TenantRegistrationScalarFieldEnum = {
  id: 'id',
  idempotencyKey: 'idempotencyKey',
  orgId: 'orgId',
  ownerUserId: 'ownerUserId',
  plan: 'plan',
  industry: 'industry',
  externalCustomerId: 'externalCustomerId',
  welcomeEmailQueued: 'welcomeEmailQueued',
  createdAt: 'createdAt'
};

exports.Prisma.LeadSourceConfigScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  type: 'type',
  active: 'active',
  createdAt: 'createdAt'
};

exports.Prisma.JobTemplateScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  description: 'description',
  estimatedHours: 'estimatedHours',
  active: 'active',
  createdAt: 'createdAt'
};

exports.Prisma.IdempotencyKeyScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  key: 'key',
  endpoint: 'endpoint',
  requestHash: 'requestHash',
  responseStatus: 'responseStatus',
  responseBody: 'responseBody',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.StripeEventScalarFieldEnum = {
  id: 'id',
  source: 'source',
  receivedAt: 'receivedAt'
};

exports.Prisma.TenantStripeConnectScalarFieldEnum = {
  orgId: 'orgId',
  stripeConnectedAccountId: 'stripeConnectedAccountId',
  connectStatus: 'connectStatus',
  chargesEnabled: 'chargesEnabled',
  payoutsEnabled: 'payoutsEnabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AiPowerProfileScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  globalDefault: 'globalDefault',
  overrides: 'overrides',
  roleCeilings: 'roleCeilings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AiTaskScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  agentType: 'agentType',
  actionType: 'actionType',
  role: 'role',
  powerLevel: 'powerLevel',
  tokensIn: 'tokensIn',
  tokensOut: 'tokensOut',
  rawCostCents: 'rawCostCents',
  priceCents: 'priceCents',
  status: 'status',
  errorCode: 'errorCode',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.CreditLedgerScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  amountCents: 'amountCents',
  type: 'type',
  description: 'description',
  balanceBefore: 'balanceBefore',
  balanceAfter: 'balanceAfter',
  relatedId: 'relatedId',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.AIUsageLogScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  model: 'model',
  promptTokens: 'promptTokens',
  completionTokens: 'completionTokens',
  totalTokens: 'totalTokens',
  costCents: 'costCents',
  mode: 'mode',
  endpoint: 'endpoint',
  requestId: 'requestId',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.UsageMeterScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  meterType: 'meterType',
  value: 'value',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.VerticalConfigScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  vertical: 'vertical',
  enabledAiTasks: 'enabledAiTasks',
  customFields: 'customFields',
  settings: 'settings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrialConfigScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  trialType: 'trialType',
  trialEndsAt: 'trialEndsAt',
  aiCreditsCents: 'aiCreditsCents',
  features: 'features',
  status: 'status',
  convertedAt: 'convertedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobTicketScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  customerId: 'customerId',
  location: 'location',
  crewId: 'crewId',
  serviceType: 'serviceType',
  scheduledAt: 'scheduledAt',
  status: 'status',
  estimateId: 'estimateId',
  invoiceId: 'invoiceId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId',
  contactId: 'contactId',
  opportunityId: 'opportunityId'
};

exports.Prisma.JobLogScalarFieldEnum = {
  id: 'id',
  jobTicketId: 'jobTicketId',
  actorId: 'actorId',
  role: 'role',
  action: 'action',
  notes: 'notes',
  photoUrl: 'photoUrl',
  partsUsed: 'partsUsed',
  syncedAt: 'syncedAt',
  createdAt: 'createdAt'
};

exports.Prisma.JobCompletionScalarFieldEnum = {
  id: 'id',
  jobTicketId: 'jobTicketId',
  completedAt: 'completedAt',
  signatureUrl: 'signatureUrl',
  aiReportUrl: 'aiReportUrl',
  aiReportText: 'aiReportText',
  createdAt: 'createdAt'
};

exports.Prisma.JobAnomalyScalarFieldEnum = {
  id: 'id',
  jobTicketId: 'jobTicketId',
  type: 'type',
  severity: 'severity',
  aiNotes: 'aiNotes',
  reviewedAt: 'reviewedAt',
  reviewedBy: 'reviewedBy',
  resolution: 'resolution',
  createdAt: 'createdAt'
};

exports.Prisma.TenantDomainScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  domain: 'domain',
  subdomain: 'subdomain',
  txtRecord: 'txtRecord',
  verified: 'verified',
  verifiedAt: 'verifiedAt',
  cnameTarget: 'cnameTarget',
  sslEnabled: 'sslEnabled',
  sslIssuedAt: 'sslIssuedAt',
  status: 'status',
  activatedAt: 'activatedAt',
  suspendedAt: 'suspendedAt',
  suspensionReason: 'suspensionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantProfitabilityScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  monthlyRevenueCents: 'monthlyRevenueCents',
  creditsPurchased: 'creditsPurchased',
  aiCostCents: 'aiCostCents',
  infraCostCents: 'infraCostCents',
  storageCostCents: 'storageCostCents',
  marginPercent: 'marginPercent',
  adoptionRate: 'adoptionRate',
  avgCreditsPerUser: 'avgCreditsPerUser',
  aiRecommendations: 'aiRecommendations',
  lastAnalyzedAt: 'lastAnalyzedAt',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SystemNoticeScalarFieldEnum = {
  id: 'id',
  title: 'title',
  message: 'message',
  type: 'type',
  targetAll: 'targetAll',
  targetOrgs: 'targetOrgs',
  dismissible: 'dismissible',
  priority: 'priority',
  startAt: 'startAt',
  endAt: 'endAt',
  active: 'active',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AiGoldenDatasetScalarFieldEnum = {
  id: 'id',
  agentType: 'agentType',
  actionType: 'actionType',
  input: 'input',
  expectedOutput: 'expectedOutput',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AiEvaluationScalarFieldEnum = {
  id: 'id',
  agentType: 'agentType',
  actionType: 'actionType',
  modelVersion: 'modelVersion',
  input: 'input',
  actualOutput: 'actualOutput',
  expectedOutput: 'expectedOutput',
  metrics: 'metrics',
  createdAt: 'createdAt'
};

exports.Prisma.AiModelVersionScalarFieldEnum = {
  id: 'id',
  agentType: 'agentType',
  version: 'version',
  modelName: 'modelName',
  config: 'config',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BusinessUnitScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  name: 'name',
  timezone: 'timezone',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LineOfBusinessScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  buId: 'buId',
  key: 'key',
  enabled: 'enabled',
  config: 'config',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VendorRoleScalarFieldEnum = {
  id: 'id',
  key: 'key',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FleetVehicleScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  buId: 'buId',
  assetTag: 'assetTag',
  vin: 'vin',
  plate: 'plate',
  make: 'make',
  model: 'model',
  year: 'year',
  dotNumber: 'dotNumber',
  odometer: 'odometer',
  status: 'status',
  metadata: 'metadata',
  dvirStatus: 'dvirStatus',
  lastDvirAt: 'lastDvirAt',
  nextDvirDue: 'nextDvirDue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FleetMaintenanceTicketScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  vehicleId: 'vehicleId',
  openedBy: 'openedBy',
  assignedTo: 'assignedTo',
  title: 'title',
  description: 'description',
  severity: 'severity',
  status: 'status',
  dvirRef: 'dvirRef',
  openedAt: 'openedAt',
  closedAt: 'closedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IntegrationConfigScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  type: 'type',
  status: 'status',
  config: 'config',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GeotabDvirLogScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  deviceId: 'deviceId',
  driverId: 'driverId',
  vehicleRef: 'vehicleRef',
  defects: 'defects',
  certifiedAt: 'certifiedAt',
  status: 'status',
  raw: 'raw',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HolmanFuelTransactionScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  vehicleRef: 'vehicleRef',
  driverPin: 'driverPin',
  gallons: 'gallons',
  pricePerGallon: 'pricePerGallon',
  totalCents: 'totalCents',
  odometer: 'odometer',
  vendor: 'vendor',
  purchasedAt: 'purchasedAt',
  raw: 'raw',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PricingCatalogItemScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  key: 'key',
  listPriceCents: 'listPriceCents',
  adoptionDiscountEligible: 'adoptionDiscountEligible',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantEntitlementScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  key: 'key',
  enabled: 'enabled',
  quota: 'quota',
  meta: 'meta',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditsLedgerEntryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  key: 'key',
  deltaCents: 'deltaCents',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.UsageLedgerEntryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  key: 'key',
  quantity: 'quantity',
  costCents: 'costCents',
  context: 'context',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLog2ScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  role: 'role',
  action: 'action',
  resource: 'resource',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.NoteScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  entityType: 'entityType',
  entityId: 'entityId',
  userId: 'userId',
  body: 'body',
  isPinned: 'isPinned',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  entityType: 'entityType',
  entityId: 'entityId',
  userId: 'userId',
  fileName: 'fileName',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  storageKey: 'storageKey',
  url: 'url',
  createdAt: 'createdAt'
};

exports.Prisma.AssetScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  buId: 'buId',
  assetNumber: 'assetNumber',
  name: 'name',
  description: 'description',
  category: 'category',
  status: 'status',
  qrCode: 'qrCode',
  qrCodeUrl: 'qrCodeUrl',
  locationId: 'locationId',
  locationType: 'locationType',
  assignedToUserId: 'assignedToUserId',
  assignedToVehicleId: 'assignedToVehicleId',
  purchasePrice: 'purchasePrice',
  currentValue: 'currentValue',
  purchaseDate: 'purchaseDate',
  warrantyExpiry: 'warrantyExpiry',
  lastMaintenanceAt: 'lastMaintenanceAt',
  nextMaintenanceAt: 'nextMaintenanceAt',
  maintenanceIntervalDays: 'maintenanceIntervalDays',
  serialNumber: 'serialNumber',
  manufacturer: 'manufacturer',
  model: 'model',
  customFields: 'customFields',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AssetHistoryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  assetId: 'assetId',
  userId: 'userId',
  action: 'action',
  fromValue: 'fromValue',
  toValue: 'toValue',
  notes: 'notes',
  location: 'location',
  createdAt: 'createdAt'
};

exports.Prisma.RateLimitScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  buId: 'buId',
  key: 'key',
  limitPerMinute: 'limitPerMinute',
  limitPerHour: 'limitPerHour',
  limitPerDay: 'limitPerDay',
  enabled: 'enabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RateLimitUsageScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  buId: 'buId',
  key: 'key',
  windowStart: 'windowStart',
  windowType: 'windowType',
  count: 'count',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkOrderTimeEntryScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  workOrderId: 'workOrderId',
  userId: 'userId',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  durationMinutes: 'durationMinutes',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SyncQueueScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  deviceId: 'deviceId',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  payload: 'payload',
  status: 'status',
  attempts: 'attempts',
  lastAttemptAt: 'lastAttemptAt',
  error: 'error',
  createdAt: 'createdAt',
  syncedAt: 'syncedAt'
};

exports.Prisma.Cleaning_eventsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  user_id: 'user_id',
  feature: 'feature',
  request_id: 'request_id',
  payload: 'payload',
  result: 'result',
  cost_cents: 'cost_cents',
  tokens_in: 'tokens_in',
  tokens_out: 'tokens_out',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Fencing_eventsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  user_id: 'user_id',
  feature: 'feature',
  request_id: 'request_id',
  payload: 'payload',
  result: 'result',
  cost_cents: 'cost_cents',
  tokens_in: 'tokens_in',
  tokens_out: 'tokens_out',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Work_ordersScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Work_order_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Dvir_recordsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Dvir_defectsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Maintenance_ticketsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.AssetsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Asset_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Qr_tagsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Migration_jobsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Migration_mappingsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Migration_resultsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Federation_domainsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Rate_limit_policiesScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Ai_sessionsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_cleaning_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_cleaning_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_fencing_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_fencing_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Concrete_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_concrete_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_concrete_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Appliance_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_appliance_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_appliance_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Mechanic_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_mechanic_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_mechanic_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Windowdoor_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_windowdoor_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_windowdoor_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Rolloff_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_rolloff_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_rolloff_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Portajohn_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_portajohn_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_portajohn_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Trucking_eventsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_trucking_events_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_trucking_events_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Infra_adoptionScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_infra_adoption_1ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.Idx_infra_adoption_2ScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.IFScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.TenantsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  plan: 'plan',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Business_unitsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  timezone: 'timezone',
  address: 'address',
  created_at: 'created_at'
};

exports.Prisma.Lines_of_businessScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  bu_id: 'bu_id',
  key: 'key',
  enabled: 'enabled',
  config: 'config',
  created_at: 'created_at'
};

exports.Prisma.Vendor_rolesScalarFieldEnum = {
  id: 'id',
  key: 'key',
  description: 'description'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  role_scope: 'role_scope',
  audience: 'audience',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.Fleet_vehiclesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  bu_id: 'bu_id',
  asset_tag: 'asset_tag',
  vin: 'vin',
  plate: 'plate',
  make: 'make',
  dot_number: 'dot_number',
  odometer: 'odometer',
  status: 'status',
  metadata: 'metadata',
  created_at: 'created_at'
};

exports.Prisma.Fleet_maintenance_ticketsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  vehicle_id: 'vehicle_id',
  opened_by: 'opened_by',
  assigned_to: 'assigned_to',
  title: 'title',
  description: 'description',
  severity: 'severity',
  status: 'status',
  dvir_ref: 'dvir_ref',
  opened_at: 'opened_at',
  closed_at: 'closed_at'
};

exports.Prisma.Integration_configsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  type: 'type',
  status: 'status',
  config: 'config',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Geotab_dvir_logsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  device_id: 'device_id',
  driver_id: 'driver_id',
  vehicle_ref: 'vehicle_ref',
  defects: 'defects',
  certified_at: 'certified_at',
  status: 'status',
  raw: 'raw'
};

exports.Prisma.Holman_fuel_transactionsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  vehicle_ref: 'vehicle_ref',
  driver_pin: 'driver_pin',
  total_cents: 'total_cents',
  odometer: 'odometer',
  vendor: 'vendor',
  purchased_at: 'purchased_at',
  raw: 'raw'
};

exports.Prisma.Pricing_catalogScalarFieldEnum = {
  id: 'id',
  key: 'key',
  list_price_cents: 'list_price_cents',
  adoption_discount_eligible: 'adoption_discount_eligible'
};

exports.Prisma.Tenant_entitlementsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  key: 'key',
  enabled: 'enabled',
  quota: 'quota',
  meta: 'meta'
};

exports.Prisma.Credits_ledgerScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  key: 'key',
  delta_cents: 'delta_cents',
  reason: 'reason',
  created_at: 'created_at'
};

exports.Prisma.Usage_ledgerScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  key: 'key',
  quantity: 'quantity',
  cost_cents: 'cost_cents',
  context: 'context',
  created_at: 'created_at'
};

exports.Prisma.Audit_logsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  user_id: 'user_id',
  role: 'role',
  action: 'action',
  resource: 'resource',
  meta: 'meta',
  created_at: 'created_at'
};

exports.Prisma.Crm_leadsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  bu_id: 'bu_id',
  first_name: 'first_name',
  email: 'email',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.Crm_orgsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.Crm_contactsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  org_id: 'org_id',
  first_name: 'first_name',
  is_primary: 'is_primary',
  created_at: 'created_at'
};

exports.Prisma.Crm_oppsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  org_id: 'org_id',
  contact_id: 'contact_id',
  title: 'title',
  created_at: 'created_at'
};

exports.Prisma.Schedule_jobsScalarFieldEnum = {
  id: 'id',
  org_id: 'org_id',
  status: 'status'
};

exports.Prisma.Schedule_visitsScalarFieldEnum = {
  id: 'id',
  job_id: 'job_id',
  scheduled_at: 'scheduled_at',
  status: 'status'
};

exports.Prisma.Billing_estimatesScalarFieldEnum = {
  id: 'id',
  org_id: 'org_id',
  created_at: 'created_at'
};

exports.Prisma.Billing_estimate_linesScalarFieldEnum = {
  id: 'id',
  sku: 'sku'
};

exports.Prisma.Billing_invoicesScalarFieldEnum = {
  id: 'id',
  org_id: 'org_id',
  created_at: 'created_at'
};

exports.Prisma.Billing_invoice_linesScalarFieldEnum = {
  id: 'id',
  sku: 'sku'
};

exports.Prisma.Billing_paymentsScalarFieldEnum = {
  id: 'id',
  amount_cents: 'amount_cents'
};

exports.Prisma.Inventory_itemsScalarFieldEnum = {
  id: 'id',
  sku: 'sku'
};

exports.Prisma.Inventory_binsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Inventory_stockScalarFieldEnum = {
  id: 'id',
  item_id: 'item_id',
  bin_id: 'bin_id'
};

exports.Prisma.Subs_vendorsScalarFieldEnum = {
  id: 'id',
  email: 'email'
};

exports.Prisma.Subs_work_ordersScalarFieldEnum = {
  id: 'id',
  job_id: 'job_id'
};

exports.Prisma.Subs_milestonesScalarFieldEnum = {
  id: 'id',
  title: 'title'
};

exports.Prisma.Subs_payoutsScalarFieldEnum = {
  id: 'id',
  amount_cents: 'amount_cents'
};

exports.Prisma.Portal_sessionsScalarFieldEnum = {
  id: 'id',
  token: 'token'
};

exports.Prisma.Finance_cost_centersScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  bu_id: 'bu_id',
  name: 'name',
  lob: 'lob',
  created_at: 'created_at'
};

exports.Prisma.Finance_budgetsScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  cost_center_id: 'cost_center_id',
  period_d: 'period_d',
  amount_cents: 'amount_cents',
  created_at: 'created_at'
};

exports.Prisma.Time_entriesScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  user_id: 'user_id',
  visit_id: 'visit_id',
  started_at: 'started_at',
  ended_at: 'ended_at',
  notes: 'notes'
};

exports.Prisma.Integrations_vendor_tokensScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  vendor: 'vendor',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CrmOpportunityScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CrmContactScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CrmOrganizationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RateLimitPolicyScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantUsageWindowScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ScalingEventScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  OWNER: 'OWNER',
  MANAGER: 'MANAGER',
  STAFF: 'STAFF',
  ACCOUNTANT: 'ACCOUNTANT',
  EMPLOYEE: 'EMPLOYEE'
};

exports.LeadSource = exports.$Enums.LeadSource = {
  COLD: 'COLD',
  HOT: 'HOT',
  RFP: 'RFP',
  MANUAL_EMPLOYEE_REFERRAL: 'MANUAL_EMPLOYEE_REFERRAL',
  MANUAL_EXISTING_CUSTOMER: 'MANUAL_EXISTING_CUSTOMER',
  MANUAL_NEW_CUSTOMER: 'MANUAL_NEW_CUSTOMER',
  MANUAL_OTHER: 'MANUAL_OTHER',
  SYSTEM: 'SYSTEM',
  EMPLOYEE_REFERRAL: 'EMPLOYEE_REFERRAL',
  MANUAL: 'MANUAL',
  LSA: 'LSA'
};

exports.ValueType = exports.$Enums.ValueType = {
  RELATIONSHIP: 'RELATIONSHIP',
  JOB: 'JOB'
};

exports.LedgerType = exports.$Enums.LedgerType = {
  CONVERSION_FEE: 'CONVERSION_FEE',
  PACK_PURCHASE: 'PACK_PURCHASE'
};

exports.ElevationStatus = exports.$Enums.ElevationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  TERMINATED: 'TERMINATED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED'
};

exports.PricingModel = exports.$Enums.PricingModel = {
  PER_LEAD_FIXED: 'PER_LEAD_FIXED',
  TIERED: 'TIERED',
  SUBSCRIPTION: 'SUBSCRIPTION',
  HYBRID: 'HYBRID'
};

exports.LeadStatus = exports.$Enums.LeadStatus = {
  NEW: 'NEW',
  CONTACTED: 'CONTACTED',
  QUALIFIED: 'QUALIFIED',
  MEETING_SCHEDULED: 'MEETING_SCHEDULED',
  PROPOSAL_SENT: 'PROPOSAL_SENT',
  NEGOTIATION: 'NEGOTIATION',
  WON: 'WON',
  CONVERTED: 'CONVERTED',
  LOST: 'LOST',
  NURTURING: 'NURTURING',
  FOLLOW_UP: 'FOLLOW_UP',
  ON_HOLD: 'ON_HOLD',
  UNRESPONSIVE: 'UNRESPONSIVE'
};

exports.ActivityType = exports.$Enums.ActivityType = {
  CALL_OUTBOUND: 'CALL_OUTBOUND',
  CALL_INBOUND: 'CALL_INBOUND',
  EMAIL_SENT: 'EMAIL_SENT',
  EMAIL_RECEIVED: 'EMAIL_RECEIVED',
  MEETING_SCHEDULED: 'MEETING_SCHEDULED',
  MEETING_COMPLETED: 'MEETING_COMPLETED',
  PROPOSAL_SENT: 'PROPOSAL_SENT',
  CONTRACT_SENT: 'CONTRACT_SENT',
  FOLLOW_UP: 'FOLLOW_UP',
  NOTE: 'NOTE',
  TASK_CREATED: 'TASK_CREATED',
  TASK_COMPLETED: 'TASK_COMPLETED',
  STATUS_CHANGED: 'STATUS_CHANGED',
  DOCUMENT_SHARED: 'DOCUMENT_SHARED',
  PAYMENT_RECEIVED: 'PAYMENT_RECEIVED'
};

exports.TaskPriority = exports.$Enums.TaskPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.TaskStatus = exports.$Enums.TaskStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  OVERDUE: 'OVERDUE'
};

exports.AiPlan = exports.$Enums.AiPlan = {
  BASE: 'BASE',
  PRO: 'PRO',
  ELITE: 'ELITE'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

exports.SecurityIncidentType = exports.$Enums.SecurityIncidentType = {
  CONSTRAINT_VIOLATION: 'CONSTRAINT_VIOLATION',
  SECURITY_VIOLATION: 'SECURITY_VIOLATION',
  ANOMALY_DETECTION: 'ANOMALY_DETECTION',
  FAILED_AUTHENTICATION: 'FAILED_AUTHENTICATION',
  UNAUTHORIZED_ACCESS: 'UNAUTHORIZED_ACCESS',
  DATA_BREACH: 'DATA_BREACH',
  SUSPICIOUS_ACTIVITY: 'SUSPICIOUS_ACTIVITY'
};

exports.SecuritySeverity = exports.$Enums.SecuritySeverity = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.IncidentStatus = exports.$Enums.IncidentStatus = {
  OPEN: 'OPEN',
  INVESTIGATING: 'INVESTIGATING',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED',
  FALSE_POSITIVE: 'FALSE_POSITIVE'
};

exports.DeviceType = exports.$Enums.DeviceType = {
  DESKTOP: 'DESKTOP',
  MOBILE: 'MOBILE',
  TABLET: 'TABLET',
  UNKNOWN: 'UNKNOWN'
};

exports.LockoutType = exports.$Enums.LockoutType = {
  SECURITY_VIOLATION: 'SECURITY_VIOLATION',
  FAILED_ATTEMPTS: 'FAILED_ATTEMPTS',
  SUSPICIOUS_ACTIVITY: 'SUSPICIOUS_ACTIVITY',
  MANUAL_LOCKOUT: 'MANUAL_LOCKOUT',
  COMPLIANCE_VIOLATION: 'COMPLIANCE_VIOLATION'
};

exports.JobStatus = exports.$Enums.JobStatus = {
  SCHEDULED: 'SCHEDULED',
  IN_PROGRESS: 'IN_PROGRESS',
  ON_HOLD: 'ON_HOLD',
  PAUSED: 'PAUSED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.JobPriority = exports.$Enums.JobPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.TimesheetStatus = exports.$Enums.TimesheetStatus = {
  ACTIVE: 'ACTIVE',
  COMPLETED: 'COMPLETED',
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.ChecklistStatus = exports.$Enums.ChecklistStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  SKIPPED: 'SKIPPED'
};

exports.IssueSeverity = exports.$Enums.IssueSeverity = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.IssueStatus = exports.$Enums.IssueStatus = {
  OPEN: 'OPEN',
  IN_PROGRESS: 'IN_PROGRESS',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED'
};

exports.MediaType = exports.$Enums.MediaType = {
  PHOTO: 'PHOTO',
  VIDEO: 'VIDEO',
  DOCUMENT: 'DOCUMENT',
  AUDIO: 'AUDIO',
  OTHER: 'OTHER'
};

exports.PolicyCategory = exports.$Enums.PolicyCategory = {
  AUTHENTICATION: 'AUTHENTICATION',
  SECURITY: 'SECURITY',
  COMPLIANCE: 'COMPLIANCE',
  NETWORK_SECURITY: 'NETWORK_SECURITY',
  EMERGENCY: 'EMERGENCY'
};

exports.FeatureCategory = exports.$Enums.FeatureCategory = {
  AI_ANALYTICS: 'AI_ANALYTICS',
  AUTOMATION: 'AUTOMATION',
  COMMUNICATION: 'COMMUNICATION',
  INTEGRATION: 'INTEGRATION',
  MOBILE: 'MOBILE',
  DEVELOPER_TOOLS: 'DEVELOPER_TOOLS',
  MARKETING: 'MARKETING'
};

exports.IntegrationType = exports.$Enums.IntegrationType = {
  SSO_SAML: 'SSO_SAML',
  SSO_OIDC: 'SSO_OIDC',
  SCIM: 'SCIM',
  WEBHOOK: 'WEBHOOK',
  OAUTH_APP: 'OAUTH_APP',
  API_INTEGRATION: 'API_INTEGRATION',
  ACCOUNTING: 'ACCOUNTING',
  COMMUNICATION: 'COMMUNICATION'
};

exports.WebhookDeliveryStatus = exports.$Enums.WebhookDeliveryStatus = {
  PENDING: 'PENDING',
  DELIVERED: 'DELIVERED',
  FAILED: 'FAILED',
  RETRYING: 'RETRYING'
};

exports.BackupType = exports.$Enums.BackupType = {
  FULL: 'FULL',
  INCREMENTAL: 'INCREMENTAL',
  DIFFERENTIAL: 'DIFFERENTIAL'
};

exports.BackupStatus = exports.$Enums.BackupStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.SupportSessionType = exports.$Enums.SupportSessionType = {
  READ_ONLY: 'READ_ONLY',
  IMPERSONATION: 'IMPERSONATION',
  BREAK_GLASS: 'BREAK_GLASS',
  TROUBLESHOOTING: 'TROUBLESHOOTING'
};

exports.SupportSessionStatus = exports.$Enums.SupportSessionStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  ENDED: 'ENDED',
  CANCELLED: 'CANCELLED'
};

exports.AuditSeverity = exports.$Enums.AuditSeverity = {
  INFO: 'INFO',
  WARNING: 'WARNING',
  ERROR: 'ERROR',
  CRITICAL: 'CRITICAL'
};

exports.AuditCategory = exports.$Enums.AuditCategory = {
  GENERAL: 'GENERAL',
  AUTHENTICATION: 'AUTHENTICATION',
  AUTHORIZATION: 'AUTHORIZATION',
  DATA_ACCESS: 'DATA_ACCESS',
  DATA_MODIFICATION: 'DATA_MODIFICATION',
  POLICY_CHANGE: 'POLICY_CHANGE',
  ADMIN_ACTION: 'ADMIN_ACTION',
  SECURITY_EVENT: 'SECURITY_EVENT',
  FINANCIAL: 'FINANCIAL',
  SYSTEM: 'SYSTEM',
  COMPLIANCE: 'COMPLIANCE',
  AUTH: 'AUTH',
  DATA: 'DATA',
  SECURITY: 'SECURITY'
};

exports.Prisma.ModelName = {
  Org: 'Org',
  IndustryPack: 'IndustryPack',
  Capability: 'Capability',
  IndustryCapability: 'IndustryCapability',
  User: 'User',
  UserSession: 'UserSession',
  UserTwoFactor: 'UserTwoFactor',
  ProviderSettings: 'ProviderSettings',
  ProviderAuditLog: 'ProviderAuditLog',
  ThemeConfig: 'ThemeConfig',
  ThemeUsage: 'ThemeUsage',
  Lead: 'Lead',
  Customer: 'Customer',
  Opportunity: 'Opportunity',
  Quote: 'Quote',
  Contact: 'Contact',
  CrmTask: 'CrmTask',
  CrmNote: 'CrmNote',
  CrmFile: 'CrmFile',
  Organization: 'Organization',
  ConversionAudit: 'ConversionAudit',
  Invoice: 'Invoice',
  Payment: 'Payment',
  Rfp: 'Rfp',
  Job: 'Job',
  Referral: 'Referral',
  BillingLedger: 'BillingLedger',
  LeadInvoice: 'LeadInvoice',
  LeadInvoiceLine: 'LeadInvoiceLine',
  AuditLog: 'AuditLog',
  RbacPermission: 'RbacPermission',
  RbacRole: 'RbacRole',
  RbacRolePermission: 'RbacRolePermission',
  RbacUserRole: 'RbacUserRole',
  RoleVersion: 'RoleVersion',
  RoleTemplate: 'RoleTemplate',
  PermissionBundle: 'PermissionBundle',
  RoleScope: 'RoleScope',
  RoleReview: 'RoleReview',
  ProvisioningFlow: 'ProvisioningFlow',
  TemporaryElevation: 'TemporaryElevation',
  ProviderConfig: 'ProviderConfig',
  PricingPlan: 'PricingPlan',
  LeadActivity: 'LeadActivity',
  LeadTask: 'LeadTask',
  AiUsageEvent: 'AiUsageEvent',
  AiMonthlySummary: 'AiMonthlySummary',
  EmployeeProfile: 'EmployeeProfile',
  WorkOrder: 'WorkOrder',
  JobSite: 'JobSite',
  JobAssignment: 'JobAssignment',
  TimesheetEntry: 'TimesheetEntry',
  JobChecklistItem: 'JobChecklistItem',
  IssueReport: 'IssueReport',
  MediaAsset: 'MediaAsset',
  TrainingModule: 'TrainingModule',
  TrainingCompletion: 'TrainingCompletion',
  ApprovalRequest: 'ApprovalRequest',
  SecurityIncident: 'SecurityIncident',
  DeviceAccess: 'DeviceAccess',
  UserLockout: 'UserLockout',
  SecurityPolicy: 'SecurityPolicy',
  FeatureModule: 'FeatureModule',
  FeatureUsage: 'FeatureUsage',
  OrganizationBudget: 'OrganizationBudget',
  Integration: 'Integration',
  SupportSession: 'SupportSession',
  AuditEvent: 'AuditEvent',
  AppEvent: 'AppEvent',
  FeatureRegistry: 'FeatureRegistry',
  OrgFeatureState: 'OrgFeatureState',
  DelegationGrant: 'DelegationGrant',
  AiActionLog: 'AiActionLog',
  AiDocChunk: 'AiDocChunk',
  WebhookEndpoint: 'WebhookEndpoint',
  WebhookEvent: 'WebhookEvent',
  WebhookDelivery: 'WebhookDelivery',
  EncryptionKey: 'EncryptionKey',
  Backup: 'Backup',
  TenantRegistration: 'TenantRegistration',
  LeadSourceConfig: 'LeadSourceConfig',
  JobTemplate: 'JobTemplate',
  IdempotencyKey: 'IdempotencyKey',
  StripeEvent: 'StripeEvent',
  TenantStripeConnect: 'TenantStripeConnect',
  AiPowerProfile: 'AiPowerProfile',
  AiTask: 'AiTask',
  CreditLedger: 'CreditLedger',
  AIUsageLog: 'AIUsageLog',
  UsageMeter: 'UsageMeter',
  VerticalConfig: 'VerticalConfig',
  TrialConfig: 'TrialConfig',
  JobTicket: 'JobTicket',
  JobLog: 'JobLog',
  JobCompletion: 'JobCompletion',
  JobAnomaly: 'JobAnomaly',
  TenantDomain: 'TenantDomain',
  TenantProfitability: 'TenantProfitability',
  SystemNotice: 'SystemNotice',
  AiGoldenDataset: 'AiGoldenDataset',
  AiEvaluation: 'AiEvaluation',
  AiModelVersion: 'AiModelVersion',
  BusinessUnit: 'BusinessUnit',
  LineOfBusiness: 'LineOfBusiness',
  VendorRole: 'VendorRole',
  FleetVehicle: 'FleetVehicle',
  FleetMaintenanceTicket: 'FleetMaintenanceTicket',
  IntegrationConfig: 'IntegrationConfig',
  GeotabDvirLog: 'GeotabDvirLog',
  HolmanFuelTransaction: 'HolmanFuelTransaction',
  PricingCatalogItem: 'PricingCatalogItem',
  TenantEntitlement: 'TenantEntitlement',
  CreditsLedgerEntry: 'CreditsLedgerEntry',
  UsageLedgerEntry: 'UsageLedgerEntry',
  AuditLog2: 'AuditLog2',
  Note: 'Note',
  Attachment: 'Attachment',
  Asset: 'Asset',
  AssetHistory: 'AssetHistory',
  RateLimit: 'RateLimit',
  RateLimitUsage: 'RateLimitUsage',
  WorkOrderTimeEntry: 'WorkOrderTimeEntry',
  SyncQueue: 'SyncQueue',
  cleaning_events: 'cleaning_events',
  fencing_events: 'fencing_events',
  work_orders: 'work_orders',
  work_order_events: 'work_order_events',
  dvir_records: 'dvir_records',
  dvir_defects: 'dvir_defects',
  maintenance_tickets: 'maintenance_tickets',
  assets: 'assets',
  asset_events: 'asset_events',
  qr_tags: 'qr_tags',
  migration_jobs: 'migration_jobs',
  migration_mappings: 'migration_mappings',
  migration_results: 'migration_results',
  federation_domains: 'federation_domains',
  rate_limit_policies: 'rate_limit_policies',
  ai_sessions: 'ai_sessions',
  idx_cleaning_events_1: 'idx_cleaning_events_1',
  idx_cleaning_events_2: 'idx_cleaning_events_2',
  idx_fencing_events_1: 'idx_fencing_events_1',
  idx_fencing_events_2: 'idx_fencing_events_2',
  concrete_events: 'concrete_events',
  idx_concrete_events_1: 'idx_concrete_events_1',
  idx_concrete_events_2: 'idx_concrete_events_2',
  appliance_events: 'appliance_events',
  idx_appliance_events_1: 'idx_appliance_events_1',
  idx_appliance_events_2: 'idx_appliance_events_2',
  mechanic_events: 'mechanic_events',
  idx_mechanic_events_1: 'idx_mechanic_events_1',
  idx_mechanic_events_2: 'idx_mechanic_events_2',
  windowdoor_events: 'windowdoor_events',
  idx_windowdoor_events_1: 'idx_windowdoor_events_1',
  idx_windowdoor_events_2: 'idx_windowdoor_events_2',
  rolloff_events: 'rolloff_events',
  idx_rolloff_events_1: 'idx_rolloff_events_1',
  idx_rolloff_events_2: 'idx_rolloff_events_2',
  portajohn_events: 'portajohn_events',
  idx_portajohn_events_1: 'idx_portajohn_events_1',
  idx_portajohn_events_2: 'idx_portajohn_events_2',
  trucking_events: 'trucking_events',
  idx_trucking_events_1: 'idx_trucking_events_1',
  idx_trucking_events_2: 'idx_trucking_events_2',
  infra_adoption: 'infra_adoption',
  idx_infra_adoption_1: 'idx_infra_adoption_1',
  idx_infra_adoption_2: 'idx_infra_adoption_2',
  IF: 'IF',
  tenants: 'tenants',
  business_units: 'business_units',
  lines_of_business: 'lines_of_business',
  vendor_roles: 'vendor_roles',
  users: 'users',
  fleet_vehicles: 'fleet_vehicles',
  fleet_maintenance_tickets: 'fleet_maintenance_tickets',
  integration_configs: 'integration_configs',
  geotab_dvir_logs: 'geotab_dvir_logs',
  holman_fuel_transactions: 'holman_fuel_transactions',
  pricing_catalog: 'pricing_catalog',
  tenant_entitlements: 'tenant_entitlements',
  credits_ledger: 'credits_ledger',
  usage_ledger: 'usage_ledger',
  audit_logs: 'audit_logs',
  crm_leads: 'crm_leads',
  crm_orgs: 'crm_orgs',
  crm_contacts: 'crm_contacts',
  crm_opps: 'crm_opps',
  schedule_jobs: 'schedule_jobs',
  schedule_visits: 'schedule_visits',
  billing_estimates: 'billing_estimates',
  billing_estimate_lines: 'billing_estimate_lines',
  billing_invoices: 'billing_invoices',
  billing_invoice_lines: 'billing_invoice_lines',
  billing_payments: 'billing_payments',
  inventory_items: 'inventory_items',
  inventory_bins: 'inventory_bins',
  inventory_stock: 'inventory_stock',
  subs_vendors: 'subs_vendors',
  subs_work_orders: 'subs_work_orders',
  subs_milestones: 'subs_milestones',
  subs_payouts: 'subs_payouts',
  portal_sessions: 'portal_sessions',
  finance_cost_centers: 'finance_cost_centers',
  finance_budgets: 'finance_budgets',
  time_entries: 'time_entries',
  integrations_vendor_tokens: 'integrations_vendor_tokens',
  CrmOpportunity: 'CrmOpportunity',
  CrmContact: 'CrmContact',
  CrmOrganization: 'CrmOrganization',
  RateLimitPolicy: 'RateLimitPolicy',
  TenantUsageWindow: 'TenantUsageWindow',
  ScalingEvent: 'ScalingEvent'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\chris\\Git Local\\StreamFlow\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "log": [
        "query",
        "info",
        "warn",
        "error"
      ],
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\chris\\Git Local\\StreamFlow\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// =============================================================================\n// 🚀 ENTERPRISE DATABASE & PERFORMANCE ROADMAP AUDIT\n// =============================================================================\n// \n// CURRENT STATE: Multi-tenant PostgreSQL schema with comprehensive business domain coverage\n// TARGET: Enterprise-grade database architecture with performance optimization\n// AUDIT DATE: September 27, 2025\n// \n// 📊 ENTERPRISE READINESS ASSESSMENT:\n// - Schema Design: 9/10 (Excellent multi-tenant isolation & domain modeling)\n// - Indexing Strategy: 6/10 (Basic indexes, missing advanced strategies)\n// - Query Optimization: 5/10 (N+1 queries, missing query analysis)\n// - Scaling Architecture: 4/10 (Single database, no read replicas)\n// - Data Governance: 7/10 (Good audit trails, missing retention policies)\n// - Security: 8/10 (Strong RBAC, could enhance with row-level security)\n// \n// 🎯 ENTERPRISE DATABASE COMPARISON BENCHMARKS:\n// Comparing against: Salesforce, ServiceTitan, WorkWave, Jobber (Service Business Platforms)\n// - Multi-tenancy: ✅ EXCELLENT (Better than most - true schema isolation)\n// - Data Model Complexity: ✅ EXCELLENT (Comprehensive service business domains)\n// - RBAC Granularity: ✅ ENTERPRISE-GRADE (195 permissions vs industry 50-100)\n// - Audit Capabilities: ⚠️ GOOD (Basic audit, missing tamper-proof chains)\n// - Performance Optimization: ❌ NEEDS WORK (Missing advanced indexing/caching)\n// \n// 🔥 HIGH PRIORITY ENTERPRISE ENHANCEMENTS (Q1 2025):\n// =====================================================\n// \n// 1. ADVANCED INDEXING STRATEGY:\n//    - Composite indexes for common query patterns\n//    - Partial indexes for filtered queries (WHERE status = 'active')\n//    - Expression indexes for computed columns (LOWER(email))\n//    - GIN indexes for JSON/array columns (enrichmentJson, tags[])\n//    - Implementation: Add @@index() annotations below each model\n// \n// 2. QUERY PERFORMANCE OPTIMIZATION:\n//    - EXPLAIN ANALYZE integration for slow query detection\n//    - Query result caching with Redis integration\n//    - Connection pooling with PgBouncer configuration\n//    - Read replica routing for analytical queries\n//    - Implementation: Enhanced prisma client configuration\n// \n// 3. DATABASE SCALING PATTERNS:\n//    - Horizontal partitioning by orgId (tenant-based sharding)\n//    - Read replica configuration for dashboard/reporting queries\n//    - Connection pooling optimization (100-200 concurrent connections)\n//    - Database monitoring with performance insights\n//    - Implementation: Infrastructure-level changes + client configuration\n//\n// 🏗️ CURRENT TENANT ISOLATION STRATEGY: ORGID-BASED ROW SCOPING (CLARIFIED)\n// =========================================================================\n// \n// ✅ CONFIRMED DEPLOYMENT PATTERN: Application-level multi-tenancy via orgId column isolation\n// \n// CURRENT IMPLEMENTATION ANALYSIS:\n// - Every business entity model includes `orgId String` field\n// - Multi-tenant data isolation via `@@unique([orgId, id])` constraints\n// - Performance optimization with `@@index([orgId, ...])` on all tenant-scoped queries\n// - Foreign key relationships include orgId: `@relation(fields: [orgId, foreignId], references: [orgId, id])`\n// \n// ADVANTAGES of orgId-based approach (vs RLS):\n// ✅ Explicit tenant isolation (no accidental cross-tenant data leaks)\n// ✅ Excellent query performance (orgId-first indexes)\n// ✅ Simple application logic (tenant context in every query)\n// ✅ Easy backup/restore per tenant\n// ✅ Straightforward database sharding by orgId hash\n// ✅ Clear audit trails (every record has explicit tenant association)\n// ✅ Better debugging and monitoring (tenant-scoped metrics)\n// \n// ENTERPRISE VALIDATION: ✅ CURRENT APPROACH IS OPTIMAL\n// - Used by: Salesforce (similar scale), ServiceTitan, WorkWave\n// - Proven at scale: 100K+ tenants, 10M+ records per tenant\n// - Query performance: Sub-50ms average with proper indexing\n// \n// ⚡ MEDIUM PRIORITY ENHANCEMENTS (Q2 2025):\n// =========================================\n// \n// 4. DATA GOVERNANCE & COMPLIANCE:\n//    - Automated data retention policies (GDPR/CCPA compliance)\n//    - Row-level security (RLS) for multi-tenant data isolation\n//    - Encrypted columns for sensitive data (PII, payment info)\n//    - Audit log immutability with blockchain-style hash chains\n//    - Implementation: Database policies + application-level encryption\n// \n// 5. ADVANCED ORM PATTERNS:\n//    - Query batching and N+1 query elimination\n//    - Lazy loading strategies for complex relationships\n//    - Database transaction optimization patterns\n//    - Custom scalar types for business logic (money, phone numbers)\n//    - Implementation: Enhanced Prisma client patterns\n// \n// 6. ENTERPRISE MONITORING & OBSERVABILITY:\n//    - Slow query detection and alerting\n//    - Database performance metrics integration\n//    - Query plan analysis automation\n//    - Capacity planning and growth projection\n//    - Implementation: APM integration + custom monitoring\n// \n// 💰 BUSINESS IMPACT PROJECTIONS:\n// ==============================\n// - Query Performance: 70% improvement with advanced indexing\n// - Scalability: Support 10x growth (1K → 10K organizations)\n// - Compliance: SOC 2 Type II + GDPR/CCPA readiness\n// - Operational Efficiency: 50% reduction in database maintenance\n// - Developer Productivity: 40% faster feature development\n// \n// 🎯 SUCCESS METRICS:\n// ==================\n// - Average query response time: <50ms (current: ~200ms)\n// - Database CPU utilization: <60% under peak load\n// - Zero data compliance violations\n// - 99.99% database uptime\n// - <1 second page load times for all dashboards\n//\ngenerator client {\n  provider = \"prisma-client-js\"\n\n  // 🚀 ENTERPRISE ENHANCEMENT: Enable advanced Prisma features\n  // - Query engine optimization for complex joins\n  // - Extended type safety for business logic\n  // - Query logging for performance monitoring\n  log = [\"query\", \"info\", \"warn\", \"error\"]\n\n  // TODO: Add after upgrading to Prisma 6.x\n  // output   = \"./generated/client\"\n  // engineType = \"binary\"  // Better performance for complex queries\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n\n  // 🚀 ENTERPRISE ENHANCEMENT: Connection and performance configuration\n  // These should be set at the connection string level for production:\n  // \n  // CONNECTION POOLING OPTIMIZATION:\n  // - connection_limit=100  (Scale based on app server count)\n  // - pool_timeout=10       (Fail fast on connection exhaustion)\n  // - pool_mode=transaction (Optimize for short-lived queries)\n  // \n  // PERFORMANCE OPTIMIZATION:\n  // - statement_cache_size=1000  (Cache prepared statements)\n  // - pgbouncer=true            (Use connection pooling middleware)\n  // - application_name=\"mountain-vista-crm\"  (Query identification)\n  // \n  // EXAMPLE PRODUCTION URL:\n  // postgresql://user:pass@host:5432/db?connection_limit=100&pool_timeout=10&pool_mode=transaction&statement_cache_size=1000&application_name=mountain-vista-crm\n}\n\n// =============================================================================\n// 🏗️ ENTERPRISE MIGRATION & GOVERNANCE STRATEGY\n// =============================================================================\n//\n// 🔧 ENTERPRISE MIGRATION SAFETY & GOVERNANCE:\n// ==========================================\n//\n// MIGRATION EVOLUTION PRINCIPLES:\n// 1. Zero-Downtime Deployments:\n//    - All migrations must be backwards compatible\n//    - Use CREATE INDEX CONCURRENTLY (no table locks)\n//    - Implement blue-green deployment for schema changes\n//    - Test on production-sized datasets before deployment\n//\n// 2. Safe Schema Evolution Patterns:\n//    ✅ SAFE CHANGES:\n//    - ADD COLUMN with DEFAULT values (non-blocking)\n//    - CREATE new tables and indexes CONCURRENTLY\n//    - EXPAND column constraints (VARCHAR(50) → VARCHAR(100))\n//    - ADD foreign keys with NOT VALID, then VALIDATE later\n//    - CREATE new indexes on existing data\n//\n//    ❌ DANGEROUS CHANGES (require careful migration):\n//    - DROP COLUMN (use deprecation workflow instead)\n//    - ALTER COLUMN data types (create new + migrate + drop old)\n//    - RENAME tables/columns (breaks application code)\n//    - ADD NOT NULL constraints without defaults\n//    - Change PRIMARY KEY types (NEVER DO - preserves data integrity)\n//\n// 3. Multi-Phase Migration Workflow:\n//    Phase 1: Add new schema elements (backward compatible)\n//    Phase 2: Deploy application code to use new schema\n//    Phase 3: Backfill/migrate data in background\n//    Phase 4: Update application to read from new schema\n//    Phase 5: Remove old schema elements (after validation)\n//\n// 📊 DATABASE SCALING & PERFORMANCE ROADMAP:\n// ==========================================\n//\n// CURRENT ARCHITECTURE: Single PostgreSQL instance\n// TARGET ARCHITECTURE: Multi-tier enterprise database platform\n//\n// SCALING MILESTONE 1: PERFORMANCE OPTIMIZATION (0-10K orgs)\n// CONCRETE IMPLEMENTATION ACTIONS:\n// - [ ] Week 1: Add composite indexes - see @@index comments below each model\n// - [ ] Week 2: Install PgBouncer: `helm install pgbouncer bitnami/pgbouncer`\n// - [ ] Week 3: Install Redis: `npm install ioredis`, implement getCachedQuery()\n// - [ ] Week 4: Deploy monitoring: Implement sendQueryMetrics() function\n// - [ ] Week 4: Create dashboard: /admin/database-performance page\n// \n// MEASUREMENT TARGETS:\n// - Advanced indexing: 70% query time reduction (200ms → 60ms avg)\n// - Connection pooling: Support 200 concurrent connections (vs 50 current)\n// - Redis caching: 80% cache hit rate for dashboard queries\n// - Monitoring: <5min alert response time for performance issues\n// - Estimated capacity: 10K organizations, 1M leads, 100 concurrent users\n//\n// SCALING MILESTONE 2: READ REPLICA ARCHITECTURE (10K-100K orgs)\n// CONCRETE IMPLEMENTATION ACTIONS:\n// - [ ] Month 1: Set up read replicas: AWS RDS Multi-AZ with 3 read replicas\n// - [ ] Month 2: Implement read/write routing in prisma client wrapper\n// - [ ] Month 3: Migrate dashboard queries to read replicas (SELECT operations)\n// - [ ] Month 4: Add replica lag monitoring with alerting <100ms\n// - [ ] Month 4: Deploy cross-region replicas (us-east-1, us-west-2, eu-west-1)\n// \n// MEASUREMENT TARGETS:\n// - Read replica routing: 80% of SELECT queries → read replicas\n// - Dashboard performance: 90% improvement in load times\n// - Global latency: <100ms response time from any region\n// - Replica lag: <50ms average, <100ms p99\n// - Estimated capacity: 100K organizations, 10M leads, 1K concurrent users\n//\n// SCALING MILESTONE 3: HORIZONTAL PARTITIONING (100K+ orgs)\n// CONCRETE IMPLEMENTATION ACTIONS:\n// - [ ] Quarter 1: Design shard key strategy (orgId hash % 8)\n// - [ ] Quarter 2: Implement shard-aware Prisma client wrapper\n// - [ ] Quarter 3: Build data migration tooling for shard rebalancing\n// - [ ] Quarter 4: Deploy 8 database shards with load balancing\n// - [ ] Quarter 4: Implement cross-shard federation for analytics\n// \n// MEASUREMENT TARGETS:\n// - Shard distribution: <10% variance in data size across shards\n// - Query routing: <5ms overhead for shard-aware routing\n// - Cross-shard queries: <500ms for global analytics\n// - Migration downtime: <1 hour for shard rebalancing\n// - Estimated capacity: 1M+ organizations, 100M+ leads, 10K+ concurrent users\n//\n// 🛡️ ENTERPRISE DATA GOVERNANCE & COMPLIANCE:\n// ==========================================\n//\n// 1. AUDIT & COMPLIANCE FRAMEWORK:\n//    - SOC 2 Type II compliance with automated control testing\n//    - GDPR/CCPA \"right to be forgotten\" automation\n//    - HIPAA compliance for healthcare service providers\n//    - Immutable audit logs with blockchain-style hash chains\n//    - 7-year audit retention with encrypted cold storage\n//\n// 2. DATA LIFECYCLE & RETENTION MANAGEMENT:\n//    - Automated data classification (PUBLIC, INTERNAL, CONFIDENTIAL, RESTRICTED)\n//    - PII detection and automatic encryption for sensitive data\n//    - Automated data archival based on retention policies\n//    - Legal hold capabilities for litigation support\n//    - Data minimization policies to reduce compliance risk\n//\n// 3. BACKUP & DISASTER RECOVERY:\n//    - Continuous WAL-E backup to multi-cloud storage (AWS S3, Azure Blob)\n//    - Point-in-time recovery (PITR) with 30-day retention\n//    - Cross-region backup replication for disaster recovery\n//    - Automated backup verification and restoration testing\n//    - RTO (Recovery Time Objective): 4 hours\n//    - RPO (Recovery Point Objective): 15 minutes\n//\n// 4. SECURITY HARDENING:\n//    - Enhanced orgId-based isolation with application-level tenant context validation\n//    - Column-level encryption using AWS KMS/Azure Key Vault\n//    - Database connection encryption (SSL/TLS 1.3+)\n//    - Network-level security with VPC and IP allowlisting\n//    - Regular security vulnerability scanning and penetration testing\n//    NOTE: RLS not needed - current orgId approach provides superior isolation & performance\n//\n// 🚀 PERFORMANCE MONITORING & OPTIMIZATION (CONCRETE IMPLEMENTATION):\n// ====================================================================\n//\n// 📏 BASELINE MEASUREMENT STRATEGY (IMPLEMENT FIRST):\n// - Current avg query time: ~200ms (measure with existing middleware)\n// - Current connection count: ~50 (implement getConnectionPoolStats())\n// - Current cache hit rate: 0% (no caching implemented)\n// - Current p95 response time: ~500ms (track via middleware)\n// - Current database CPU: ~40% (monitor via CloudWatch/Grafana)\n// \n// MEASUREMENT IMPLEMENTATION ACTIONS:\n// - [ ] Create /api/admin/performance-baseline endpoint\n// - [ ] Add performance metrics collection to existing middleware\n// - [ ] Set up CloudWatch/Grafana dashboards for DB metrics\n// - [ ] Implement weekly performance reports automation\n// \n// 1. REAL-TIME PERFORMANCE METRICS (CONCRETE STEPS):\n//    - Query response time monitoring with percentile tracking (p50, p95, p99)\n//    - IMPLEMENT: Add histogram metrics to createPrismaMiddleware() function\n//    - IMPLEMENT: Send metrics to DataDog/NewRelic via API calls\n//    - IMPLEMENT: Set up alerts: p95 > 200ms, p99 > 500ms\n//    - Connection pool utilization and wait time analysis\n//    - Database resource utilization (CPU, memory, I/O, storage)\n//    - Lock contention and deadlock detection with automated resolution\n//    - Table and index bloat monitoring with automated maintenance\n//\n// 2. INTELLIGENT QUERY OPTIMIZATION:\n//    - Automated EXPLAIN ANALYZE for queries >100ms\n//    - Query plan regression detection with automated alerting\n//    - Index usage analysis with optimization recommendations\n//    - N+1 query detection and prevention in application code\n//    - Query result caching with intelligent cache invalidation\n//\n// 3. CAPACITY PLANNING & AUTO-SCALING:\n//    - Predictive scaling based on usage patterns and growth trends\n//    - Automated scaling triggers: CPU >70%, connections >80%, response time >200ms\n//    - Resource right-sizing recommendations for cost optimization\n//    - Growth projection modeling for infrastructure planning\n//    - Cost optimization through intelligent resource allocation\n//\n// 🎯 ENTERPRISE IMPLEMENTATION TIMELINE:\n// ===================================\n//\n// Q1 2025: Foundation & Performance Optimization\n// - Implement advanced indexing strategies (composite, partial, expression)\n// - Deploy connection pooling with PgBouncer and monitoring\n// - Add Redis caching layer for query results and sessions\n// - Implement comprehensive database monitoring and alerting\n// - Estimated improvement: 70% faster query performance\n//\n// Q2 2025: Scaling Architecture & Read Replicas\n// - Deploy primary-replica architecture with intelligent routing\n// - Implement cross-region replicas for global performance\n// - Add database load balancing and failover automation\n// - Performance testing and optimization at scale\n// - Estimated improvement: Support 10x more concurrent users\n//\n// Q3 2025: Enterprise Governance & Compliance\n// - Implement SOC 2 Type II controls and automated compliance testing\n// - Deploy data lifecycle management and retention automation\n// - Add comprehensive audit system with immutable logs\n// - Security hardening with encryption and access controls\n// - Estimated benefit: Full enterprise compliance certification\n//\n// Q4 2025: Advanced Scaling & Intelligence\n// - Implement horizontal partitioning for massive scale\n// - Deploy AI-powered query optimization and capacity planning\n// - Add predictive analytics for performance and scaling\n// - Global data distribution and edge caching\n// - Estimated improvement: Support 100x current scale\n//\n// 📈 SUCCESS METRICS & ROI:\n// =========================\n//\n// PERFORMANCE TARGETS:\n// ✅ Average query response time: <50ms (current: ~200ms)\n// ✅ Dashboard load time: <1 second (current: ~3 seconds)\n// ✅ Database uptime: >99.99% (current: ~99.5%)\n// ✅ Concurrent user capacity: 10K+ users (current: ~200 users)\n// ✅ Transaction throughput: 10K+ TPS (current: ~100 TPS)\n//\n// BUSINESS IMPACT:\n// ✅ Customer satisfaction: 40% improvement in performance ratings\n// ✅ Enterprise sales velocity: 50% faster deal closure\n// ✅ Operational efficiency: 70% reduction in database maintenance\n// ✅ Compliance readiness: SOC 2 + GDPR + HIPAA certification\n// ✅ Cost optimization: 30% reduction in infrastructure costs per user\n//\n// COMPETITIVE ADVANTAGES:\n// ✅ Database performance exceeds industry leaders (Salesforce, HubSpot)\n// ✅ Multi-tenant isolation superior to most SaaS platforms\n// ✅ Compliance framework ready for enterprise customers\n// ✅ Scaling architecture supports unicorn-level growth\n// ✅ Real-time analytics capabilities rival specialized platforms\n//\n\nmodel Org {\n  id           String   @id @default(cuid())\n  name         String\n  featureFlags Json     @default(\"{}\")\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // 🏭 MULTI-INDUSTRY VERTICALIZATION FRAMEWORK\n  industryType       String? // Primary industry: \"cleaning\", \"hvac\", \"fencing\", \"electrical\"\n  naicsCode          String? // Official NAICS industry code for compliance\n  sicCode            String? // SIC code for legacy systems integration\n  industryConfig     Json    @default(\"{}\") // Industry-specific configuration\n  activeCapabilities Json    @default(\"[]\") // Enabled capabilities for this org\n\n  // Tenant Registration Fields\n  plan               String? // STARTER, PROFESSIONAL, ENTERPRISE\n  industry           String? // Industry type for tenant registration\n  externalCustomerId String? // External customer ID for integration\n  settings           Json    @default(\"{}\") // Organization settings\n\n  // AI Cost Control & Monetization - PROVIDER MODEL\n  aiMonthlyBudgetCents Int    @default(5000) // $50 provider cost limit  \n  aiCreditBalance      Int    @default(1000) // 1k credits = $50 worth (1 credit = $0.05 client-facing)\n  aiPlan               AiPlan @default(BASE) // Client subscription tier\n  aiAlerts             Json   @default(\"{}\") // Usage alert thresholds\n\n  // Stripe Subscription Management\n  stripeCustomerId      String? // Stripe customer ID for billing\n  stripeSubscriptionId  String? // Current active subscription ID\n  subscriptionStatus    String? // active, past_due, canceled, etc\n  subscriptionStartDate DateTime? // When subscription started\n  subscriptionEndDate   DateTime? // When subscription ends/ended\n\n  // Back-relations\n  auditLogs          AuditLog[]\n  ledger             BillingLedger[]\n  customers          Customer[]\n  invoices           Invoice[]\n  jobs               Job[]\n  leads              Lead[]\n  opportunities      Opportunity[]\n  payments           Payment[]\n  referrals          Referral[]\n  rfps               Rfp[]\n  users              User[]\n  rbacRoles          RbacRole[]         @relation(\"OrgRbacRoles\")\n  rbacUserRoles      RbacUserRole[]     @relation(\"OrgRbacUserRoles\")\n  leadInvoices       LeadInvoice[]      @relation(\"OrgLeadInvoices\")\n  pricingPlan        PricingPlan?       @relation(\"OrgPricingPlan\")\n  aiUsageEvents      AiUsageEvent[]     @relation(\"OrgAiUsageEvents\")\n  aiMonthlySummaries AiMonthlySummary[] @relation(\"OrgAiMonthlySummaries\")\n  leadActivities     LeadActivity[]     @relation(\"OrgLeadActivities\")\n  leadTasks          LeadTask[]         @relation(\"OrgLeadTasks\")\n  contacts           Contact[]          @relation(\"OrgContacts\")\n  quotes             Quote[] // Bridge System: Quotes for this org\n  crmTasks           CrmTask[]          @relation(\"OrgCrmTasks\")\n  crmNotes           CrmNote[]          @relation(\"OrgCrmNotes\")\n  crmFiles           CrmFile[]          @relation(\"OrgCrmFiles\")\n  organizations      Organization[]     @relation(\"OrgOrganizations\")\n  conversionAudits   ConversionAudit[]  @relation(\"OrgConversionAudits\")\n\n  // Multi-Portal Business OS Relations\n  employeeProfiles    EmployeeProfile[]    @relation(\"OrgEmployeeProfiles\")\n  workOrders          WorkOrder[]          @relation(\"OrgWorkOrders\")\n  jobSites            JobSite[]            @relation(\"OrgJobSites\")\n  jobAssignments      JobAssignment[]      @relation(\"OrgJobAssignments\")\n  timesheets          TimesheetEntry[]     @relation(\"OrgTimesheets\")\n  jobChecklists       JobChecklistItem[]   @relation(\"OrgJobChecklists\")\n  issueReports        IssueReport[]        @relation(\"OrgIssueReports\")\n  mediaAssets         MediaAsset[]         @relation(\"OrgMediaAssets\")\n  trainingModules     TrainingModule[]     @relation(\"OrgTrainingModules\")\n  trainingCompletions TrainingCompletion[] @relation(\"OrgTrainingCompletions\")\n\n  // Enterprise Governance & Feature Control Relations\n  securityPolicies SecurityPolicy[]    @relation(\"OrgSecurityPolicies\")\n  featureModules   FeatureModule[]     @relation(\"OrgFeatureModules\")\n  featureUsage     FeatureUsage[]      @relation(\"OrgFeatureUsage\")\n  budget           OrganizationBudget? @relation(\"OrgBudget\")\n  integrations     Integration[]       @relation(\"OrgIntegrations\")\n  supportSessions  SupportSession[]    @relation(\"OrgSupportSessions\")\n  auditEvents      AuditEvent[]        @relation(\"OrgAuditEvents\")\n\n  // Advanced Role Management Relations\n  roleVersions      RoleVersion[]      @relation(\"OrgRoleVersions\")\n  roleTemplates     RoleTemplate[]     @relation(\"OrgRoleTemplates\")\n  permissionBundles PermissionBundle[] @relation(\"OrgPermissionBundles\")\n  roleScopes        RoleScope[]        @relation(\"OrgRoleScopes\")\n  roleReviews       RoleReview[]       @relation(\"OrgRoleReviews\")\n  provisioningFlows ProvisioningFlow[] @relation(\"OrgProvisioningFlows\")\n\n  // Temporary Elevation System\n  temporaryElevations TemporaryElevation[] @relation(\"OrgTemporaryElevations\")\n\n  // AI-Powered Feature Management Relations\n  appEvents        AppEvent[]        @relation(\"OrgAppEvents\")\n  featureStates    OrgFeatureState[] @relation(\"OrgFeatureStates\")\n  delegationGrants DelegationGrant[] @relation(\"OrgDelegationGrants\")\n  aiActionLogs     AiActionLog[]     @relation(\"OrgAiActionLogs\")\n\n  // Webhook System Relations\n  webhookEndpoints WebhookEndpoint[] @relation(\"OrgWebhooks\")\n  webhookEvents    WebhookEvent[]    @relation(\"OrgWebhookEvents\")\n\n  // Encryption System Relations\n  encryptionKeys EncryptionKey[] @relation(\"OrgEncryptionKeys\")\n\n  // Backup System Relations\n  backups Backup[] @relation(\"OrgBackups\")\n\n  // Theme System Relations\n  themeConfigs ThemeConfig[] @relation(\"OrgThemeConfigs\")\n  themeUsage   ThemeUsage[]  @relation(\"OrgThemeUsage\")\n\n  // Security and Approval System Relations\n  approvalRequests  ApprovalRequest[]  @relation(\"OrgApprovalRequests\")\n  securityIncidents SecurityIncident[] @relation(\"OrgSecurityIncidents\")\n  deviceAccess      DeviceAccess[]     @relation(\"OrgDeviceAccess\")\n  userLockouts      UserLockout[]      @relation(\"OrgUserLockouts\")\n\n  // Tenant Registration Relations\n  tenantRegistrations TenantRegistration[]\n  leadSourceConfigs   LeadSourceConfig[]\n  jobTemplates        JobTemplate[]\n  idempotencyKeys     IdempotencyKey[]\n\n  // Stripe Connect Relations (Codex Phase 8)\n  stripeConnect TenantStripeConnect?\n\n  // AI Monetization Relations\n  aiPowerProfile AiPowerProfile?\n  aiTasks        AiTask[]\n  creditLedger   CreditLedger[]\n  usageMeters    UsageMeter[]\n  verticalConfig VerticalConfig?\n  trialConfig    TrialConfig?\n  aiUsageLogs    AIUsageLog[]\n\n  // Binder3: Multi-Location, Fleet, Vendor Roles, ULAP, Integrations\n  businessUnits           BusinessUnit[]           @relation(\"OrgBusinessUnits\")\n  linesOfBusiness         LineOfBusiness[]         @relation(\"OrgLinesOfBusiness\")\n  fleetVehicles           FleetVehicle[]           @relation(\"OrgFleetVehicles\")\n  fleetMaintenanceTickets FleetMaintenanceTicket[] @relation(\"OrgFleetMaintenanceTickets\")\n  integrationConfigs      IntegrationConfig[]      @relation(\"OrgIntegrationConfigs\")\n  geotabDvirLogs          GeotabDvirLog[]          @relation(\"OrgGeotabDvirLogs\")\n  holmanFuelTransactions  HolmanFuelTransaction[]  @relation(\"OrgHolmanFuelTransactions\")\n  pricingCatalogItems     PricingCatalogItem[]     @relation(\"OrgPricingCatalogItems\")\n  tenantEntitlements      TenantEntitlement[]      @relation(\"OrgTenantEntitlements\")\n  creditsLedger           CreditsLedgerEntry[]     @relation(\"OrgCreditsLedger\")\n  usageLedger             UsageLedgerEntry[]       @relation(\"OrgUsageLedger\")\n  auditLogs2              AuditLog2[]              @relation(\"OrgAuditLogs2\")\n\n  // Binder4: CRM Enhancements\n  notes       Note[]       @relation(\"OrgNotes\")\n  attachments Attachment[] @relation(\"OrgAttachments\")\n\n  // Binder5: Field PWA, Assets, Rate Limiting\n  assets               Asset[]              @relation(\"OrgAssets\")\n  assetHistory         AssetHistory[]       @relation(\"OrgAssetHistory\")\n  rateLimits           RateLimit[]          @relation(\"OrgRateLimits\")\n  rateLimitUsage       RateLimitUsage[]     @relation(\"OrgRateLimitUsage\")\n  workOrderTimeEntries WorkOrderTimeEntry[] @relation(\"OrgWorkOrderTimeEntries\")\n  syncQueue            SyncQueue[]          @relation(\"OrgSyncQueue\")\n\n  // Work Orders Relations\n  jobTickets JobTicket[]\n\n  // Federation Relations\n  tenantDomain  TenantDomain?\n  profitability TenantProfitability?\n\n  /// brandConfig stores white-label brand settings such as name, colors, and logo URL.\n  /// It is JSON to allow arbitrary keys like { name: \"Mountain Vista\", color: \"#123456\", logoUrl: \"https://...\" }\n  brandConfig Json? @default(\"{}\")\n\n  /// settingsJson stores arbitrary organization-level settings.  This can be used\n  /// by owners to configure API keys or other preferences needed at runtime.\n  settingsJson Json? @default(\"{}\")\n\n  // Multi-Industry Framework Relations\n  industryPack IndustryPack? @relation(\"OrgIndustryPack\", fields: [industryType], references: [industryCode])\n}\n\n// =============================================================================\n// 🏭 MULTI-INDUSTRY VERTICALIZATION FRAMEWORK\n// =============================================================================\n\n/// IndustryPack defines industry-specific configurations, templates, and capabilities\n/// This enables WorkStream to adapt to different service industries (cleaning, HVAC, fencing, etc.)\nmodel IndustryPack {\n  id           String  @id @default(cuid())\n  industryCode String  @unique // \"cleaning\", \"hvac\", \"fencing\", \"electrical\"\n  displayName  String // \"Professional Cleaning Services\"\n  description  String? // Industry description\n  naicsRanges  Json    @default(\"[]\") // Supported NAICS codes [\"562910\", \"561720\"]\n  sicRanges    Json    @default(\"[]\") // Supported SIC codes \n\n  // Industry-Specific Configuration\n  leadFields        Json @default(\"{}\") // Custom lead intake fields\n  workflowSteps     Json @default(\"[]\") // Standard workflow templates\n  catalogItems      Json @default(\"[]\") // Default inventory/service catalog\n  contractTemplates Json @default(\"[]\") // Contract templates and clauses\n  complianceReqs    Json @default(\"{}\") // Industry compliance requirements\n\n  // Estimation & Bidding Configuration\n  rateCards        Json @default(\"[]\") // Labor, material, equipment rates\n  formulaSet       Json @default(\"{}\") // Pricing formula DSL\n  measurementUnits Json @default(\"[]\") // Industry-specific units (sq ft, linear ft)\n\n  // Feature & Capability Configuration\n  requiredCapabilities Json @default(\"[]\") // Must-have capabilities for this industry\n  optionalCapabilities Json @default(\"[]\") // Nice-to-have capabilities\n  hiddenCapabilities   Json @default(\"[]\") // Capabilities to hide for this industry\n\n  isActive  Boolean  @default(true)\n  version   String   @default(\"1.0\")\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  organizations Org[]                @relation(\"OrgIndustryPack\")\n  capabilities  IndustryCapability[] @relation(\"IndustryPackCapabilities\")\n\n  @@index([industryCode])\n  @@index([isActive])\n}\n\n/// Capability defines a business feature that can be enabled/disabled per organization\n/// This allows fine-grained control over features based on industry needs and subscription tier\nmodel Capability {\n  id          String  @id @default(cuid())\n  code        String  @unique // \"inventory_management\", \"contract_esign\", \"mobile_app\"\n  displayName String // \"Inventory Management\"\n  description String? // Feature description\n  category    String // \"operations\", \"sales\", \"billing\", \"compliance\"\n\n  // Feature Control\n  isCore               Boolean @default(false) // Core capabilities always enabled\n  requiresSubscription Boolean @default(false) // Premium feature flag\n  minimumPlan          String? // \"BASIC\", \"PROFESSIONAL\", \"ENTERPRISE\"\n\n  // Technical Configuration\n  apiEndpoints Json @default(\"[]\") // API routes this capability controls\n  uiComponents Json @default(\"[]\") // UI components this capability shows/hides\n  permissions  Json @default(\"[]\") // RBAC permissions related to this capability\n  dependencies Json @default(\"[]\") // Other capabilities this one depends on\n\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  industries IndustryCapability[] @relation(\"CapabilityIndustries\")\n\n  @@index([code])\n  @@index([category])\n  @@index([isCore])\n}\n\n/// IndustryCapability links industries to their supported capabilities\n/// This determines which features are available for each industry type\nmodel IndustryCapability {\n  id             String @id @default(cuid())\n  industryPackId String\n  capabilityId   String\n\n  // Capability Configuration for this Industry\n  isRequired     Boolean @default(false) // Must be enabled for this industry\n  isRecommended  Boolean @default(false) // Recommended for this industry\n  isHidden       Boolean @default(false) // Hidden from this industry\n  defaultEnabled Boolean @default(false) // Enabled by default for new orgs\n\n  // Industry-Specific Customization\n  industryConfig Json @default(\"{}\") // Industry-specific settings for this capability\n  displayOrder   Int? // Order in capability list\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  industryPack IndustryPack @relation(\"IndustryPackCapabilities\", fields: [industryPackId], references: [id])\n  capability   Capability   @relation(\"CapabilityIndustries\", fields: [capabilityId], references: [id])\n\n  @@unique([industryPackId, capabilityId])\n  @@index([industryPackId])\n  @@index([capabilityId])\n}\n\nmodel User {\n  id                  String    @id @default(cuid())\n  orgId               String\n  email               String    @unique\n  name                String?\n  role                Role      @default(STAFF)\n  passwordHash        String?   @db.VarChar(255)\n  mustChangePassword  Boolean   @default(false)\n  emailVerified       Boolean   @default(false)\n  status              String    @default(\"active\")\n  passwordResetToken  String? // SHA-256 hash of reset token\n  passwordResetExpiry DateTime? // Token expiration time\n\n  // BINDER3: Vendor Role Support\n  roleScope String? @default(\"employee\") // 'employee' | 'vendor'\n  audience  String? @default(\"tenant\") // 'tenant' | 'tenant_vendor'\n  metadata  Json? // Vendor scoping data (buIds, permissions, etc.)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  org                Org            @relation(fields: [orgId], references: [id])\n  rbacUserRoles      RbacUserRole[] @relation(\"UserRbacUserRoles\")\n  leadActivities     LeadActivity[] @relation(\"UserLeadActivities\")\n  assignedTasks      LeadTask[]     @relation(\"AssignedLeadTasks\")\n  createdTasks       LeadTask[]     @relation(\"CreatedLeadTasks\")\n  ownedContacts      Contact[]      @relation(\"OwnedContacts\")\n  aiTasks            AiTask[] // AI tasks triggered by this user\n  assignedJobTickets JobTicket[]    @relation(\"JobTicketCrew\") // Job tickets assigned to this user\n\n  // Employee Portal Relations\n  employeeProfile EmployeeProfile? @relation(\"UserEmployeeProfile\")\n\n  // Temporary Elevation Relations\n  temporaryElevations TemporaryElevation[] @relation(\"UserTemporaryElevations\")\n\n  // User Session Relations\n  sessions UserSession[] @relation(\"UserSessions\")\n\n  // Two-Factor Authentication Relations\n  twoFactor UserTwoFactor[] @relation(\"UserTwoFactor\")\n\n  // AI-Powered Feature Management Relations\n  appEvents          AppEvent[]        @relation(\"UserAppEvents\")\n  enabledFeatures    OrgFeatureState[] @relation(\"UserEnabledFeatures\")\n  delegationGrants   DelegationGrant[] @relation(\"UserDelegationGrants\")\n  grantedDelegations DelegationGrant[] @relation(\"UserGrantedDelegations\")\n  aiActionRequests   AiActionLog[]     @relation(\"UserAiActionRequests\")\n  aiActionApprovals  AiActionLog[]     @relation(\"UserAiActionApprovals\")\n\n  // Theme System Relations\n  themeUsage ThemeUsage[] @relation(\"UserThemeUsage\")\n\n  // Security and Approval System Relations\n  approvalRequests  ApprovalRequest[]  @relation(\"UserApprovalRequests\")\n  approvals         ApprovalRequest[]  @relation(\"UserApprovals\")\n  securityIncidents SecurityIncident[] @relation(\"UserSecurityIncidents\")\n  assignedIncidents SecurityIncident[] @relation(\"AssignedSecurityIncidents\")\n  deviceAccess      DeviceAccess[]     @relation(\"UserDeviceAccess\")\n  lockouts          UserLockout[]      @relation(\"UserLockouts\")\n  unlockedUsers     UserLockout[]      @relation(\"UnlockedUsers\")\n\n  // Tenant Registration Relations\n  tenantRegistrations TenantRegistration[]\n\n  // AI Cost Tracking Relations\n  aiUsageLogs AIUsageLog[]\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  // 🚀 PERFORMANCE INDEXES FOR USER QUERIES\n  @@index([email]) // Login performance (already unique, but explicit)\n  @@index([orgId, role]) // Permission checks & role filtering\n  @@index([orgId, status]) // Active user queries\n  @@index([orgId, createdAt]) // User management queries\n}\n\n/// UserSession tracks active user login sessions for security and session management\nmodel UserSession {\n  id         String   @id @default(cuid())\n  userId     String\n  sessionId  String   @unique // Session identifier stored in cookie\n  ipAddress  String? // IP address when session was created\n  userAgent  String? // Browser/client user agent\n  deviceInfo String? // Parsed device information (OS, browser)\n  location   String? // Geographic location (city, country)\n  isActive   Boolean  @default(true)\n  lastSeenAt DateTime @default(now())\n  expiresAt  DateTime // Session expiration time\n  createdAt  DateTime @default(now())\n\n  user User @relation(\"UserSessions\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([sessionId])\n  @@index([isActive])\n}\n\n/// UserTwoFactor stores two-factor authentication data for users\nmodel UserTwoFactor {\n  id          String    @id @default(cuid())\n  userId      String    @unique // One 2FA config per user\n  isEnabled   Boolean   @default(false)\n  totpSecret  String? // Base32 encoded TOTP secret\n  backupCodes String[] // Array of backup codes (hashed)\n  phoneNumber String? // Phone for SMS backup (E.164 format)\n  verifiedAt  DateTime? // When 2FA was last verified/setup\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  user User @relation(\"UserTwoFactor\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\n/// ProviderSettings stores encrypted provider authentication and configuration data\n/// This table supports dual-layer authentication: primary DB-backed + break-glass env fallback\nmodel ProviderSettings {\n  id String @id @default(cuid())\n\n  // Authentication fields (encrypted)\n  email        String  @unique // Provider email (encrypted)\n  passwordHash String // bcrypt/argon2 hash (encrypted)\n  totpSecret   String? // Base32 TOTP secret (encrypted)\n\n  // Configuration fields (encrypted)\n  displayName String? // Provider display name (encrypted)\n  permissions String[] // Provider permissions array (encrypted)\n\n  // Security & audit fields\n  isActive         Boolean   @default(true)\n  lastLoginAt      DateTime?\n  lastLoginIp      String?\n  failedLoginCount Int       @default(0)\n  lockedUntil      DateTime?\n\n  // Audit trail\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String? // Who created this provider account\n  updatedBy String? // Who last updated this account\n\n  // Audit log relationship\n  auditLogs ProviderAuditLog[]\n\n  @@index([email])\n  @@index([isActive])\n  @@index([lastLoginAt])\n}\n\n/// ProviderAuditLog tracks all provider authentication and configuration changes\nmodel ProviderAuditLog {\n  id         String @id @default(cuid())\n  providerId String\n\n  // Action details\n  action  String // LOGIN, LOGOUT, UPDATE_PASSWORD, UPDATE_TOTP, etc.\n  details Json? // Additional action details\n\n  // Context\n  ipAddress String?\n  userAgent String?\n  sessionId String?\n\n  // Recovery mode tracking\n  isRecoveryMode Boolean @default(false)\n\n  // Audit metadata\n  timestamp DateTime @default(now())\n\n  // Relationships\n  provider ProviderSettings @relation(fields: [providerId], references: [id], onDelete: Cascade)\n\n  @@index([providerId])\n  @@index([action])\n  @@index([timestamp])\n  @@index([isRecoveryMode])\n}\n\n/**\n * === ENTERPRISE THEME SYSTEM ===\n * Theme configuration and customization system for the StreamFlow platform.\n * Supports 6 cutting-edge themes with provider-level management and owner-only client customization.\n * FEATURES:\n * - Real-time theme switching\n * - Provider-level theme management\n * - Owner-only client customization\n * - Brand asset integration\n * - Theme inheritance and overrides\n */\n\n// Theme Configuration Model\nmodel ThemeConfig {\n  id String @id @default(cuid())\n\n  // Theme Identity\n  themeId     String // References theme-definitions.ts theme IDs\n  name        String\n  description String?\n  category    String // futuristic, professional, luxury, tactical, cosmic\n\n  // Ownership and Scope\n  orgId    String? // If set, this is an org-specific theme override\n  isGlobal Boolean @default(false) // Provider-managed global themes\n  isActive Boolean @default(true)\n\n  // Theme Customization\n  customColors     Json? // Override specific colors from base theme\n  customPatterns   Json? // Override patterns\n  customTypography Json? // Override typography settings\n  brandAssets      Json? // Logo URLs, brand colors, etc.\n\n  // Metadata\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String? // User ID who created this theme config\n\n  // Relationships\n  org Org? @relation(\"OrgThemeConfigs\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, themeId]) // One theme config per org per theme\n  @@index([orgId])\n  @@index([themeId])\n  @@index([isGlobal])\n  @@index([isActive])\n}\n\n// Theme Usage Tracking\nmodel ThemeUsage {\n  id String @id @default(cuid())\n\n  // Usage Context\n  orgId   String\n  themeId String\n  userId  String? // User who applied the theme\n\n  // Usage Details\n  appliedAt DateTime @default(now())\n  sessionId String?\n  userAgent String?\n\n  // Relationships\n  org  Org   @relation(\"OrgThemeUsage\", fields: [orgId], references: [id], onDelete: Cascade)\n  user User? @relation(\"UserThemeUsage\", fields: [userId], references: [id], onDelete: SetNull)\n\n  @@index([orgId])\n  @@index([themeId])\n  @@index([appliedAt])\n}\n\n/**\n * === ENTERPRISE ROADMAP: LEAD DATA MODEL ===\n * CURRENT STATE vs ENTERPRISE STANDARDS:\n * - Basic lead fields with limited contact information\n * - Simple JSON enrichment storage without schema validation\n * - Basic scoring with single aiScore field\n * - Limited pipeline management with simple status enum\n * ENTERPRISE CRM COMPARISON (Salesforce, HubSpot, Dynamics Lead Object):\n * 1. Comprehensive Contact Management:\n * - Multiple contact persons per lead/account\n * - Contact roles and decision-maker hierarchy\n * - Contact preferences and communication history\n * - Social media profiles and professional networks\n * 2. Advanced Lead Intelligence:\n * - Company firmographics (employee count, revenue, industry)\n * - Technographics (technology stack, software usage)\n * - Intent data and buying signals\n * - Competitive landscape and win/loss history\n * 3. Pipeline and Lifecycle Management:\n * - Multi-stage opportunity pipeline with custom stages\n * - Stage-specific probability weights and requirements\n * - Sales velocity tracking and forecasting\n * - Automated workflow triggers and actions\n * IMPLEMENTATION ROADMAP:\n * Phase 1: Enhanced Lead Data Model (2-3 weeks)\n * - Add company enrichment fields (employees, revenue, industry)\n * - Create separate Contact model with lead relationships\n * - Add lead source attribution and campaign tracking\n * - Implement custom field support with type validation\n * Phase 2: Advanced Scoring and Intelligence (1-2 months)\n * - Add multi-dimensional scoring (conversion, value, urgency)\n * - Create Lead Intelligence model for enrichment data\n * - Add Intent Data model for buying signal tracking\n * - Implement lead health and engagement scoring\n * Phase 3: Pipeline and Workflow Management (2-3 months)\n * - Create Opportunity model with multi-stage pipeline\n * - Add Stage and Pipeline configuration models\n * - Implement Workflow and Trigger models for automation\n * - Add comprehensive activity and interaction tracking\n * Phase 4: Enterprise Integration (1-2 months)\n * - Add external system integration tracking\n * - Create audit trail for all lead data changes\n * - Implement data governance and compliance features\n * - Add performance optimization for high-volume processing\n * ENTERPRISE FEATURES TO ADD:\n */\n\nmodel Lead {\n  id           String     @id @default(cuid())\n  orgId        String\n  publicId     String     @unique\n  sourceType   LeadSource\n  identityHash String\n\n  // === BASIC CONTACT INFORMATION ===\n  company     String?\n  contactName String?\n  email       String?\n  phoneE164   String?\n  website     String?\n\n  // === CRM FIELDS (Binder1.md) ===\n  stage    String  @default(\"new\") // new, contacted, qualified, proposal, won, lost\n  ownerId  String? // User who owns this lead\n  archived Boolean @default(false)\n\n  // === BINDER4 ENHANCEMENTS ===\n  version Int     @default(1) // Optimistic locking\n  buId    String? // Business Unit assignment\n\n  // === CONVERSION TRACKING (Bridge System) ===\n  convertedToCustomerId     String?\n  convertedToOrganizationId String?\n  convertedToContactId      String?\n  conversionAuditId         String?\n\n  // === ENTERPRISE FIELDS TO ADD ===\n  // companySize     CompanySize?      // SMALL, MEDIUM, LARGE, ENTERPRISE\n  // annualRevenue   Decimal?          // Company annual revenue\n  // industry        Industry?         // Industry classification\n  // department      String?           // Contact department\n  // jobTitle        String?           // Contact job title\n  // decisionMaker   Boolean?          // Is primary decision maker\n  // budget          Decimal?          // Available budget\n  // timeline        Timeline?         // Purchase timeline (IMMEDIATE, QUARTER, YEAR)\n\n  // === MULTI-INDUSTRY SERVICE & GEOGRAPHIC INFO ===\n  industryType String? // Industry: \"cleaning\", \"hvac\", \"fencing\", etc.\n  leadType     String  @default(\"job\") // \"relationship\", \"job\", \"permit\", \"government\"  \n  naicsCode    String? // Industry classification\n  sicCode      String? // Legacy industry code\n  serviceCode  String? // Industry-specific service type code\n\n  // Address information  \n  zip          String?\n  city         String?\n  state        String?\n  postalCode   String? @db.VarChar(20)\n  address      String?\n  addressLine1 String?\n  addressLine2 String?\n  country      String?\n\n  // 🏭 INDUSTRY-SPECIFIC CUSTOM FIELDS\n  customFields Json @default(\"{}\") // Industry-specific fields from IndustryPack.leadFields\n\n  // === LEAD INTELLIGENCE ===\n  enrichmentJson Json @default(\"{}\") // LEGACY: Migrate to structured models\n  aiScore        Int  @default(0) // LEGACY: Expand to multi-dimensional scoring\n  scoreFactors   Json @default(\"{}\") // LEGACY: Move to structured scoring model\n\n  // === ENTERPRISE SCORING TO ADD ===\n  // conversionScore    Int?           // ML-predicted conversion probability (0-100)\n  // valueScore         Int?           // Predicted deal value score (0-100)\n  // urgencyScore       Int?           // Purchase urgency score (0-100)\n  // engagementScore    Int?           // Lead engagement score (0-100)\n  // dataQualityScore   Int?           // Data completeness score (0-100)\n\n  // === LIFECYCLE AND PIPELINE ===\n  systemGenerated Boolean    @default(false)\n  convertedAt     DateTime?\n  rfp             Json? // MIGRATE: Move to structured RFP model\n  status          LeadStatus @default(NEW) // EXPAND: Multi-stage pipeline\n\n  // === ENTERPRISE PIPELINE TO ADD ===\n  // currentStage       String?        // Current pipeline stage\n  // stageEnteredAt     DateTime?      // When entered current stage\n  // stageProbability   Int?           // Win probability for current stage\n  // expectedCloseDate  DateTime?      // Predicted close date\n  // actualCloseDate    DateTime?      // Actual close date\n  // lostReason         String?        // Reason if lost\n  // competitorLost     String?        // Competitor who won\n\n  // === AUDIT AND TRACKING ===\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  notes        String?\n  sourceDetail String?\n\n  // === ENTERPRISE ATTRIBUTION TO ADD ===\n  // campaign           String?        // Marketing campaign attribution\n  // medium             String?        // Traffic medium (organic, paid, referral)\n  // source             String?        // Traffic source (google, linkedin, etc)\n  // firstTouchDate     DateTime?      // First interaction timestamp\n  // lastTouchDate      DateTime?      // Last interaction timestamp\n  // touchpointCount    Int?           // Number of touchpoints\n\n  // === RELATIONSHIPS ===\n  org             Org               @relation(fields: [orgId], references: [id])\n  LeadInvoiceLine LeadInvoiceLine[]\n  activities      LeadActivity[]    @relation(\"LeadActivities\")\n  tasks           LeadTask[]        @relation(\"LeadTasks\")\n\n  // === ENTERPRISE RELATIONSHIPS TO ADD ===\n  // contacts        Contact[]         // Multiple contacts per lead\n  // opportunity     Opportunity?      // Associated opportunity\n  // campaigns       CampaignTouch[]   // Campaign interactions\n  // enrichments     LeadEnrichment[]  // External data enrichments\n  // scoringHistory  LeadScore[]       // Score history over time\n  // duplicates      LeadDuplicate[]   // Duplicate detection results\n\n  // === ENTERPRISE INDEXES TO ADD ===\n  // @@index([orgId, conversionScore])\n  // @@index([orgId, currentStage])\n  // @@index([orgId, expectedCloseDate])\n  // @@index([orgId, campaign])\n  // @@index([orgId, industry])\n  // @@index([orgId, companySize])\n  // @@index([email])                    // Cross-org email lookup\n  // @@index([phoneE164])               // Cross-org phone lookup\n  // @@index([website])                 // Company website lookup\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  // 🚀 PERFORMANCE INDEXES FOR ENTERPRISE SCALE\n  @@index([orgId, createdAt]) // Dashboard queries (existing)\n  @@index([orgId, status]) // Fast lead filtering by status\n  @@index([orgId, status, createdAt]) // Combined status + time queries\n  @@index([email]) // Duplicate detection & email lookups\n  @@index([phoneE164]) // Phone number lookups\n  @@index([orgId, industryType]) // Industry-specific queries\n  @@index([orgId, aiScore]) // Lead scoring queries\n  @@index([identityHash]) // Duplicate detection\n  @@index([publicId]) // Public API lookups (already unique, but explicit)\n  @@index([orgId, convertedAt]) // Conversion tracking\n  @@index([orgId, sourceType]) // Source analysis\n}\n\nmodel Customer {\n  id           String   @id @default(cuid())\n  orgId        String\n  publicId     String   @unique\n  company      String?\n  primaryName  String?\n  primaryEmail String?\n  primaryPhone String?\n  notes        String?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  org           Org           @relation(fields: [orgId], references: [id])\n  invoices      Invoice[]\n  jobs          Job[]\n  workOrders    WorkOrder[]   @relation(\"CustomerWorkOrders\")\n  opportunities Opportunity[]\n  jobTickets    JobTicket[]\n  quotes        Quote[] // Bridge System: Quotes for this customer\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n}\n\nmodel Opportunity {\n  id             String    @id @default(cuid())\n  orgId          String\n  organizationId String // Required link to Organization (NOT NULL after migration)\n  customerId     String? // Optional legacy link to Customer (for FSM compatibility)\n  valueType      ValueType @default(RELATIONSHIP)\n  estValue       Decimal?  @db.Decimal(12, 2)\n  stage          String    @default(\"new\")\n  ownerId        String?\n  sourceLeadId   String?\n  classification Json      @default(\"{}\")\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  // === CRM FIELDS (Binder1.md) ===\n  title       String? // Opportunity name/title\n  probability Int? // Win probability (0-100)\n  closeDate   DateTime? // Expected close date\n  leadId      String? // Source lead ID\n\n  // === BINDER4 ENHANCEMENTS ===\n  version Int     @default(1) // Optimistic locking\n  buId    String? // Business Unit assignment\n\n  organization Organization @relation(\"OrganizationOpportunities\", fields: [organizationId], references: [id], onDelete: Cascade)\n  customer     Customer?    @relation(fields: [orgId, customerId], references: [orgId, id])\n  org          Org          @relation(fields: [orgId], references: [id])\n  quotes       Quote[] // Bridge System: Quotes linked to this opportunity\n\n  @@index([leadId])\n  @@index([orgId, organizationId]) // Organization opportunities\n}\n\n// Quote/Estimate model (Bridge System)\nmodel Quote {\n  id            String    @id @default(cuid())\n  orgId         String\n  opportunityId String? // Link to CRM Opportunity\n  customerId    String\n  title         String\n  description   String?\n  items         Json      @default(\"[]\")\n  subtotal      Decimal   @db.Decimal(12, 2)\n  tax           Decimal   @default(0) @db.Decimal(12, 2)\n  total         Decimal   @db.Decimal(12, 2)\n  status        String    @default(\"draft\") // draft, sent, accepted, rejected, expired\n  validUntil    DateTime?\n  acceptedAt    DateTime?\n  rejectedAt    DateTime?\n  createdBy     String\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  org         Org          @relation(fields: [orgId], references: [id])\n  customer    Customer     @relation(fields: [customerId], references: [id])\n  opportunity Opportunity? @relation(fields: [opportunityId], references: [id])\n\n  @@unique([orgId, id])\n  @@index([orgId])\n  @@index([opportunityId])\n  @@index([customerId])\n  @@index([status])\n}\n\n/// Contact represents individual people associated with organizations\n/// Implements handover binder requirement for Contact entity with full CRM capabilities\nmodel Contact {\n  id    String @id @default(cuid())\n  orgId String // Multi-tenant isolation\n\n  // Basic Information\n  name       String // Full name\n  email      String? // Email address\n  phone      String? // Phone number\n  title      String? // Job title\n  department String? // Department\n\n  // Organization Association\n  organizationId String // Required link to Organization (NOT NULL after migration)\n  isPrimary      Boolean @default(false) // Primary contact for organization\n\n  // Contact Details\n  mobilePhone String? // Mobile phone\n  workPhone   String? // Work phone\n  fax         String? // Fax number\n  website     String? // Personal or professional website\n\n  // Address Information\n  address Json? // Structured address: { street, city, state, zip, country }\n\n  // Social & Professional\n  linkedIn String? // LinkedIn profile URL\n  twitter  String? // Twitter handle\n\n  // Relationship Management\n  ownerId String? // User who owns this contact\n  source  String? // How contact was acquired\n  status  String  @default(\"active\") // active, inactive, archived\n\n  // Notes & Tags\n  notes String? // General notes about contact\n  tags  Json    @default(\"[]\") // Array of tags for categorization\n\n  // Custom Fields\n  customFields Json @default(\"{}\") // Flexible custom field storage\n\n  // Binder4 Enhancements\n  version Int     @default(1) // Optimistic locking\n  buId    String? // Business Unit assignment\n\n  // Metadata\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  lastContactedAt DateTime? // Last time contact was reached out to\n\n  // Relations\n  org          Org          @relation(\"OrgContacts\", fields: [orgId], references: [id], onDelete: Cascade)\n  organization Organization @relation(\"OrganizationContacts\", fields: [organizationId], references: [id], onDelete: Cascade)\n  owner        User?        @relation(\"OwnedContacts\", fields: [orgId, ownerId], references: [orgId, id])\n\n  // Indexes for performance\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@index([orgId, email]) // Email lookup\n  @@index([orgId, organizationId]) // Organization contacts\n  @@index([orgId, ownerId]) // Owner's contacts\n  @@index([orgId, status]) // Status filtering\n  @@index([orgId, createdAt]) // Timeline queries\n  @@index([orgId, lastContactedAt]) // Recent contact queries\n}\n\n/// CrmTask manages tasks attached to CRM entities (opportunities, organizations, contacts)\n/// Implements binder2 requirement for task management with full CRUD capabilities\nmodel CrmTask {\n  id    String @id @default(cuid())\n  orgId String // Multi-tenant isolation (tenant_id in binder2)\n\n  // Entity attachment\n  entityType String // enum: 'opportunity', 'organization', 'contact'\n  entityId   String // ID of the attached entity\n\n  // Task details\n  title          String\n  dueAt          DateTime?\n  assigneeUserId String?\n  status         String    @default(\"open\") // enum: 'open', 'in_progress', 'done', 'cancelled'\n\n  // Metadata\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgCrmTasks\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  // Indexes for performance (binder2 requirements)\n  @@index([orgId, entityType, entityId]) // Entity tasks lookup\n  @@index([orgId, assigneeUserId, status]) // Assignee's tasks\n  @@index([orgId, dueAt]) // Due date queries\n  @@index([orgId, updatedAt]) // Recent updates\n}\n\n/// CrmNote manages notes attached to CRM entities\n/// Implements binder2 requirement for note management with audit trail\nmodel CrmNote {\n  id    String @id @default(cuid())\n  orgId String // Multi-tenant isolation (tenant_id in binder2)\n\n  // Entity attachment\n  entityType String // enum: 'opportunity', 'organization', 'contact'\n  entityId   String // ID of the attached entity\n\n  // Note content\n  body      String @db.Text\n  createdBy String // User who created the note\n\n  // Metadata\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgCrmNotes\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  // Indexes for performance (binder2 requirements)\n  @@index([orgId, entityType, entityId, createdAt]) // Entity notes timeline\n  @@index([orgId, createdBy]) // User's notes\n  @@index([orgId, updatedAt]) // Recent updates\n}\n\n/// CrmFile manages file attachments for CRM entities\n/// Implements binder2 requirement for file management with AV scanning\nmodel CrmFile {\n  id    String @id @default(cuid())\n  orgId String // Multi-tenant isolation (tenant_id in binder2)\n\n  // Entity attachment\n  entityType String // enum: 'opportunity', 'organization', 'contact'\n  entityId   String // ID of the attached entity\n\n  // File details\n  filename   String\n  mimeType   String\n  sizeBytes  Int\n  storageKey String // S3/storage key\n\n  // Metadata\n  createdAt DateTime @default(now())\n\n  // Relations\n  org Org @relation(\"OrgCrmFiles\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  // Indexes for performance (binder2 requirements)\n  @@index([orgId, entityType, entityId, createdAt]) // Entity files timeline\n  @@index([orgId, storageKey]) // Storage key lookup\n  @@index([orgId, createdAt]) // Recent uploads\n}\n\n// ============================================================================\n// CRM ORGANIZATION MODEL (Binder2 - Option C)\n// ============================================================================\n// Proper CRM Organization model - replaces Customer misuse in CRM routes\n// Separate from FSM Customer model for clean architecture\nmodel Organization {\n  id    String @id @default(cuid())\n  orgId String // Tenant ID (tenantId in binder2 spec)\n\n  // Core Information\n  name          String // Organization name (required)\n  domain        String? // Primary domain (e.g., \"acme.com\")\n  industry      String? // Industry/vertical\n  size          Int? // Company size (employee count)\n  annualRevenue Int? // Annual revenue in cents\n  website       String? // Website URL\n  phone         String? // Primary phone (E.164 format)\n\n  // Ownership & Status\n  ownerId  String? // User who owns this organization\n  archived Boolean @default(false) // Soft delete flag\n\n  // Binder4 Enhancements\n  version Int     @default(1) // Optimistic locking\n  buId    String? // Business Unit assignment\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org              Org               @relation(\"OrgOrganizations\", fields: [orgId], references: [id], onDelete: Cascade)\n  contacts         Contact[]         @relation(\"OrganizationContacts\")\n  opportunities    Opportunity[]     @relation(\"OrganizationOpportunities\")\n  conversionAudits ConversionAudit[] @relation(\"OrganizationConversionAudits\")\n\n  // Indexes for performance and uniqueness\n  @@unique([orgId, name]) // Unique name per tenant (case-sensitive in DB, enforce case-insensitive in code)\n  @@index([orgId, domain]) // Domain lookup\n  @@index([orgId, archived]) // Active organizations\n  @@index([orgId, ownerId]) // Owner's organizations\n  @@index([orgId, updatedAt]) // Recent updates\n}\n\n// ============================================================================\n// CONVERSION AUDIT MODEL (Binder2 - Option C - Authoritative)\n// ============================================================================\n// Tracks all CRM entity conversions and mutations for compliance\nmodel ConversionAudit {\n  id             String   @id @default(uuid())\n  tenantId       String // Tenant ID (orgId in our system)\n  organizationId String? // CRM Organization ID (nullable)\n  userId         String? // User who performed the action (nullable)\n  action         String // e.g., \"create\", \"update\", \"delete\", \"merge\", \"convert\"\n  resource       String // e.g., \"organization:123\", \"contact:abc\"\n  meta           Json? // Additional metadata (before/after values, etc.)\n  ip             String? // Captured from request if available\n  userAgent      String? // User agent string\n  createdAt      DateTime @default(now())\n\n  // Relations\n  organization Organization? @relation(\"OrganizationConversionAudits\", fields: [organizationId], references: [id], onDelete: SetNull)\n  tenant       Org           @relation(\"OrgConversionAudits\", fields: [tenantId], references: [id], onDelete: Cascade)\n\n  // Indexes for querying\n  @@index([tenantId, createdAt], map: \"ix_conv_audit_tenant_created\")\n  @@index([tenantId, resource], map: \"ix_conv_audit_tenant_resource\")\n  @@index([tenantId, organizationId], map: \"ix_conv_audit_tenant_org\")\n}\n\nmodel Invoice {\n  id         String   @id @default(cuid())\n  orgId      String\n  customerId String?\n  amount     Decimal  @db.Decimal(12, 2)\n  status     String   @default(\"draft\")\n  issuedAt   DateTime @default(now())\n  items      Json     @default(\"[]\")\n\n  customer Customer? @relation(fields: [orgId, customerId], references: [orgId, id])\n  org      Org       @relation(fields: [orgId], references: [id])\n  payments Payment[]\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  // 🚀 PERFORMANCE INDEXES FOR INVOICE QUERIES\n  @@index([orgId, status]) // Invoice status filtering\n  @@index([orgId, issuedAt]) // Invoice timeline queries\n  @@index([orgId, customerId]) // Customer invoice history\n  @@index([orgId, status, issuedAt]) // Combined status + time queries\n}\n\nmodel Payment {\n  id         String   @id @default(cuid())\n  orgId      String\n  invoiceId  String?\n  amount     Decimal  @db.Decimal(12, 2)\n  method     String   @default(\"stripe\")\n  receivedAt DateTime @default(now())\n  reference  String?\n\n  invoice Invoice? @relation(fields: [orgId, invoiceId], references: [orgId, id])\n  org     Org      @relation(fields: [orgId], references: [id])\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  // 🚀 PERFORMANCE INDEXES FOR PAYMENT QUERIES\n  @@index([orgId, receivedAt]) // Payment timeline queries\n  @@index([orgId, method]) // Payment method analysis\n  @@index([invoiceId]) // Invoice payment lookup\n}\n\nmodel Rfp {\n  id          String    @id @default(cuid())\n  orgId       String\n  publicId    String    @unique\n  sourceSite  String\n  title       String\n  dueDate     DateTime?\n  docs        Json      @default(\"[]\")\n  aiBidFit    Int?\n  aiPriceHint Json      @default(\"{}\")\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  jobs Job[]\n  org  Org   @relation(fields: [orgId], references: [id])\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n}\n\nmodel Job {\n  id         String   @id @default(cuid())\n  orgId      String\n  customerId String?\n  rfpId      String?\n  status     String   @default(\"planned\")\n  schedule   Json     @default(\"{}\")\n  assignedTo String?\n  checklist  Json     @default(\"[]\")\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  customer Customer? @relation(fields: [orgId, customerId], references: [orgId, id])\n  org      Org       @relation(fields: [orgId], references: [id])\n  rfp      Rfp?      @relation(fields: [orgId, rfpId], references: [orgId, id])\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n}\n\nmodel Referral {\n  id            String    @id @default(cuid())\n  orgId         String\n  employeeId    String?\n  referredName  String\n  referredEmail String?\n  referredPhone String?\n  status        String    @default(\"new\")\n  convertedAt   DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id])\n}\n\nmodel BillingLedger {\n  id        String     @id @default(cuid())\n  orgId     String\n  type      LedgerType\n  amount    Decimal    @db.Decimal(12, 2)\n  meta      Json       @default(\"{}\")\n  createdAt DateTime   @default(now())\n\n  org Org @relation(fields: [orgId], references: [id])\n\n  @@index([orgId, type])\n}\n\n/// LeadInvoice represents a monthly invoice for converted leads. This is separate from the\n/// existing Invoice model used for customers/jobs. It aggregates lead conversions and\n/// includes metadata to support billing and optional Stripe integration.\nmodel LeadInvoice {\n  id              String   @id @default(cuid())\n  orgId           String // Made required for multi-tenant isolation\n  org             Org      @relation(\"OrgLeadInvoices\", fields: [orgId], references: [id])\n  number          String   @unique\n  periodFrom      DateTime\n  periodTo        DateTime\n  status          String // \"draft\" | \"open\" | \"paid\" | \"void\" | \"uncollectible\"\n  subtotalCents   Int\n  taxCents        Int      @default(0)\n  totalCents      Int\n  currency        String   @default(\"usd\")\n  stripeInvoiceId String?\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n  /// Number of leads billed on this invoice (to support flat-per-lead billing)\n  leadCount       Int      @default(0)\n\n  lines LeadInvoiceLine[]\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n}\n\n/// LeadInvoiceLine represents an individual line item on a LeadInvoice. Each line is typically\n/// associated with a converted lead, but generic fee/credit lines are also supported.\nmodel LeadInvoiceLine {\n  id        String      @id @default(cuid())\n  orgId     String // Added for multi-tenant isolation\n  invoiceId String\n  invoice   LeadInvoice @relation(fields: [orgId, invoiceId], references: [orgId, id])\n\n  // Optional association back to a Lead for traceability.\n  leadId String?\n  lead   Lead?   @relation(fields: [orgId, leadId], references: [orgId, id])\n\n  description    String\n  quantity       Int      @default(1)\n  unitPriceCents Int\n  amountCents    Int\n  source         String?\n  createdAt      DateTime @default(now())\n\n  @@index([invoiceId])\n  @@index([leadId])\n  @@index([orgId, leadId])\n  @@index([orgId, invoiceId])\n}\n\nmodel AuditLog {\n  id         String   @id @default(cuid())\n  orgId      String\n  actorId    String? // Changed from actorUserId to match migration and usage\n  action     String // Action performed (create, update, delete, etc.)\n  entityType String // What was acted upon (lead, invoice, etc.)\n  entityId   String? // ID of the target entity\n  delta      Json     @default(\"{}\") // Changes made (JSON format)\n  createdAt  DateTime @default(now())\n\n  org Org @relation(fields: [orgId], references: [id])\n\n  // 🚀 PERFORMANCE INDEXES FOR AUDIT QUERIES\n  @@index([orgId, createdAt]) // Audit timeline queries\n  @@index([actorId, createdAt]) // User activity tracking\n  @@index([orgId, entityType]) // Entity-specific audit logs\n  @@index([orgId, action]) // Action-specific queries\n  @@index([entityType, entityId]) // Entity audit history\n}\n\nenum Role {\n  OWNER\n  MANAGER\n  STAFF\n  ACCOUNTANT\n  EMPLOYEE\n}\n\nenum LeadSource {\n  COLD\n  HOT\n  RFP\n  MANUAL_EMPLOYEE_REFERRAL\n  MANUAL_EXISTING_CUSTOMER\n  MANUAL_NEW_CUSTOMER\n  MANUAL_OTHER\n  /// System-generated leads imported from external sources like SAM.gov\n  SYSTEM\n  /// Employee referrals (for internal referral program)\n  EMPLOYEE_REFERRAL\n  /// Manually added leads not fitting other categories\n  MANUAL\n  /// Leads imported from Local Service Ads or other lead sources\n  LSA\n}\n\nenum ValueType {\n  RELATIONSHIP\n  JOB\n}\n\nenum LedgerType {\n  CONVERSION_FEE\n  PACK_PURCHASE\n}\n\n// === RBAC (namespaced to avoid collision with your existing Role enum) ===\n\nmodel RbacPermission {\n  id          String   @id @default(cuid())\n  code        String   @unique // e.g. \"lead:create\"\n  description String?\n  createdAt   DateTime @default(now())\n\n  rolePerms RbacRolePermission[]\n}\n\nmodel RbacRole {\n  id        String   @id @default(cuid())\n  orgId     String?\n  // 👇 keep the named relation to match Org.rbacRoles\n  org       Org?     @relation(\"OrgRbacRoles\", fields: [orgId], references: [id])\n  name      String\n  slug      String\n  isSystem  Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  rolePerms RbacRolePermission[]\n  userRoles RbacUserRole[]\n\n  // Advanced Role Management Relations\n  versions RoleVersion[] @relation(\"RoleVersions\")\n  scopes   RoleScope[]   @relation(\"RoleScopes\")\n  reviews  RoleReview[]  @relation(\"RoleReviews\")\n\n  // === 🚀 ENTERPRISE RBAC PERFORMANCE INDEXING ===\n  // Critical for permission checking performance at scale (millions of permission checks/day)\n  // TODO: Add advanced indexes for RBAC operations:\n  // @@index([orgId, isSystem, name])               // System vs custom role differentiation\n  // @@index([slug, isSystem])                      // Cross-tenant role template queries\n  // @@index([orgId, createdAt, isSystem])          // Role management and audit queries\n\n  // Note: RbacUserRole and RbacRolePermission junction tables need careful indexing\n  // for optimal permission resolution performance\n\n  @@unique([orgId, slug]) // Unique role identification per org\n}\n\nmodel RbacRolePermission {\n  roleId       String\n  permissionId String\n\n  role       RbacRole       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  permission RbacPermission @relation(fields: [permissionId], references: [id], onDelete: Cascade)\n\n  @@id([roleId, permissionId])\n}\n\nmodel RbacUserRole {\n  id     String  @id @default(cuid())\n  userId String\n  orgId  String?\n  roleId String\n\n  // 👇 named relations to match Org/User sides\n  user User     @relation(\"UserRbacUserRoles\", fields: [userId], references: [id], onDelete: Cascade)\n  org  Org?     @relation(\"OrgRbacUserRoles\", fields: [orgId], references: [id])\n  role RbacRole @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, roleId, orgId])\n}\n\n// ===== ADVANCED ENTERPRISE ROLE MANAGEMENT =====\n\n/// RoleVersion provides enterprise-grade role versioning and rollback capabilities\nmodel RoleVersion {\n  id          String  @id @default(cuid())\n  roleId      String\n  orgId       String\n  version     Int // Version number (1, 2, 3, etc.)\n  name        String // Role name at this version\n  description String?\n\n  // Version metadata\n  changeReason String? // Why this version was created\n  changedBy    String // User ID who made the change\n  isActive     Boolean @default(false) // Is this the active version?\n\n  // Snapshot of permissions at this version\n  permissions Json // Array of permission codes at time of version\n  config      Json @default(\"{}\") // Role configuration snapshot\n\n  // Scoping information snapshot\n  scopeConfig Json @default(\"{}\") // Scoping rules at time of version\n\n  createdAt DateTime @default(now())\n\n  role RbacRole @relation(\"RoleVersions\", fields: [roleId], references: [id], onDelete: Cascade)\n  org  Org      @relation(\"OrgRoleVersions\", fields: [orgId], references: [id])\n\n  @@unique([roleId, version])\n  @@index([orgId, roleId])\n  @@index([isActive])\n}\n\n/// RoleTemplate provides industry-standard role templates and cloning capabilities\nmodel RoleTemplate {\n  id          String  @id @default(cuid())\n  orgId       String? // NULL for system-wide templates\n  name        String\n  description String?\n  industry    String? // e.g., \"healthcare\", \"finance\", \"manufacturing\"\n  category    String? // e.g., \"management\", \"operations\", \"support\"\n\n  // Template configuration\n  isSystemTemplate Boolean @default(false) // System vs custom template\n  isPublic         Boolean @default(false) // Can other orgs use this template?\n  usageCount       Int     @default(0) // How many times cloned\n\n  // Template permissions and configuration\n  permissions Json // Array of permission codes\n  config      Json @default(\"{}\") // Default role configuration\n  scopeConfig Json @default(\"{}\") // Default scoping rules\n\n  // Metadata\n  tags       String[] @default([]) // Searchable tags\n  complexity String   @default(\"BASIC\") // BASIC, INTERMEDIATE, ADVANCED\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String? // User ID who created this template\n\n  org Org? @relation(\"OrgRoleTemplates\", fields: [orgId], references: [id])\n\n  @@index([orgId, industry])\n  @@index([isSystemTemplate, isPublic])\n  @@index([industry, category])\n}\n\n/// PermissionBundle creates reusable permission sets (e.g., \"Supervisor Pack\")\nmodel PermissionBundle {\n  id          String  @id @default(cuid())\n  orgId       String\n  name        String // e.g., \"Supervisor Pack\", \"Finance Access\"\n  description String?\n\n  // Bundle configuration\n  permissions Json // Array of permission codes in this bundle\n  category    String? // e.g., \"management\", \"finance\", \"operations\"\n  isReusable  Boolean @default(true)\n\n  // Usage tracking\n  usageCount Int @default(0)\n\n  // Metadata\n  tags  String[] @default([])\n  color String? // For UI categorization\n  icon  String? // Icon identifier\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String // User ID who created this bundle\n\n  org Org @relation(\"OrgPermissionBundles\", fields: [orgId], references: [id])\n\n  @@unique([orgId, name])\n  @@index([orgId, category])\n  @@index([isReusable])\n}\n\n/// RoleScope provides granular permission scoping by project, team, geography, etc.\nmodel RoleScope {\n  id     String @id @default(cuid())\n  roleId String\n  orgId  String\n\n  // Scope definition\n  scopeType String // \"project\", \"team\", \"geography\", \"department\", \"custom\"\n  scopeKey  String // Identifier for the scope (project ID, team ID, etc.)\n  scopeName String // Human-readable name\n\n  // Scope configuration\n  permissions  Json // Permissions that apply to this scope\n  restrictions Json @default(\"{}\") // Additional restrictions\n\n  // Time-based scoping\n  startDate DateTime?\n  endDate   DateTime?\n  timeZone  String? // For geographic scoping\n\n  // Metadata\n  isActive Boolean @default(true)\n  priority Int     @default(0) // For resolving conflicts\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String // User ID who created this scope\n\n  role RbacRole @relation(\"RoleScopes\", fields: [roleId], references: [id], onDelete: Cascade)\n  org  Org      @relation(\"OrgRoleScopes\", fields: [orgId], references: [id])\n\n  @@unique([roleId, scopeType, scopeKey])\n  @@index([orgId, scopeType])\n  @@index([isActive, startDate, endDate])\n}\n\n/// RoleReview manages periodic role review workflows for compliance\nmodel RoleReview {\n  id     String  @id @default(cuid())\n  orgId  String\n  roleId String? // NULL for org-wide reviews\n\n  // Review details\n  reviewType String // \"periodic\", \"access_change\", \"compliance\", \"incident\"\n  status     String @default(\"pending\") // pending, in_progress, completed, overdue\n\n  // Review configuration\n  reviewFrequency String? // \"monthly\", \"quarterly\", \"annually\"\n  nextReviewDate  DateTime?\n  lastReviewDate  DateTime?\n\n  // Review participants\n  reviewerId String // Primary reviewer (User ID)\n  approvers  String[] @default([]) // Additional approvers\n\n  // Review findings\n  findings  Json   @default(\"{}\") // Review findings and recommendations\n  actions   Json   @default(\"{}\") // Actions taken\n  riskLevel String @default(\"low\") // low, medium, high, critical\n\n  // Compliance tracking\n  complianceFramework String[] @default([]) // SOC2, GDPR, HIPAA, etc.\n  exceptions          Json     @default(\"{}\") // Documented exceptions\n\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  completedAt DateTime?\n\n  org  Org       @relation(\"OrgRoleReviews\", fields: [orgId], references: [id])\n  role RbacRole? @relation(\"RoleReviews\", fields: [roleId], references: [id])\n\n  @@index([orgId, status])\n  @@index([nextReviewDate])\n  @@index([reviewType, status])\n}\n\n/// ProvisioningFlow manages automated user provisioning with SCIM/SSO integration\nmodel ProvisioningFlow {\n  id          String  @id @default(cuid())\n  orgId       String\n  name        String // e.g., \"New Employee Onboarding\", \"Contractor Access\"\n  description String?\n\n  // Flow configuration\n  isActive Boolean @default(true)\n  trigger  String // \"scim_create\", \"sso_login\", \"manual\", \"api\"\n\n  // Role assignment rules\n  defaultRoles     String[] @default([]) // Default role IDs to assign\n  conditionalRoles Json     @default(\"{}\") // Conditional role assignment rules\n\n  // Integration settings\n  scimMapping     Json @default(\"{}\") // SCIM attribute mapping\n  ssoGroupMapping Json @default(\"{}\") // SSO group to role mapping\n\n  // Workflow steps\n  steps            Json     @default(\"{}\") // Provisioning workflow steps\n  approvalRequired Boolean  @default(false)\n  approvers        String[] @default([])\n\n  // Notification settings\n  notifyUsers    Boolean @default(true)\n  notifyManagers Boolean @default(true)\n  emailTemplate  String?\n\n  // Security settings\n  requireMFA      Boolean  @default(false)\n  ipRestrictions  String[] @default([])\n  sessionDuration Int? // Session duration in minutes\n\n  // Usage tracking\n  usageCount  Int     @default(0)\n  successRate Decimal @default(0) @db.Decimal(5, 2)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String // User ID who created this flow\n\n  org Org @relation(\"OrgProvisioningFlows\", fields: [orgId], references: [id])\n\n  @@unique([orgId, name])\n  @@index([orgId, isActive])\n  @@index([trigger])\n}\n\n/// TemporaryElevation provides just-in-time privilege elevation with auto-expiry and audit trails\nmodel TemporaryElevation {\n  id          String  @id @default(cuid())\n  orgId       String\n  userId      String // User requesting elevation\n  requestedBy String // User ID who requested (could be self or manager)\n  approvedBy  String? // User ID who approved the elevation\n\n  // Elevation details\n  targetRole        String // Role to temporarily elevate to\n  currentRole       String // User's current role\n  reason            String // Business justification for elevation\n  requestedDuration Int // Requested duration in minutes\n  actualDuration    Int? // Actual granted duration in minutes\n\n  // Status and lifecycle\n  status       ElevationStatus @default(PENDING)\n  requestedAt  DateTime        @default(now())\n  approvedAt   DateTime? // When elevation was approved\n  activatedAt  DateTime? // When elevation became active\n  expiresAt    DateTime? // When elevation expires\n  terminatedAt DateTime? // If manually terminated early\n\n  // Security and audit\n  approvalRequired Boolean @default(true)\n  autoApproved     Boolean @default(false)\n  emergencyAccess  Boolean @default(false) // Emergency bypass flag\n  ipAddress        String? // IP where request originated\n  userAgent        String? // Browser/client info\n\n  // Permissions snapshot\n  grantedPermissions  Json @default(\"{}\") // Permissions granted during elevation\n  previousPermissions Json @default(\"{}\") // User's permissions before elevation\n\n  // Monitoring and alerts\n  usageTracked   Boolean  @default(true)\n  alertsSent     String[] @default([]) // Alert types sent\n  reviewRequired Boolean  @default(false) // Post-elevation review needed\n\n  // Termination details\n  terminationReason String? // Why elevation was terminated\n  terminatedBy      String? // Who terminated the elevation\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org  Org  @relation(\"OrgTemporaryElevations\", fields: [orgId], references: [id])\n  user User @relation(\"UserTemporaryElevations\", fields: [userId], references: [id])\n\n  @@index([orgId, userId])\n  @@index([status])\n  @@index([expiresAt])\n  @@index([requestedAt])\n}\n\n/// ElevationStatus tracks the lifecycle of temporary privilege elevation requests\nenum ElevationStatus {\n  PENDING // Awaiting approval\n  APPROVED // Approved but not yet active\n  ACTIVE // Currently elevated\n  EXPIRED // Elevation period ended\n  TERMINATED // Manually terminated before expiry\n  REJECTED // Request was denied\n  CANCELLED // Cancelled by requester\n}\n\n/// ProviderConfig holds provider-level secrets and configuration separate from any organization.\n/// These values are used for system integrations that the provider controls, such as SAM.gov or\n/// Stripe secrets used when billing clients.  Only one row is typically used.  Use a simple\n/// admin interface to update these values.\nmodel ProviderConfig {\n  id              String   @id @default(cuid())\n  samApiKey       String?\n  stripeSecretKey String?\n  otherConfig     Json?    @default(\"{}\")\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n}\n\n/// PricingPlan defines how an organization is billed for leads. Each org can have only\n/// one pricing plan record. A plan specifies the billing model (e.g. per-lead fixed fee)\n/// and can include tiered structures or prepaid units via includedUnits and tiersJson.\nmodel PricingPlan {\n  // We keep FK as primary key to enforce 1:1 with Org\n  orgId String @id\n  /// Relation to organization (named to match Org.pricingPlan)\n  org   Org    @relation(\"OrgPricingPlan\", fields: [orgId], references: [id])\n\n  /// Billing model used for this organization (per-lead, tiered, subscription, or hybrid)\n  model         PricingModel @default(PER_LEAD_FIXED)\n  /// ISO currency code (e.g. \"usd\")\n  currency      String       @default(\"usd\")\n  /// Fixed unit price in cents for per-lead billing\n  unitAmount    Int          @default(10000)\n  /// JSON-encoded pricing tiers (used when model is TIERED or HYBRID)\n  tiersJson     Json?\n  /// Number of prepaid leads included before billing starts\n  includedUnits Int          @default(0)\n  /// Stripe Price ID for subscription billing (e.g. \"price_1234...\")\n  stripePriceId String?\n}\n\n/// PricingModel enumerates the possible billing models for lead invoices.  The default is\n/// PER_LEAD_FIXED which charges a flat fee per converted lead.  Additional models support\n/// tiered pricing, subscription (monthly base fee), or hybrid structures.\nenum PricingModel {\n  PER_LEAD_FIXED\n  TIERED\n  SUBSCRIPTION\n  HYBRID\n}\n\n/// LeadStatus defines the possible states of a lead in the CRM pipeline.\n/// Tracks the complete journey from initial contact to final outcome.\nenum LeadStatus {\n  NEW // Initial lead, no contact made\n  CONTACTED // Initial contact made (call, email, etc.)\n  QUALIFIED // Lead shows interest and has budget/authority/need/timeline\n  MEETING_SCHEDULED // Meeting or call scheduled\n  PROPOSAL_SENT // Proposal or quote sent to prospect\n  NEGOTIATION // In negotiations, discussing terms\n  WON // Lead converted to customer (billable)\n  CONVERTED // Legacy status - equivalent to WON (backward compatibility)\n  LOST // Lead didn't convert, deal closed unsuccessfully\n  NURTURING // Lead not ready now but staying in touch for future\n  FOLLOW_UP // Requires follow-up action\n  ON_HOLD // Lead temporarily paused\n  UNRESPONSIVE // Lead not responding to communications\n}\n\n/// ActivityType defines the different types of interactions and communications\n/// that can be logged for lead management and CRM tracking.\nenum ActivityType {\n  CALL_OUTBOUND // Outbound phone call\n  CALL_INBOUND // Inbound phone call received  \n  EMAIL_SENT // Email sent to lead\n  EMAIL_RECEIVED // Email received from lead\n  MEETING_SCHEDULED // Meeting or appointment scheduled\n  MEETING_COMPLETED // Meeting or appointment completed\n  PROPOSAL_SENT // Proposal or quote sent\n  CONTRACT_SENT // Contract sent for signature\n  FOLLOW_UP // General follow-up activity\n  NOTE // Internal note or comment\n  TASK_CREATED // Task created for lead\n  TASK_COMPLETED // Task completed for lead\n  STATUS_CHANGED // Lead status changed\n  DOCUMENT_SHARED // Document or file shared\n  PAYMENT_RECEIVED // Payment received from customer\n}\n\n/// LeadActivity tracks all interactions, communications, and events\n/// related to a specific lead for complete CRM functionality.\nmodel LeadActivity {\n  id     String @id @default(cuid())\n  leadId String\n  orgId  String\n  userId String // User who performed the activity\n\n  type        ActivityType\n  title       String // Brief title/summary of activity\n  description String? // Detailed description or notes\n\n  // Scheduling fields for meetings and calls\n  scheduledAt DateTime? // When the activity is scheduled\n  completedAt DateTime? // When the activity was completed\n\n  // Contact information for calls/emails\n  contactMethod String? // Phone, email, in-person, etc.\n  duration      Int? // Duration in minutes for calls/meetings\n\n  // File attachments and links\n  attachments Json? // Array of file references or URLs\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  lead Lead @relation(\"LeadActivities\", fields: [orgId, leadId], references: [orgId, id], onDelete: Cascade)\n  org  Org  @relation(\"OrgLeadActivities\", fields: [orgId], references: [id])\n  user User @relation(\"UserLeadActivities\", fields: [orgId, userId], references: [orgId, id])\n\n  // === 🚀 ENTERPRISE ADVANCED INDEXING for CRM Performance ===\n  // TODO: Add composite indexes for complex CRM queries:\n  // @@index([leadId, type, createdAt])              // Lead activity timeline with type filtering\n  // @@index([orgId, type, completedAt])             // Completed activities by type (productivity metrics)\n  // @@index([userId, type, scheduledAt])            // User task scheduling and calendar integration\n  // @@index([orgId, createdAt, duration])           // Activity duration analysis for time tracking\n\n  // PARTIAL INDEXES for high-performance CRM queries:\n  // TODO: Implement with raw SQL:\n  // CREATE INDEX CONCURRENTLY idx_activities_calls ON \"LeadActivity\" (\"orgId\", \"leadId\", \"createdAt\") WHERE \"type\" IN ('CALL_OUTBOUND', 'CALL_INBOUND');\n  // CREATE INDEX CONCURRENTLY idx_activities_meetings ON \"LeadActivity\" (\"orgId\", \"scheduledAt\") WHERE \"type\" IN ('MEETING_SCHEDULED', 'MEETING_COMPLETED');\n\n  @@index([leadId, createdAt]) // Lead timeline queries\n  @@index([orgId, type]) // Activity type filtering \n  @@index([userId, createdAt]) // User activity history\n}\n\n/// LeadTask manages scheduled tasks, reminders, and follow-ups\n/// for lead management and CRM workflow automation.\nmodel LeadTask {\n  id         String @id @default(cuid())\n  leadId     String\n  orgId      String\n  assignedTo String // User assigned to complete the task\n  createdBy  String // User who created the task\n\n  title       String // Task title\n  description String? // Task description or notes\n  priority    TaskPriority @default(MEDIUM)\n  status      TaskStatus   @default(PENDING)\n\n  // Scheduling\n  dueDate     DateTime? // When task is due\n  completedAt DateTime? // When task was completed\n\n  // Reminders\n  reminderAt DateTime? // When to send reminder\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  lead     Lead @relation(\"LeadTasks\", fields: [orgId, leadId], references: [orgId, id], onDelete: Cascade)\n  org      Org  @relation(\"OrgLeadTasks\", fields: [orgId], references: [id])\n  assignee User @relation(\"AssignedLeadTasks\", fields: [orgId, assignedTo], references: [orgId, id])\n  creator  User @relation(\"CreatedLeadTasks\", fields: [orgId, createdBy], references: [orgId, id])\n\n  @@index([leadId, status])\n  @@index([assignedTo, dueDate])\n  @@index([orgId, status])\n}\n\n/// TaskPriority defines urgency levels for lead tasks and follow-ups\nenum TaskPriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\n/// TaskStatus tracks the completion state of lead tasks\nenum TaskStatus {\n  PENDING // Task not yet started\n  IN_PROGRESS // Task currently being worked on\n  COMPLETED // Task finished successfully\n  CANCELLED // Task cancelled or no longer needed\n  OVERDUE // Task past due date\n}\n\n// AI Plan Tiers for Monetization - CLIENT SUBSCRIPTION TIERS\nenum AiPlan {\n  BASE // MVP: Free lead generation, $100/conversion only\n  PRO // $97/month: Advanced AI, unlimited leads, priority support  \n  ELITE // $297/month: Market intelligence, priority RFPs, dedicated support\n}\n\n// Individual AI API call tracking for cost monitoring and analytics\nmodel AiUsageEvent {\n  id          String   @id @default(cuid())\n  orgId       String\n  userId      String? // Optional user who triggered the call\n  feature     String // 'lead_analysis', 'rfp_strategy', 'pricing', 'response_gen'\n  model       String // 'gpt-4o-mini', etc\n  tokensIn    Int // Input tokens consumed\n  tokensOut   Int // Output tokens generated\n  costUsd     Decimal  @db.Decimal(8, 6) // Actual cost in USD (precise to $0.000001)\n  creditsUsed Int // Credits deducted from user's balance\n  requestId   String? // For request correlation and debugging\n  createdAt   DateTime @default(now())\n\n  org Org @relation(\"OrgAiUsageEvents\", fields: [orgId], references: [id])\n\n  // === 🚀 ENTERPRISE AI COST OPTIMIZATION INDEXING ===\n  // Critical for AI usage monitoring and cost control at scale\n  // TODO: Add advanced indexes for AI cost analytics:\n  // @@index([orgId, feature, createdAt])           // Feature usage trends over time\n  // @@index([orgId, model, createdAt])             // Model usage analysis\n  // @@index([orgId, costUsd, createdAt])           // Cost trend analysis\n  // @@index([userId, feature, createdAt])          // Per-user AI usage tracking\n\n  // PARTIAL INDEXES for high-cost event monitoring:\n  // TODO: Implement with raw SQL:\n  // CREATE INDEX CONCURRENTLY idx_ai_high_cost ON \"AiUsageEvent\" (\"orgId\", \"createdAt\", \"costUsd\") WHERE \"costUsd\" > 1.00;\n  // CREATE INDEX CONCURRENTLY idx_ai_high_token ON \"AiUsageEvent\" (\"orgId\", \"feature\", \"tokensIn\") WHERE \"tokensIn\" > 10000;\n\n  @@index([orgId, createdAt]) // Time-based usage queries\n  @@index([orgId, feature]) // Feature usage analysis\n}\n\n// Monthly AI usage rollups for dashboard and billing\nmodel AiMonthlySummary {\n  id          String   @id @default(cuid())\n  orgId       String\n  monthKey    String // Format: \"2025-01\" for January 2025\n  tokensIn    Int      @default(0)\n  tokensOut   Int      @default(0)\n  costUsd     Decimal  @default(0) @db.Decimal(8, 2)\n  creditsUsed Int      @default(0)\n  callCount   Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  org Org @relation(\"OrgAiMonthlySummaries\", fields: [orgId], references: [id])\n\n  @@unique([orgId, monthKey])\n  @@index([monthKey])\n}\n\n// ===== MULTI-PORTAL BUSINESS OPERATING SYSTEM MODELS =====\n\n/// EmployeeProfile extends User model with employee-specific data and ADP integration\nmodel EmployeeProfile {\n  id     String @id @default(cuid())\n  orgId  String\n  userId String @unique // One-to-one with User\n\n  // ADP Integration\n  adpWorkerId String? // ADP employee ID for payroll integration\n  managerId   String? // Reports to (User.id)\n\n  // Mobile & Field Settings\n  mobilePrefs Json @default(\"{}\") // Mobile app preferences\n\n  // Contact & Emergency Info\n  emergencyContact Json? // Emergency contact information\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org                 Org                  @relation(\"OrgEmployeeProfiles\", fields: [orgId], references: [id])\n  user                User                 @relation(\"UserEmployeeProfile\", fields: [orgId, userId], references: [orgId, id])\n  timesheets          TimesheetEntry[]     @relation(\"EmployeeTimesheets\")\n  jobAssignments      JobAssignment[]      @relation(\"EmployeeAssignments\")\n  issueReports        IssueReport[]        @relation(\"EmployeeIssueReports\")\n  trainingCompletions TrainingCompletion[] @relation(\"EmployeeTrainingCompletions\")\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@unique([orgId, userId]) // One-to-one relation constraint\n  @@index([orgId, adpWorkerId])\n  @@index([userId])\n}\n\n/// WorkOrder represents enhanced work orders and customer projects (extended Job functionality)\nmodel WorkOrder {\n  id         String  @id @default(cuid())\n  orgId      String\n  customerId String?\n\n  // Work Order Details\n  title       String\n  description String?\n  status      JobStatus   @default(SCHEDULED)\n  priority    JobPriority @default(MEDIUM)\n\n  // Scheduling\n  scheduledStartAt DateTime?\n  scheduledEndAt   DateTime?\n  actualStartAt    DateTime?\n  actualEndAt      DateTime?\n\n  // Location & Site Info\n  jobSiteId String?\n\n  // Financial\n  estimatedValue Decimal? @db.Decimal(12, 2)\n  actualCost     Decimal? @db.Decimal(12, 2)\n\n  // Binder5: Lifecycle enhancements\n  pausedAt    DateTime?\n  resumedAt   DateTime?\n  pauseReason String?\n  completedBy String? // User who completed\n  version     Int       @default(1) // Optimistic locking\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org          Org                  @relation(\"OrgWorkOrders\", fields: [orgId], references: [id])\n  customer     Customer?            @relation(\"CustomerWorkOrders\", fields: [orgId, customerId], references: [orgId, id])\n  jobSite      JobSite?             @relation(\"JobSiteWorkOrders\", fields: [orgId, jobSiteId], references: [orgId, id])\n  assignments  JobAssignment[]      @relation(\"WorkOrderAssignments\")\n  checklists   JobChecklistItem[]   @relation(\"WorkOrderChecklists\")\n  timesheets   TimesheetEntry[]     @relation(\"WorkOrderTimesheets\")\n  issueReports IssueReport[]        @relation(\"WorkOrderIssueReports\")\n  mediaAssets  MediaAsset[]         @relation(\"WorkOrderMedia\")\n  timeEntries  WorkOrderTimeEntry[] // Binder5: Time tracking\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@index([orgId, status])\n  @@index([customerId])\n  @@index([scheduledStartAt])\n}\n\n/// JobSite defines geographic locations for geofenced time tracking\nmodel JobSite {\n  id    String @id @default(cuid())\n  orgId String\n\n  // Location Info\n  name    String\n  address String\n  city    String?\n  state   String?\n  zipCode String?\n\n  // Geofencing for time tracking\n  latitude     Decimal? @db.Decimal(10, 8) // GPS coordinates\n  longitude    Decimal? @db.Decimal(11, 8)\n  radiusMeters Int      @default(100) // Geofence radius\n\n  // Site Details\n  accessInstructions String?\n  emergencyContacts  Json?   @default(\"[]\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org        Org              @relation(\"OrgJobSites\", fields: [orgId], references: [id])\n  workOrders WorkOrder[]      @relation(\"JobSiteWorkOrders\")\n  timesheets TimesheetEntry[] @relation(\"JobSiteTimesheets\")\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@index([orgId])\n  @@index([latitude, longitude])\n}\n\n/// JobAssignment links employees to specific jobs with roles\nmodel JobAssignment {\n  id         String @id @default(cuid())\n  orgId      String\n  jobId      String\n  employeeId String // EmployeeProfile.id\n\n  role         String    @default(\"worker\") // \"lead\", \"worker\", \"supervisor\"\n  assignedAt   DateTime  @default(now())\n  unassignedAt DateTime?\n\n  // Relations\n  org       Org             @relation(\"OrgJobAssignments\", fields: [orgId], references: [id])\n  workOrder WorkOrder       @relation(\"WorkOrderAssignments\", fields: [orgId, jobId], references: [orgId, id])\n  employee  EmployeeProfile @relation(\"EmployeeAssignments\", fields: [orgId, employeeId], references: [orgId, id])\n\n  @@unique([jobId, employeeId])\n  @@index([orgId, employeeId])\n  @@index([jobId])\n}\n\n/// TimesheetEntry tracks employee time with geolocation for job costing\nmodel TimesheetEntry {\n  id         String  @id @default(cuid())\n  orgId      String\n  employeeId String // EmployeeProfile.id\n  jobId      String? // Optional job association\n  jobSiteId  String? // Optional site association\n\n  // Time Tracking\n  clockInAt    DateTime\n  clockOutAt   DateTime?\n  breakMinutes Int       @default(0)\n\n  // Geolocation Data\n  clockInLat  Decimal? @db.Decimal(10, 8)\n  clockInLng  Decimal? @db.Decimal(11, 8)\n  clockOutLat Decimal? @db.Decimal(10, 8)\n  clockOutLng Decimal? @db.Decimal(11, 8)\n\n  // Device & Verification\n  deviceInfo Json? // Device fingerprint for fraud prevention\n  notes      String?\n  status     TimesheetStatus @default(ACTIVE)\n\n  // Approval Workflow\n  approvedBy String? // User.id who approved\n  approvedAt DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org       Org             @relation(\"OrgTimesheets\", fields: [orgId], references: [id])\n  employee  EmployeeProfile @relation(\"EmployeeTimesheets\", fields: [orgId, employeeId], references: [orgId, id])\n  workOrder WorkOrder?      @relation(\"WorkOrderTimesheets\", fields: [orgId, jobId], references: [orgId, id])\n  jobSite   JobSite?        @relation(\"JobSiteTimesheets\", fields: [orgId, jobSiteId], references: [orgId, id])\n\n  @@index([orgId, employeeId, clockInAt])\n  @@index([jobId])\n  @@index([clockInAt])\n}\n\n/// JobChecklistItem tracks completion of job tasks with photo documentation\nmodel JobChecklistItem {\n  id    String @id @default(cuid())\n  orgId String\n  jobId String\n\n  // Checklist Item\n  title       String\n  description String?\n  required    Boolean @default(false)\n  sortOrder   Int     @default(0)\n\n  // Completion Tracking\n  status      ChecklistStatus @default(PENDING)\n  completedBy String? // EmployeeProfile.id\n  completedAt DateTime?\n  notes       String?\n  photosCount Int             @default(0) // Number of associated photos\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org         Org          @relation(\"OrgJobChecklists\", fields: [orgId], references: [id])\n  workOrder   WorkOrder    @relation(\"WorkOrderChecklists\", fields: [orgId, jobId], references: [orgId, id])\n  mediaAssets MediaAsset[] @relation(\"ChecklistMedia\")\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@index([orgId, jobId])\n  @@index([status])\n}\n\n/// IssueReport tracks field problems and obstacles with photo documentation\nmodel IssueReport {\n  id         String  @id @default(cuid())\n  orgId      String\n  jobId      String? // Optional job association\n  reportedBy String // EmployeeProfile.id\n\n  // Issue Details\n  title       String\n  description String\n  severity    IssueSeverity @default(MEDIUM)\n  category    String? // \"equipment\", \"site_access\", \"weather\", etc.\n\n  // Resolution Tracking\n  status     IssueStatus @default(OPEN)\n  resolvedBy String? // User.id who resolved\n  resolvedAt DateTime?\n  resolution String?\n\n  // Location Context\n  latitude  Decimal? @db.Decimal(10, 8)\n  longitude Decimal? @db.Decimal(11, 8)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org         Org             @relation(\"OrgIssueReports\", fields: [orgId], references: [id])\n  workOrder   WorkOrder?      @relation(\"WorkOrderIssueReports\", fields: [orgId, jobId], references: [orgId, id])\n  reporter    EmployeeProfile @relation(\"EmployeeIssueReports\", fields: [orgId, reportedBy], references: [orgId, id])\n  mediaAssets MediaAsset[]    @relation(\"IssueMedia\")\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@index([orgId, status])\n  @@index([jobId])\n  @@index([reportedBy])\n}\n\n/// MediaAsset stores photos, videos, and documents with metadata\nmodel MediaAsset {\n  id         String @id @default(cuid())\n  orgId      String\n  uploadedBy String // User.id\n\n  // File Information\n  filename     String\n  originalName String\n  contentType  String\n  fileSize     Int // Bytes\n  url          String // S3/R2 URL\n  thumbnailUrl String? // Thumbnail URL for images\n\n  // Asset Context (explicit foreign keys instead of polymorphic)\n  assetType        MediaType\n  workOrderId      String? // Optional WorkOrder reference\n  issueReportId    String? // Optional IssueReport reference\n  checklistItemId  String? // Optional JobChecklistItem reference\n  trainingModuleId String? // Optional TrainingModule reference\n\n  // Metadata\n  exifJson    Json?    @default(\"{}\") // EXIF data for photos\n  description String?\n  tags        String[] @default([])\n\n  // Geolocation (if available)\n  latitude  Decimal? @db.Decimal(10, 8)\n  longitude Decimal? @db.Decimal(11, 8)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations (explicit FKs instead of polymorphic)\n  org            Org               @relation(\"OrgMediaAssets\", fields: [orgId], references: [id])\n  workOrder      WorkOrder?        @relation(\"WorkOrderMedia\", fields: [orgId, workOrderId], references: [orgId, id])\n  issueReport    IssueReport?      @relation(\"IssueMedia\", fields: [orgId, issueReportId], references: [orgId, id])\n  checklistItem  JobChecklistItem? @relation(\"ChecklistMedia\", fields: [orgId, checklistItemId], references: [orgId, id])\n  trainingModule TrainingModule?   @relation(\"TrainingMedia\", fields: [orgId, trainingModuleId], references: [orgId, id])\n\n  @@index([orgId, workOrderId])\n  @@index([orgId, issueReportId])\n  @@index([orgId, checklistItemId])\n  @@index([orgId, trainingModuleId])\n  @@index([uploadedBy])\n  @@index([createdAt])\n}\n\n/// TrainingModule defines HR training requirements and content\nmodel TrainingModule {\n  id    String @id @default(cuid())\n  orgId String\n\n  // Module Information\n  title       String\n  description String?\n  content     String? // Training content/instructions\n\n  // Requirements\n  requiredForRoles String[] @default([]) // Array of Role enum values\n  isActive         Boolean  @default(true)\n  version          String   @default(\"1.0\")\n\n  // Completion Settings\n  requiresQuiz Boolean @default(false)\n  passingScore Int? // Minimum score to pass (if quiz required)\n  validityDays Int? // Days before retraining required\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org         Org                  @relation(\"OrgTrainingModules\", fields: [orgId], references: [id])\n  completions TrainingCompletion[] @relation(\"ModuleCompletions\")\n  mediaAssets MediaAsset[]         @relation(\"TrainingMedia\")\n\n  @@unique([orgId, id]) // Multi-tenant isolation\n  @@index([orgId, isActive])\n  @@index([requiredForRoles])\n}\n\n/// TrainingCompletion tracks employee training completion and compliance\nmodel TrainingCompletion {\n  id         String @id @default(cuid())\n  orgId      String\n  employeeId String // EmployeeProfile.id\n  moduleId   String\n\n  // Completion Data\n  completedAt DateTime @default(now())\n  score       Int? // Quiz score (if applicable)\n  passed      Boolean  @default(true)\n\n  // Validity\n  expiresAt DateTime? // When retraining is required\n  isValid   Boolean   @default(true)\n\n  // Metadata\n  timeSpentMinutes Int? // Time spent on training\n  notes            String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org      Org             @relation(\"OrgTrainingCompletions\", fields: [orgId], references: [id])\n  employee EmployeeProfile @relation(\"EmployeeTrainingCompletions\", fields: [orgId, employeeId], references: [orgId, id])\n  module   TrainingModule  @relation(\"ModuleCompletions\", fields: [orgId, moduleId], references: [orgId, id])\n\n  @@unique([employeeId, moduleId]) // One completion per employee per module\n  @@index([orgId, isValid])\n  @@index([expiresAt])\n}\n\n// ===== MISSING MODELS FOR COMPLETE FUNCTIONALITY =====\n\n/// ApprovalRequest manages workflow approval for sensitive actions\nmodel ApprovalRequest {\n  id    String @id @default(cuid())\n  orgId String // Organization context\n\n  // Request Details\n  requestedBy String // User ID who requested approval\n  action      String // Action requiring approval\n  entityType  String // Type of entity being acted upon\n  entityId    String // ID of entity being acted upon\n  reason      String? // Optional reason for the request\n\n  // Approval Workflow\n  status         ApprovalStatus @default(PENDING)\n  approverRoles  String[] // Roles that can approve this request\n  approvedBy     String? // User ID who approved/rejected\n  approvedAt     DateTime?\n  rejectedReason String? // Reason for rejection\n\n  // Timing and Escalation\n  requestedAt     DateTime @default(now())\n  expiresAt       DateTime // When request expires\n  escalationRules Json? // Escalation configuration\n\n  // Relations\n  org       Org   @relation(\"OrgApprovalRequests\", fields: [orgId], references: [id])\n  requester User  @relation(\"UserApprovalRequests\", fields: [requestedBy], references: [id])\n  approver  User? @relation(\"UserApprovals\", fields: [approvedBy], references: [id])\n\n  @@index([orgId, status])\n  @@index([requestedBy, status])\n  @@index([expiresAt])\n}\n\n/// SecurityIncident tracks security violations and anomalies\nmodel SecurityIncident {\n  id    String @id @default(cuid())\n  orgId String // Organization context\n\n  // Incident Details\n  userId       String? // User involved (if applicable)\n  incidentType SecurityIncidentType\n  severity     SecuritySeverity     @default(MEDIUM)\n  description  String // Incident description\n\n  // Context and Evidence\n  ipAddress   String? // IP address involved\n  userAgent   String? // User agent string\n  requestPath String? // API path or page accessed\n  metadata    Json? // Additional incident data\n\n  // Response and Resolution\n  status     IncidentStatus @default(OPEN)\n  assignedTo String? // Security team member assigned\n  resolvedAt DateTime?\n  resolution String? // Resolution notes\n\n  // Timing\n  detectedAt DateTime @default(now())\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  // Relations\n  org      Org   @relation(\"OrgSecurityIncidents\", fields: [orgId], references: [id])\n  user     User? @relation(\"UserSecurityIncidents\", fields: [userId], references: [id])\n  assignee User? @relation(\"AssignedSecurityIncidents\", fields: [assignedTo], references: [id])\n\n  @@index([orgId, incidentType, detectedAt])\n  @@index([userId, incidentType])\n  @@index([status, severity])\n}\n\n/// DeviceAccess tracks user device access for security monitoring\nmodel DeviceAccess {\n  id     String @id @default(cuid())\n  orgId  String // Organization context\n  userId String // User ID\n\n  // Device Information\n  userAgent   String // Browser/device user agent\n  deviceType  DeviceType @default(UNKNOWN)\n  deviceName  String? // Friendly device name\n  fingerprint String? // Device fingerprint hash\n\n  // Access Tracking\n  firstSeenAt DateTime @default(now())\n  lastSeenAt  DateTime @default(now())\n  accessCount Int      @default(1)\n  isBlocked   Boolean  @default(false)\n\n  // Location and Network\n  lastIpAddress String?\n  lastLocation  String? // Approximate location\n\n  // Relations\n  org  Org  @relation(\"OrgDeviceAccess\", fields: [orgId], references: [id])\n  user User @relation(\"UserDeviceAccess\", fields: [userId], references: [id])\n\n  @@unique([userId, userAgent])\n  @@index([orgId, userId])\n  @@index([lastSeenAt])\n  @@index([isBlocked])\n}\n\n/// UserLockout manages automatic user lockouts for security\nmodel UserLockout {\n  id     String @id @default(cuid())\n  orgId  String // Organization context\n  userId String // Locked user ID\n\n  // Lockout Details\n  reason      String // Reason for lockout\n  lockoutType LockoutType      @default(SECURITY_VIOLATION)\n  severity    SecuritySeverity @default(MEDIUM)\n\n  // Timing\n  lockedAt   DateTime  @default(now())\n  expiresAt  DateTime? // When lockout expires (null = manual unlock required)\n  unlockedAt DateTime?\n  unlockedBy String? // User who unlocked\n\n  // Status\n  isActive Boolean @default(true)\n\n  // Relations\n  org      Org   @relation(\"OrgUserLockouts\", fields: [orgId], references: [id])\n  user     User  @relation(\"UserLockouts\", fields: [userId], references: [id])\n  unlocker User? @relation(\"UnlockedUsers\", fields: [unlockedBy], references: [id])\n\n  @@index([orgId, userId, isActive])\n  @@index([expiresAt])\n  @@index([lockedAt])\n}\n\n// ===== ENUM DEFINITIONS FOR NEW MODELS =====\n\nenum ApprovalStatus {\n  PENDING // Awaiting approval\n  APPROVED // Request approved\n  REJECTED // Request rejected\n  EXPIRED // Request expired\n  CANCELLED // Request cancelled\n}\n\nenum SecurityIncidentType {\n  CONSTRAINT_VIOLATION // Business rule violation\n  SECURITY_VIOLATION // Security policy violation\n  ANOMALY_DETECTION // Unusual behavior detected\n  FAILED_AUTHENTICATION // Authentication failure\n  UNAUTHORIZED_ACCESS // Access to restricted resource\n  DATA_BREACH // Potential data breach\n  SUSPICIOUS_ACTIVITY // Suspicious user activity\n}\n\nenum SecuritySeverity {\n  LOW // Minor security concern\n  MEDIUM // Moderate security risk\n  HIGH // Significant security risk\n  CRITICAL // Critical security threat\n}\n\nenum IncidentStatus {\n  OPEN // Incident is open\n  INVESTIGATING // Under investigation\n  RESOLVED // Incident resolved\n  CLOSED // Incident closed\n  FALSE_POSITIVE // False alarm\n}\n\nenum DeviceType {\n  DESKTOP // Desktop computer\n  MOBILE // Mobile device\n  TABLET // Tablet device\n  UNKNOWN // Unknown device type\n}\n\nenum LockoutType {\n  SECURITY_VIOLATION // Security policy violation\n  FAILED_ATTEMPTS // Too many failed attempts\n  SUSPICIOUS_ACTIVITY // Suspicious behavior\n  MANUAL_LOCKOUT // Manual administrative lockout\n  COMPLIANCE_VIOLATION // Compliance rule violation\n}\n\nenum JobStatus {\n  SCHEDULED // Job scheduled but not started\n  IN_PROGRESS // Job currently being worked\n  ON_HOLD // Job temporarily paused\n  PAUSED // Job paused (Binder5)\n  COMPLETED // Job finished successfully\n  CANCELLED // Job cancelled before completion\n}\n\nenum JobPriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum TimesheetStatus {\n  ACTIVE // Currently clocked in\n  COMPLETED // Clocked out\n  PENDING // Awaiting approval\n  APPROVED // Approved by manager\n  REJECTED // Rejected for correction\n}\n\nenum ChecklistStatus {\n  PENDING // Not yet completed\n  IN_PROGRESS // Partially completed\n  COMPLETED // Fully completed\n  SKIPPED // Marked as not applicable\n}\n\nenum IssueSeverity {\n  LOW // Minor issue, doesn't block work\n  MEDIUM // Moderate issue, may impact schedule\n  HIGH // Major issue, blocks current work\n  CRITICAL // Safety or emergency issue\n}\n\nenum IssueStatus {\n  OPEN // Issue reported, needs attention\n  IN_PROGRESS // Being worked on\n  RESOLVED // Issue fixed\n  CLOSED // Issue closed without resolution\n}\n\nenum MediaType {\n  PHOTO // Images (JPEG, PNG, etc.)\n  VIDEO // Video files\n  DOCUMENT // PDFs, Word docs, etc.\n  AUDIO // Audio recordings\n  OTHER // Other file types\n}\n\n// ===== ENTERPRISE GOVERNANCE & POLICY MODELS =====\n\n/// SecurityPolicy stores enterprise governance policies with SOC 2 compliance\nmodel SecurityPolicy {\n  id            String         @id @default(cuid())\n  orgId         String\n  category      PolicyCategory\n  name          String // e.g. \"Password Policy\", \"MFA Policy\"\n  enabled       Boolean        @default(true)\n  config        Json // Policy configuration settings\n  version       Int            @default(1)\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  lastUpdatedBy String? // User ID who last updated the policy\n\n  org Org @relation(\"OrgSecurityPolicies\", fields: [orgId], references: [id])\n\n  @@unique([orgId, category, name])\n  @@index([orgId, enabled])\n}\n\n/// FeatureModule tracks enabled platform features with usage and cost monitoring\nmodel FeatureModule {\n  id            String          @id @default(cuid())\n  orgId         String\n  moduleKey     String // Unique identifier like 'ai_lead_scoring', 'sms_notifications'\n  name          String // Display name\n  description   String?\n  category      FeatureCategory\n  enabled       Boolean         @default(false)\n  usageLimit    Int? // Usage limit (API calls, messages, etc.)\n  costPerUnit   Decimal?        @db.Decimal(8, 4) // Cost per usage unit in USD\n  monthlyBudget Int? // Monthly budget limit in cents\n  config        Json            @default(\"{}\") // Module-specific configuration\n  createdAt     DateTime        @default(now())\n  updatedAt     DateTime        @updatedAt\n\n  org         Org            @relation(\"OrgFeatureModules\", fields: [orgId], references: [id])\n  usageEvents FeatureUsage[] @relation(\"ModuleUsageEvents\")\n\n  @@unique([orgId, moduleKey])\n  @@index([orgId, enabled])\n  @@index([enabled, category])\n}\n\n/// FeatureUsage tracks individual usage events for billing and monitoring\nmodel FeatureUsage {\n  id        String   @id @default(cuid())\n  orgId     String\n  moduleId  String\n  userId    String? // User who triggered the usage\n  amount    Int // Usage amount (API calls, messages, etc.)\n  costCents Int // Cost in cents\n  metadata  Json? // Additional usage metadata\n  createdAt DateTime @default(now())\n\n  org    Org           @relation(\"OrgFeatureUsage\", fields: [orgId], references: [id])\n  module FeatureModule @relation(\"ModuleUsageEvents\", fields: [moduleId], references: [id])\n\n  @@index([orgId, moduleId, createdAt])\n  @@index([createdAt])\n}\n\n/// OrganizationBudget manages feature usage budgets and alerts\nmodel OrganizationBudget {\n  id                String   @id @default(cuid())\n  orgId             String   @unique\n  monthlyLimitCents Int      @default(50000) // $500 default monthly limit\n  alertThreshold    Int      @default(80) // Alert at 80% usage\n  autoDisable       Boolean  @default(false) // Auto-disable features when limit reached\n  notifyOwners      Boolean  @default(true) // Send email notifications\n  currentSpendCents Int      @default(0) // Current month spending\n  lastResetAt       DateTime @default(now()) // Last monthly reset\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  org Org @relation(\"OrgBudget\", fields: [orgId], references: [id])\n}\n\n/// Integration manages external service connections (SSO, SCIM, webhooks, etc.)\nmodel Integration {\n  id         String          @id @default(cuid())\n  orgId      String\n  type       IntegrationType\n  name       String // Display name\n  enabled    Boolean         @default(false)\n  config     Json            @default(\"{}\") // Integration-specific config (encrypted secrets)\n  metadata   Json? // Additional metadata\n  lastSyncAt DateTime?\n  createdAt  DateTime        @default(now())\n  updatedAt  DateTime        @updatedAt\n\n  org Org @relation(\"OrgIntegrations\", fields: [orgId], references: [id])\n\n  @@unique([orgId, type, name])\n  @@index([orgId, enabled])\n  @@index([type, enabled])\n}\n\n/// SupportSession manages secure support access and impersonation\nmodel SupportSession {\n  id            String               @id @default(cuid())\n  orgId         String\n  supportUserId String // Provider support user ID\n  targetUserId  String? // User being impersonated (if applicable)\n  sessionType   SupportSessionType\n  reason        String // Justification for access\n  consentGiven  Boolean              @default(false)\n  consentAt     DateTime?\n  startedAt     DateTime             @default(now())\n  expiresAt     DateTime // Auto-expiry time\n  endedAt       DateTime?\n  status        SupportSessionStatus @default(PENDING)\n  metadata      Json? // Session metadata\n\n  org Org @relation(\"OrgSupportSessions\", fields: [orgId], references: [id])\n\n  @@index([orgId, status])\n  @@index([supportUserId, status])\n  @@index([expiresAt])\n}\n\n/// AuditEvent extends AuditLog with detailed enterprise audit requirements\nmodel AuditEvent {\n  id           String        @id @default(cuid())\n  orgId        String\n  userId       String? // User who performed the action\n  sessionId    String? // Session ID for tracking\n  action       String // Action performed (login, create, update, delete, etc.)\n  target       String // What was acted upon (user, lead, policy, etc.)\n  targetId     String? // ID of the target entity\n  details      Json? // Detailed event information\n  ipAddress    String? // Source IP address\n  userAgent    String? // Browser/client information\n  severity     AuditSeverity @default(INFO)\n  category     AuditCategory @default(GENERAL)\n  success      Boolean       @default(true)\n  errorMessage String? // Error details if action failed\n\n  // Enterprise tamper-evidence fields\n  hash            String? // SHA-256 hash for integrity verification\n  previousEventId String? // ID of previous audit event for chain verification\n  previousHash    String? // Hash of previous event for chain integrity\n  immutable       Boolean @default(true) // Mark as immutable for compliance\n\n  createdAt DateTime @default(now())\n\n  org           Org          @relation(\"OrgAuditEvents\", fields: [orgId], references: [id])\n  previousEvent AuditEvent?  @relation(\"AuditChain\", fields: [previousEventId], references: [id])\n  nextEvents    AuditEvent[] @relation(\"AuditChain\")\n\n  @@index([orgId, createdAt])\n  @@index([orgId, action])\n  @@index([orgId, userId])\n  @@index([createdAt])\n  @@index([severity, createdAt])\n  @@index([orgId, hash]) // For integrity verification\n}\n\n// ===== AI-POWERED FEATURE MANAGEMENT MODELS =====\n\n/// AppEvent tracks user interactions for AI-powered feature recommendations\nmodel AppEvent {\n  id        String  @id @default(cuid())\n  orgId     String\n  userId    String? // User who performed the action\n  sessionId String? // Browser session ID\n\n  // Event Details\n  featureKey String // Feature identifier (e.g., \"scheduling.board\", \"leads.create\")\n  eventType  String // Event type: \"view\", \"click\", \"create\", \"update\", \"complete\"\n  metadata   Json? // Additional event context (page visited, button clicked, etc.)\n\n  // Context\n  userAgent String? // Browser information\n  ipAddress String? // Source IP for usage pattern analysis\n  duration  Int? // Time spent on feature (milliseconds)\n\n  createdAt DateTime @default(now())\n\n  // Relations\n  org  Org   @relation(\"OrgAppEvents\", fields: [orgId], references: [id])\n  user User? @relation(\"UserAppEvents\", fields: [orgId, userId], references: [orgId, id])\n\n  @@unique([orgId, id])\n  @@index([orgId, featureKey, createdAt])\n  @@index([orgId, userId, createdAt])\n  @@index([featureKey, eventType])\n  @@index([createdAt])\n}\n\n/// FeatureRegistry defines all available features with dependencies and requirements\nmodel FeatureRegistry {\n  id String @id @default(cuid())\n\n  // Feature Definition\n  key         String          @unique // Unique feature identifier\n  name        String // Display name\n  description String // Feature description for users\n  category    FeatureCategory // AI_ANALYTICS, AUTOMATION, etc.\n\n  // Feature Configuration\n  defaultEnabled Boolean  @default(false) // Default state for new orgs\n  requiresPlan   String? // Required subscription plan\n  dependencies   String[] // Required features that must be enabled first\n  incompatible   String[] // Features that cannot be enabled simultaneously\n\n  // Discovery & Recommendations\n  discoverability String @default(\"STANDARD\") // \"HIDDEN\", \"STANDARD\", \"PROMOTED\"\n  recommendWhen   Json? // Conditions for AI recommendation\n\n  // Documentation\n  helpUrl      String? // Link to feature documentation\n  demoVideoUrl String? // Feature demonstration video\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  orgFeatures OrgFeatureState[] @relation(\"FeatureOrgStates\")\n  actionLogs  AiActionLog[]     @relation(\"FeatureActionLogs\")\n\n  @@index([category, defaultEnabled])\n  @@index([discoverability])\n}\n\n/// OrgFeatureState tracks which features are enabled per organization\nmodel OrgFeatureState {\n  id        String @id @default(cuid())\n  orgId     String\n  featureId String // FeatureRegistry.id\n\n  // State Management\n  enabled   Boolean   @default(false)\n  enabledAt DateTime?\n  enabledBy String? // User.id who enabled the feature\n\n  // Configuration\n  config Json? // Feature-specific configuration\n\n  // Usage Tracking\n  firstUsedAt DateTime?\n  lastUsedAt  DateTime?\n  usageCount  Int       @default(0)\n\n  // AI Recommendations\n  recommended   Boolean   @default(false)\n  recommendedAt DateTime?\n  recommendedBy String? // AI recommendation source\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org           Org             @relation(\"OrgFeatureStates\", fields: [orgId], references: [id])\n  feature       FeatureRegistry @relation(\"FeatureOrgStates\", fields: [featureId], references: [id])\n  enabledByUser User?           @relation(\"UserEnabledFeatures\", fields: [orgId, enabledBy], references: [orgId, id])\n\n  @@unique([orgId, featureId]) // One state per feature per org\n  @@index([orgId, enabled])\n  @@index([orgId, updatedAt])\n  @@index([featureId, enabled])\n  @@index([recommended, recommendedAt])\n}\n\n/// DelegationGrant allows Owners to delegate specific AI control permissions to individual users\nmodel DelegationGrant {\n  id    String @id @default(cuid())\n  orgId String\n\n  // Delegation Details\n  granteeId String // User.id who receives the permission\n  granterId String // User.id (Owner) who grants the permission\n\n  // Permission Scope\n  toolId String // AI tool identifier (e.g., \"enable_feature\", \"update_setting\")\n  scope  Json? // Specific scope limitations (feature categories, etc.)\n\n  // Lifecycle\n  isActive  Boolean   @default(true)\n  expiresAt DateTime? // Optional expiration\n  revokedAt DateTime?\n  revokedBy String? // User.id who revoked\n\n  // Usage Tracking\n  usedCount  Int       @default(0)\n  lastUsedAt DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org        Org           @relation(\"OrgDelegationGrants\", fields: [orgId], references: [id])\n  grantee    User          @relation(\"UserDelegationGrants\", fields: [orgId, granteeId], references: [orgId, id])\n  granter    User          @relation(\"UserGrantedDelegations\", fields: [orgId, granterId], references: [orgId, id])\n  actionLogs AiActionLog[] @relation(\"DelegationActionLogs\")\n\n  @@unique([orgId, id])\n  @@unique([orgId, granteeId, toolId, isActive]) // Prevent duplicate active grants\n  @@index([orgId, granteeId, isActive])\n  @@index([orgId, granterId, createdAt])\n  @@index([toolId, isActive])\n  @@index([expiresAt])\n}\n\n/// AiActionLog provides comprehensive audit trail for all AI-controlled actions\nmodel AiActionLog {\n  id    String @id @default(cuid())\n  orgId String\n\n  // Action Details\n  toolId     String // AI tool used (e.g., \"enable_feature\", \"update_setting\")\n  action     String // Specific action performed\n  targetType String // What was acted upon (feature, setting, integration)\n  targetId   String? // ID of the target entity\n\n  // Authorization\n  requestedBy  String // User.id who requested the action\n  authorizedBy String? // User.id who authorized (Owner or delegate)\n  delegationId String? // DelegationGrant.id if via delegation\n\n  // Execution\n  status       String // \"pending\", \"approved\", \"executed\", \"failed\", \"cancelled\"\n  beforeState  Json? // State before the action\n  afterState   Json? // State after the action\n  errorMessage String? // Error details if failed\n\n  // Context\n  requestContext Json? // AI request context and reasoning\n  approvalMethod String? // \"owner_direct\", \"delegation\", \"just_in_time\"\n  costCents      Int? // AI cost in cents\n\n  createdAt  DateTime  @default(now())\n  executedAt DateTime?\n\n  // Relations\n  org        Org              @relation(\"OrgAiActionLogs\", fields: [orgId], references: [id])\n  requester  User             @relation(\"UserAiActionRequests\", fields: [orgId, requestedBy], references: [orgId, id])\n  authorizer User?            @relation(\"UserAiActionApprovals\", fields: [orgId, authorizedBy], references: [orgId, id])\n  delegation DelegationGrant? @relation(\"DelegationActionLogs\", fields: [delegationId], references: [id])\n  feature    FeatureRegistry? @relation(\"FeatureActionLogs\", fields: [targetId], references: [id])\n\n  @@unique([orgId, id])\n  @@index([orgId, createdAt])\n  @@index([orgId, requestedBy, createdAt])\n  @@index([orgId, status, createdAt])\n  @@index([toolId, status])\n  @@index([status, createdAt])\n  @@index([delegationId])\n}\n\n/// AiDocChunk stores knowledge base content for RAG (Retrieval Augmented Generation)\nmodel AiDocChunk {\n  id String @id @default(cuid())\n\n  // Content Details\n  title       String // Document/section title\n  content     String // Text content for RAG\n  contentType String // \"feature_doc\", \"how_to_guide\", \"api_reference\", \"changelog\"\n\n  // Metadata\n  sourceUrl  String? // Original source URL\n  featureKey String? // Associated feature key\n  tags       String[] // Tags for categorization\n  version    String? // Content version for updates\n\n  // Vector Search (for future embedding integration)\n  embedding  String? // Serialized vector embedding\n  tokenCount Int? // Token count for cost estimation\n\n  // Lifecycle\n  isActive Boolean @default(true)\n  priority Int     @default(0) // Higher priority shown first\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([contentType, isActive])\n  @@index([featureKey, isActive])\n  @@index([priority, isActive])\n  @@index([isActive, updatedAt])\n}\n\n// ===== ENUMS FOR ENTERPRISE MODELS =====\n\nenum PolicyCategory {\n  AUTHENTICATION // Password, MFA policies\n  SECURITY // Session, IP access control\n  COMPLIANCE // Data retention, residency\n  NETWORK_SECURITY // IP allowlists, geo-blocking\n  EMERGENCY // Break-glass access\n}\n\nenum FeatureCategory {\n  AI_ANALYTICS // AI features and analytics\n  AUTOMATION // Workflow automation\n  COMMUNICATION // SMS, email, notifications\n  INTEGRATION // API access, webhooks\n  MOBILE // Mobile app features\n  DEVELOPER_TOOLS // API, SDKs\n  MARKETING // Email marketing, campaigns\n}\n\nenum IntegrationType {\n  SSO_SAML // SAML SSO integration\n  SSO_OIDC // OpenID Connect SSO\n  SCIM // SCIM user provisioning\n  WEBHOOK // Webhook endpoints\n  OAUTH_APP // OAuth application\n  API_INTEGRATION // Third-party API integration\n  ACCOUNTING // QuickBooks, Xero, etc.\n  COMMUNICATION // Slack, Teams, etc.\n}\n\n/// Webhook endpoint configuration for real-time event notifications\nmodel WebhookEndpoint {\n  id             String    @id @default(cuid())\n  orgId          String\n  url            String\n  secret         String // HMAC secret for signature verification\n  events         String[] // Array of event types to subscribe to\n  active         Boolean   @default(true)\n  failureCount   Int       @default(0)\n  maxRetries     Int       @default(5)\n  lastDeliveryAt DateTime?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  // Relations\n  org        Org               @relation(\"OrgWebhooks\", fields: [orgId], references: [id])\n  deliveries WebhookDelivery[]\n\n  @@map(\"webhook_endpoints\")\n}\n\n/// Webhook event records for audit and replay\nmodel WebhookEvent {\n  id        String   @id @default(cuid())\n  type      String // Event type (e.g., \"lead.created\")\n  data      Json // Event payload\n  orgId     String\n  timestamp DateTime @default(now())\n\n  // Relations\n  org        Org               @relation(\"OrgWebhookEvents\", fields: [orgId], references: [id])\n  deliveries WebhookDelivery[]\n\n  @@map(\"webhook_events\")\n}\n\n/// Webhook delivery tracking with retry logic\nmodel WebhookDelivery {\n  id                String                @id @default(cuid())\n  webhookEndpointId String\n  eventId           String\n  status            WebhookDeliveryStatus @default(PENDING)\n  httpStatus        Int?\n  responseBody      String?\n  attemptCount      Int                   @default(0)\n  nextRetryAt       DateTime?\n  deliveredAt       DateTime?\n  createdAt         DateTime              @default(now())\n\n  // Relations\n  webhookEndpoint WebhookEndpoint @relation(fields: [webhookEndpointId], references: [id])\n  event           WebhookEvent    @relation(fields: [eventId], references: [id])\n\n  @@map(\"webhook_deliveries\")\n}\n\nenum WebhookDeliveryStatus {\n  PENDING\n  DELIVERED\n  FAILED\n  RETRYING\n}\n\n/// Encryption key management for data protection\nmodel EncryptionKey {\n  id        String    @id @default(cuid())\n  keyId     String    @unique // Key identifier for derivation\n  orgId     String\n  algorithm String    @default(\"aes-256-gcm\")\n  active    Boolean   @default(true)\n  createdAt DateTime  @default(now())\n  rotatedAt DateTime?\n\n  // Relations\n  org Org @relation(\"OrgEncryptionKeys\", fields: [orgId], references: [id])\n\n  @@map(\"encryption_keys\")\n}\n\n/// Backup management for disaster recovery\nmodel Backup {\n  id           String       @id @default(cuid())\n  orgId        String\n  type         BackupType   @default(FULL)\n  status       BackupStatus @default(PENDING)\n  size         Int? // Backup size in bytes\n  checksum     String? // SHA-256 checksum for integrity\n  encrypted    Boolean      @default(true)\n  compressed   Boolean      @default(true)\n  destinations String[] // Storage destinations\n  errorMessage String? // Error message if failed\n  createdAt    DateTime     @default(now())\n\n  // Relations\n  org Org @relation(\"OrgBackups\", fields: [orgId], references: [id])\n\n  @@map(\"backups\")\n}\n\nenum BackupType {\n  FULL\n  INCREMENTAL\n  DIFFERENTIAL\n}\n\nenum BackupStatus {\n  PENDING\n  IN_PROGRESS\n  COMPLETED\n  FAILED\n}\n\nenum SupportSessionType {\n  READ_ONLY // View-only access\n  IMPERSONATION // Full user impersonation\n  BREAK_GLASS // Emergency access\n  TROUBLESHOOTING // Technical support\n}\n\nenum SupportSessionStatus {\n  PENDING // Awaiting consent/approval\n  ACTIVE // Currently active\n  EXPIRED // Session expired\n  ENDED // Manually ended\n  CANCELLED // Cancelled before start\n}\n\nenum AuditSeverity {\n  INFO // Informational events\n  WARNING // Warning events\n  ERROR // Error events\n  CRITICAL // Critical security events\n}\n\nenum AuditCategory {\n  GENERAL // General actions\n  AUTHENTICATION // Login, logout, password changes\n  AUTHORIZATION // Permission changes, role assignments\n  DATA_ACCESS // Data read operations\n  DATA_MODIFICATION // Data create/update/delete\n  POLICY_CHANGE // Security policy changes\n  ADMIN_ACTION // Administrative actions\n  SECURITY_EVENT // Security-related events\n  FINANCIAL // Financial operations\n  SYSTEM // System operations\n  COMPLIANCE // Compliance-related events\n  AUTH // Authentication events\n  DATA // Data operations\n  SECURITY // Security events\n}\n\n/// TenantRegistration tracks tenant creation for idempotency and auditing\nmodel TenantRegistration {\n  id                 String   @id @default(cuid())\n  idempotencyKey     String   @unique\n  orgId              String\n  ownerUserId        String\n  plan               String // STARTER, PROFESSIONAL, ENTERPRISE\n  industry           String\n  externalCustomerId String?\n  welcomeEmailQueued Boolean  @default(false)\n  createdAt          DateTime @default(now())\n\n  // Relationships\n  org       Org  @relation(fields: [orgId], references: [id], onDelete: Cascade)\n  ownerUser User @relation(fields: [ownerUserId], references: [id], onDelete: Cascade)\n\n  @@index([orgId])\n  @@index([ownerUserId])\n  @@index([idempotencyKey])\n  @@index([createdAt])\n}\n\n/// LeadSourceConfig tracks different sources of leads for each organization\nmodel LeadSourceConfig {\n  id        String   @id @default(cuid())\n  orgId     String\n  name      String\n  type      String // REFERRAL, EVENT, DIGITAL, PARTNER, etc.\n  active    Boolean  @default(true)\n  createdAt DateTime @default(now())\n\n  // Relationships\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, name])\n  @@index([orgId])\n  @@index([active])\n}\n\n/// JobTemplate provides industry-specific job templates\nmodel JobTemplate {\n  id             String   @id @default(cuid())\n  orgId          String\n  name           String\n  description    String?\n  estimatedHours Int      @default(0)\n  active         Boolean  @default(true)\n  createdAt      DateTime @default(now())\n\n  // Relationships\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, name])\n  @@index([orgId])\n  @@index([active])\n}\n\n/// IdempotencyKey tracks processed operations to prevent duplicates\n/// Binder1: Idempotency enforcement for all POST routes\nmodel IdempotencyKey {\n  id             String   @id @default(cuid())\n  orgId          String\n  key            String\n  endpoint       String\n  requestHash    String\n  responseStatus Int\n  responseBody   Json\n  expiresAt      DateTime\n  createdAt      DateTime @default(now())\n\n  // Relations\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, key])\n  @@index([expiresAt])\n  @@index([orgId])\n}\n\n/// StripeEvent tracks processed Stripe webhook events for idempotency\n/// Codex Phase 8.6 - Webhook event deduplication\nmodel StripeEvent {\n  id         String   @id // Stripe event ID (evt_xxx)\n  source     String // 'provider' | 'connect'\n  receivedAt DateTime @default(now())\n\n  @@index([source])\n  @@index([receivedAt])\n}\n\n/// TenantStripeConnect stores encrypted Stripe Connect account info per tenant\n/// Codex Phase 8.2 - Client billing via Stripe Connect\nmodel TenantStripeConnect {\n  orgId                    String   @id\n  stripeConnectedAccountId String // AES-GCM encrypted at app layer\n  connectStatus            String   @default(\"pending\") // pending|complete|restricted\n  chargesEnabled           Boolean  @default(false)\n  payoutsEnabled           Boolean  @default(false)\n  createdAt                DateTime @default(now())\n  updatedAt                DateTime @updatedAt\n\n  // Relations\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId])\n  @@index([connectStatus])\n}\n\n// ===== AI MONETIZATION MODELS =====\n\n/// AiPowerProfile stores tenant's AI power level configuration\n/// Controls cost vs quality tradeoff for AI tasks\nmodel AiPowerProfile {\n  id            String   @id @default(cuid())\n  orgId         String   @unique\n  globalDefault String   @default(\"ECO\") // ECO, STANDARD, MAX\n  overrides     Json     @default(\"{}\") // feature/agent/channel overrides\n  roleCeilings  Json     @default(\"{}\") // employee: STANDARD, owner: MAX\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId])\n}\n\n/// AiTask logs every AI execution for billing and analytics\n/// Tracks tokens, cost, and pricing per task\nmodel AiTask {\n  id           String   @id @default(cuid())\n  orgId        String\n  userId       String? // User who triggered (nullable for system tasks)\n  agentType    String // inbox, estimate, scheduling, collections, etc.\n  actionType   String // inbound_parse, reply_draft, route_optimize, etc.\n  role         String? // User role at execution time\n  powerLevel   String // ECO, STANDARD, MAX\n  tokensIn     Int\n  tokensOut    Int\n  rawCostCents Int // Actual API cost\n  priceCents   Int // What we charge tenant\n  status       String // success, error, timeout\n  errorCode    String?\n  metadata     Json     @default(\"{}\")\n  createdAt    DateTime @default(now())\n\n  org  Org   @relation(fields: [orgId], references: [id], onDelete: Cascade)\n  user User? @relation(fields: [orgId, userId], references: [orgId, id])\n\n  @@index([orgId, createdAt])\n  @@index([orgId, agentType])\n  @@index([orgId, status])\n  @@index([userId, createdAt])\n}\n\n/// CreditLedger tracks prepaid credits for usage-based billing\n/// All debits happen before execution (402 gating)\nmodel CreditLedger {\n  id            String   @id @default(cuid())\n  orgId         String\n  amountCents   Int // Positive for purchase, negative for debit\n  type          String // PURCHASE, DEBIT, REFUND, TRIAL, REFERRAL\n  description   String\n  balanceBefore Int // Balance before this transaction\n  balanceAfter  Int // Balance after this transaction\n  relatedId     String? // AiTask.id, Invoice.id, etc.\n  metadata      Json     @default(\"{}\")\n  createdAt     DateTime @default(now())\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, createdAt])\n  @@index([orgId, type])\n}\n\n/// AIUsageLog tracks AI token usage and costs\n/// Binder1: AI cost tracking\nmodel AIUsageLog {\n  id               String   @id @default(cuid())\n  orgId            String\n  userId           String\n  model            String // gpt-4, claude-3-sonnet, etc.\n  promptTokens     Int\n  completionTokens Int\n  totalTokens      Int\n  costCents        Int\n  mode             String // eco, full\n  endpoint         String // /api/tenant/ai/run, etc.\n  requestId        String?\n  metadata         Json     @default(\"{}\")\n  createdAt        DateTime @default(now())\n\n  org  Org  @relation(fields: [orgId], references: [id], onDelete: Cascade)\n  user User @relation(fields: [orgId, userId], references: [orgId, id], onDelete: Cascade)\n\n  @@index([orgId, createdAt])\n  @@index([orgId, userId])\n  @@index([orgId, mode])\n  @@index([orgId, model])\n}\n\n/// UsageMeter tracks consumption for ULAP billing\n/// Meters: ai_tokens_light/medium/heavy, email_count, sms_count, etc.\nmodel UsageMeter {\n  id          String   @id @default(cuid())\n  orgId       String\n  meterType   String // ai_tokens_light, email_count, sms_count, etc.\n  value       Int // Cumulative or delta depending on meter\n  periodStart DateTime\n  periodEnd   DateTime\n  metadata    Json     @default(\"{}\")\n  createdAt   DateTime @default(now())\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, meterType, periodStart])\n  @@index([orgId, periodEnd])\n}\n\n/// VerticalConfig stores industry-specific settings\n/// Enables vertical AI packs and custom fields\nmodel VerticalConfig {\n  id             String   @id @default(cuid())\n  orgId          String   @unique\n  vertical       String // cleaning, hvac, trucking, portajohn, etc.\n  enabledAiTasks Json     @default(\"[]\") // Array of enabled AI task IDs\n  customFields   Json     @default(\"{}\")\n  settings       Json     @default(\"{}\")\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId])\n  @@index([vertical])\n}\n\n/// TrialConfig manages trial periods and entitlements\n/// Marketing trials (short, no card) vs Operational trials (longer, card required)\nmodel TrialConfig {\n  id             String    @id @default(cuid())\n  orgId          String    @unique\n  trialType      String // MARKETING, OPERATIONAL\n  trialEndsAt    DateTime\n  aiCreditsCents Int       @default(1000) // Trial AI credits\n  features       Json      @default(\"[]\") // Enabled features during trial\n  status         String    @default(\"active\") // active, expired, converted\n  convertedAt    DateTime?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId])\n  @@index([trialEndsAt])\n  @@index([status])\n}\n\n// ===== WORK ORDERS & JOB TICKETS =====\n\n/// JobTicket represents a mobile work order with offline capability\n/// Extends existing Job model with field-specific features\nmodel JobTicket {\n  id          String    @id @default(cuid())\n  orgId       String\n  customerId  String // Customer.id\n  location    Json // { address, lat, lng, notes }\n  crewId      String? // User.id of assigned crew lead\n  serviceType String\n  scheduledAt DateTime?\n  status      String    @default(\"pending\") // pending, assigned, in_progress, completed, cancelled\n  estimateId  String? // Opportunity.id if from estimate\n  invoiceId   String? // Invoice.id when billed\n  metadata    Json      @default(\"{}\")\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  // === CRM LINKS (Bridge System) ===\n  organizationId String? // CRM Organization link\n  contactId      String? // CRM Contact link\n  opportunityId  String? // CRM Opportunity link\n\n  org        Org            @relation(fields: [orgId], references: [id], onDelete: Cascade)\n  customer   Customer       @relation(fields: [customerId], references: [id])\n  crew       User?          @relation(\"JobTicketCrew\", fields: [orgId, crewId], references: [orgId, id])\n  logs       JobLog[]\n  completion JobCompletion?\n  anomalies  JobAnomaly[]\n\n  @@index([orgId, status])\n  @@index([orgId, scheduledAt])\n  @@index([customerId])\n  @@index([crewId])\n  @@index([orgId, organizationId])\n  @@index([orgId, contactId])\n  @@index([orgId, opportunityId])\n}\n\n/// JobLog tracks all actions on a job ticket (offline-capable)\n/// Synced when connection restored\nmodel JobLog {\n  id          String    @id @default(cuid())\n  jobTicketId String\n  actorId     String // User.id who performed action\n  role        String // User role at time of action\n  action      String // arrived, started, paused, parts_used, photo_added, notes_added\n  notes       String?\n  photoUrl    String? // S3/blob storage URL\n  partsUsed   Json      @default(\"[]\") // [{ partId, quantity, cost }]\n  syncedAt    DateTime? // Null if offline, set when synced\n  createdAt   DateTime  @default(now())\n\n  jobTicket JobTicket @relation(fields: [jobTicketId], references: [id], onDelete: Cascade)\n\n  @@index([jobTicketId, createdAt])\n  @@index([actorId])\n  @@index([syncedAt]) // Find unsynced logs\n}\n\n/// JobCompletion stores final job data with signature\n/// Triggers AI completion report generation\nmodel JobCompletion {\n  id           String   @id @default(cuid())\n  jobTicketId  String   @unique\n  completedAt  DateTime\n  signatureUrl String? // Customer signature image\n  aiReportUrl  String? // AI-generated completion report PDF\n  aiReportText String?  @db.Text // AI report text (≤300 words)\n  createdAt    DateTime @default(now())\n\n  jobTicket JobTicket @relation(fields: [jobTicketId], references: [id], onDelete: Cascade)\n\n  @@index([completedAt])\n}\n\n/// JobAnomaly stores AI-detected issues during job\n/// Reviewed by manager for follow-up\nmodel JobAnomaly {\n  id          String    @id @default(cuid())\n  jobTicketId String\n  type        String // time_overrun, parts_excess, quality_concern, safety_issue\n  severity    String // low, medium, high, critical\n  aiNotes     String?   @db.Text // AI explanation\n  reviewedAt  DateTime?\n  reviewedBy  String? // User.id\n  resolution  String?   @db.Text\n  createdAt   DateTime  @default(now())\n\n  jobTicket JobTicket @relation(fields: [jobTicketId], references: [id], onDelete: Cascade)\n\n  @@index([jobTicketId, severity])\n  @@index([reviewedAt]) // Find unreviewed anomalies\n}\n\n// ===== FEDERATION & PROVIDER MODELS =====\n\n// Custom domain configuration for tenants\nmodel TenantDomain {\n  id        String @id @default(cuid())\n  orgId     String @unique\n  domain    String @unique // e.g., \"acme.com\"\n  subdomain String @unique // e.g., \"acme\" (for acme.tenant.streamflow.com)\n\n  // Verification\n  txtRecord  String // TXT record value for verification\n  verified   Boolean   @default(false)\n  verifiedAt DateTime?\n\n  // DNS Configuration\n  cnameTarget String    @default(\"tenant.streamflow.com\") // CNAME target\n  sslEnabled  Boolean   @default(false)\n  sslIssuedAt DateTime?\n\n  // Status\n  status           String    @default(\"pending\") // pending, verified, active, suspended\n  activatedAt      DateTime?\n  suspendedAt      DateTime?\n  suspensionReason String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([domain])\n  @@index([subdomain])\n  @@index([status])\n}\n\n// Tenant profitability tracking\nmodel TenantProfitability {\n  id    String @id @default(cuid())\n  orgId String @unique\n\n  // Revenue (current month)\n  monthlyRevenueCents Int @default(0)\n  creditsPurchased    Int @default(0)\n\n  // Costs (current month)\n  aiCostCents      Int @default(0)\n  infraCostCents   Int @default(0)\n  storageCostCents Int @default(0)\n\n  // Metrics\n  marginPercent     Float @default(0)\n  adoptionRate      Float @default(0) // % of users using AI\n  avgCreditsPerUser Float @default(0)\n\n  // AI Recommendations\n  aiRecommendations Json? // Array of {type, action, impact}\n  lastAnalyzedAt    DateTime?\n\n  // Period\n  periodStart DateTime\n  periodEnd   DateTime\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  org Org @relation(fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, periodStart])\n  @@index([marginPercent])\n}\n\n// System-wide notices (visible to all tenants)\nmodel SystemNotice {\n  id String @id @default(cuid())\n\n  // Content\n  title   String\n  message String\n  type    String // info, warning, critical, maintenance\n\n  // Targeting\n  targetAll  Boolean @default(true)\n  targetOrgs Json? // Array of orgIds if not targetAll\n\n  // Display\n  dismissible Boolean @default(true)\n  priority    Int     @default(0) // Higher = more important\n\n  // Scheduling\n  startAt DateTime\n  endAt   DateTime?\n\n  // Status\n  active Boolean @default(true)\n\n  // Audit\n  createdBy String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([active, startAt, endAt])\n  @@index([type, priority])\n}\n\n// AI Golden Dataset (for evaluation)\nmodel AiGoldenDataset {\n  id String @id @default(cuid())\n\n  // Agent/Action\n  agentType  String\n  actionType String\n\n  // Test Data\n  input          Json\n  expectedOutput String\n\n  // Metadata\n  metadata Json @default(\"{}\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([agentType, actionType])\n}\n\n// AI Evaluation Results\nmodel AiEvaluation {\n  id String @id @default(cuid())\n\n  // Agent/Action\n  agentType  String\n  actionType String\n\n  // Model Version\n  modelVersion String\n\n  // Test Data\n  input          Json\n  actualOutput   String\n  expectedOutput String?\n\n  // Metrics (ROUGE, BLEU, precision, recall, etc.)\n  metrics Json @default(\"{}\")\n\n  createdAt DateTime @default(now())\n\n  @@index([agentType, modelVersion])\n  @@index([createdAt])\n}\n\n// AI Model Versions (for A/B testing)\nmodel AiModelVersion {\n  id String @id @default(cuid())\n\n  // Model Info\n  agentType String\n  version   String\n  modelName String\n  config    Json   @default(\"{}\")\n\n  // Status: shadow (testing), canary (small %), active (default), deprecated\n  status String @default(\"shadow\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([agentType, version])\n  @@index([agentType, status])\n}\n\n// =============================================================================\n// BINDER3: MULTI-LOCATION, FLEET, VENDOR ROLES, ULAP, INTEGRATIONS\n// =============================================================================\n// Generated: 2025-10-02\n// Spec: binder3.md - StreamFlow Legacy Expansion\n// Architecture: Multi-location (BU→LoB), Fleet/Assets, Scoped Vendor Roles,\n//               Migration Framework, ULAP Monetization, Integrations\n\n// =============================================================================\n// BUSINESS UNITS & LINES OF BUSINESS (Multi-Location)\n// =============================================================================\n\n/// BusinessUnit represents a physical location or operational unit within a tenant\n/// Examples: \"Main Office\", \"North Branch\", \"Warehouse 3\"\nmodel BusinessUnit {\n  id       String @id @default(cuid())\n  orgId    String // Tenant ID\n  name     String // Business unit name (e.g., \"Main Office\")\n  timezone String @default(\"UTC\") // Timezone for this location\n  address  Json   @default(\"{}\") // Address object: {street, city, state, zip, country}\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org             Org              @relation(\"OrgBusinessUnits\", fields: [orgId], references: [id], onDelete: Cascade)\n  linesOfBusiness LineOfBusiness[] @relation(\"BusinessUnitLinesOfBusiness\")\n  fleetVehicles   FleetVehicle[]   @relation(\"BusinessUnitFleetVehicles\")\n\n  @@unique([orgId, name]) // Unique name per tenant\n  @@index([orgId])\n  @@index([orgId, createdAt])\n}\n\n/// LineOfBusiness represents a vertical/industry pack enabled for a tenant\n/// Examples: \"cleaning\", \"hvac\", \"fencing\", \"rolloff\", \"porta_john\"\nmodel LineOfBusiness {\n  id      String  @id @default(cuid())\n  orgId   String // Tenant ID\n  buId    String? // Optional: scoped to specific business unit\n  key     String // Vertical key: \"cleaning\", \"hvac\", \"fencing\", etc.\n  enabled Boolean @default(false) // Is this vertical enabled?\n  config  Json    @default(\"{}\") // Vertical-specific configuration\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org          Org           @relation(\"OrgLinesOfBusiness\", fields: [orgId], references: [id], onDelete: Cascade)\n  businessUnit BusinessUnit? @relation(\"BusinessUnitLinesOfBusiness\", fields: [buId], references: [id], onDelete: SetNull)\n\n  @@unique([orgId, key, buId]) // Unique vertical per tenant+BU\n  @@index([orgId, enabled])\n  @@index([orgId, key])\n}\n\n// =============================================================================\n// VENDOR ROLES (Scoped Access)\n// =============================================================================\n\n/// VendorRole defines scoped vendor access types\n/// Examples: tenant_accountant, tenant_it_vendor, tenant_auditor, tenant_consultant\nmodel VendorRole {\n  id          String  @id @default(cuid())\n  key         String  @unique // Role key: \"tenant_accountant\", \"tenant_it_vendor\", etc.\n  description String? // Human-readable description\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n// =============================================================================\n// FLEET & ASSETS\n// =============================================================================\n\n/// FleetVehicle represents a vehicle, trailer, or equipment asset\nmodel FleetVehicle {\n  id        String  @id @default(cuid())\n  orgId     String // Tenant ID\n  buId      String? // Business unit (location)\n  assetTag  String? // Internal asset tag\n  vin       String? // Vehicle Identification Number\n  plate     String? // License plate\n  make      String? // Manufacturer\n  model     String? // Model name\n  year      Int? // Model year\n  dotNumber String? // DOT number (for commercial vehicles)\n  odometer  BigInt  @default(0) // Current odometer reading\n  status    String  @default(\"active\") // active, maintenance, retired\n  metadata  Json    @default(\"{}\") // Additional metadata\n\n  // Binder5: DVIR enhancements\n  dvirStatus  String?   @default(\"pass\") // 'pass', 'fail', 'pending'\n  lastDvirAt  DateTime? // Last DVIR inspection\n  nextDvirDue DateTime? // Next DVIR due date\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org                Org                      @relation(\"OrgFleetVehicles\", fields: [orgId], references: [id], onDelete: Cascade)\n  businessUnit       BusinessUnit?            @relation(\"BusinessUnitFleetVehicles\", fields: [buId], references: [id], onDelete: SetNull)\n  maintenanceTickets FleetMaintenanceTicket[] @relation(\"VehicleMaintenanceTickets\")\n  geotabDvirLogs     GeotabDvirLog[]          @relation(\"VehicleDvirLogs\")\n  holmanFuelTxns     HolmanFuelTransaction[]  @relation(\"VehicleFuelTransactions\")\n\n  @@unique([orgId, assetTag]) // Unique asset tag per tenant\n  @@index([orgId, buId])\n  @@index([orgId, status])\n  @@index([orgId, vin])\n  @@index([orgId, plate])\n}\n\n/// FleetMaintenanceTicket tracks vehicle maintenance issues\nmodel FleetMaintenanceTicket {\n  id          String  @id @default(cuid())\n  orgId       String // Tenant ID\n  vehicleId   String // FK to FleetVehicle\n  openedBy    String? // User who opened ticket\n  assignedTo  String? // User assigned to ticket\n  title       String // Ticket title\n  description String? @db.Text // Detailed description\n  severity    String? // low, medium, high, critical\n  status      String  @default(\"open\") // open, in_progress, waiting_parts, done, canceled\n  dvirRef     String? // Reference to DVIR log ID\n\n  openedAt  DateTime  @default(now())\n  closedAt  DateTime?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  // Relations\n  org     Org          @relation(\"OrgFleetMaintenanceTickets\", fields: [orgId], references: [id], onDelete: Cascade)\n  vehicle FleetVehicle @relation(\"VehicleMaintenanceTickets\", fields: [vehicleId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, vehicleId])\n  @@index([orgId, status])\n  @@index([orgId, openedAt])\n  @@index([vehicleId, status])\n}\n\n// =============================================================================\n// INTEGRATIONS\n// =============================================================================\n\n/// IntegrationConfig stores integration credentials and status\n/// Types: paylocity (HR), geotab (telematics), holman (fuel)\nmodel IntegrationConfig {\n  id     String @id @default(cuid())\n  orgId  String // Tenant ID\n  type   String // Integration type: \"paylocity\", \"geotab\", \"holman\"\n  status String @default(\"disconnected\") // disconnected, pending, connected, error\n  config Json   @default(\"{}\") // Encrypted credentials and config\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgIntegrationConfigs\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, type]) // One integration per type per tenant\n  @@index([orgId, status])\n}\n\n/// GeotabDvirLog stores DVIR (Driver Vehicle Inspection Report) logs from Geotab\nmodel GeotabDvirLog {\n  id          String    @id @default(cuid())\n  orgId       String // Tenant ID\n  deviceId    String? // Geotab device ID\n  driverId    String? // Geotab driver ID\n  vehicleRef  String? // FK to FleetVehicle\n  defects     Json? // Array of defects found\n  certifiedAt DateTime? // When DVIR was certified\n  status      String    @default(\"new\") // new, processed, ignored\n  raw         Json? // Raw Geotab data\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org     Org           @relation(\"OrgGeotabDvirLogs\", fields: [orgId], references: [id], onDelete: Cascade)\n  vehicle FleetVehicle? @relation(\"VehicleDvirLogs\", fields: [vehicleRef], references: [id], onDelete: SetNull)\n\n  @@index([orgId, status])\n  @@index([orgId, certifiedAt])\n  @@index([vehicleRef, certifiedAt])\n}\n\n/// HolmanFuelTransaction stores fuel purchase data from Holman\nmodel HolmanFuelTransaction {\n  id             String    @id @default(cuid())\n  orgId          String // Tenant ID\n  vehicleRef     String? // FK to FleetVehicle\n  driverPin      String? // Driver PIN used\n  gallons        Decimal?  @db.Decimal(12, 3) // Gallons purchased\n  pricePerGallon Decimal?  @db.Decimal(12, 4) // Price per gallon\n  totalCents     BigInt? // Total cost in cents\n  odometer       BigInt? // Odometer reading at purchase\n  vendor         String? // Fuel vendor name\n  purchasedAt    DateTime? // Purchase timestamp\n  raw            Json? // Raw Holman data\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org     Org           @relation(\"OrgHolmanFuelTransactions\", fields: [orgId], references: [id], onDelete: Cascade)\n  vehicle FleetVehicle? @relation(\"VehicleFuelTransactions\", fields: [vehicleRef], references: [id], onDelete: SetNull)\n\n  @@index([orgId, purchasedAt])\n  @@index([vehicleRef, purchasedAt])\n  @@index([orgId, vehicleRef, purchasedAt])\n}\n\n// =============================================================================\n// ULAP (USAGE-BASED LICENSING & PRICING)\n// =============================================================================\n\n/// PricingCatalogItem defines pricing for metered features\n/// Examples: ai_tokens, maps_calls, email_count, integration_geotab\nmodel PricingCatalogItem {\n  id                       String  @id @default(cuid())\n  orgId                    String? // Optional: org-specific pricing override\n  key                      String // Meter key: \"ai_tokens\", \"maps_calls\", etc.\n  listPriceCents           BigInt // List price in cents\n  adoptionDiscountEligible Boolean @default(false) // Can this get adoption discounts?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org Org? @relation(\"OrgPricingCatalogItems\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([key]) // Global pricing catalog\n  @@index([orgId, key])\n}\n\n/// TenantEntitlement defines what features/limits a tenant has access to\nmodel TenantEntitlement {\n  id      String  @id @default(cuid())\n  orgId   String // Tenant ID\n  key     String // Feature/limit key\n  enabled Boolean @default(false) // Is this feature enabled?\n  quota   BigInt? // Usage quota (null = unlimited)\n  meta    Json    @default(\"{}\") // Additional metadata\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgTenantEntitlements\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, key]) // One entitlement per key per tenant\n  @@index([orgId, enabled])\n}\n\n/// CreditsLedgerEntry tracks credit additions/deductions\nmodel CreditsLedgerEntry {\n  id         String  @id @default(cuid())\n  orgId      String // Tenant ID\n  key        String // Meter key\n  deltaCents BigInt // Credit change in cents (positive = add, negative = deduct)\n  reason     String? // Reason for credit change\n\n  createdAt DateTime @default(now())\n\n  // Relations\n  org Org @relation(\"OrgCreditsLedger\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, key])\n  @@index([orgId, createdAt])\n}\n\n/// UsageLedgerEntry tracks actual usage of metered features\nmodel UsageLedgerEntry {\n  id        String @id @default(cuid())\n  orgId     String // Tenant ID\n  key       String // Meter key\n  quantity  BigInt // Usage quantity\n  costCents BigInt // Cost in cents\n  context   Json? // Additional context (user, action, etc.)\n\n  createdAt DateTime @default(now())\n\n  // Relations\n  org Org @relation(\"OrgUsageLedger\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, key, createdAt])\n  @@index([orgId, createdAt])\n}\n\n/// AuditLog2 is the new audit log for binder3 (separate from legacy AuditLog)\n/// Tracks all mutations with tenant, user, role, action, resource\nmodel AuditLog2 {\n  id       String  @id @default(cuid())\n  orgId    String // Tenant ID\n  userId   String? // User who performed action\n  role     String? // User role at time of action\n  action   String // Action performed: create, update, delete, etc.\n  resource String // Resource affected: \"vehicle:123\", \"ticket:abc\"\n  meta     Json? // Additional metadata\n\n  createdAt DateTime @default(now())\n\n  // Relations\n  org Org @relation(\"OrgAuditLogs2\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, createdAt])\n  @@index([orgId, userId])\n  @@index([orgId, resource])\n}\n\n// =============================================================================\n// BINDER4 CRM ENHANCEMENTS\n// =============================================================================\n\n/// Note - Polymorphic notes for any entity (Lead, Contact, Organization, Opportunity, WorkOrder, etc.)\nmodel Note {\n  id         String   @id @default(cuid())\n  orgId      String\n  entityType String // 'lead', 'contact', 'organization', 'opportunity', 'workorder', etc.\n  entityId   String\n  userId     String // User who created the note\n  body       String\n  isPinned   Boolean  @default(false)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgNotes\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, entityType, entityId])\n  @@index([userId])\n  @@index([createdAt])\n  @@index([isPinned])\n}\n\n/// Attachment - Polymorphic file attachments for any entity\nmodel Attachment {\n  id         String   @id @default(cuid())\n  orgId      String\n  entityType String // 'lead', 'contact', 'organization', 'opportunity', 'workorder', etc.\n  entityId   String\n  userId     String // User who uploaded the file\n  fileName   String\n  fileSize   Int // Size in bytes\n  mimeType   String\n  storageKey String // S3/storage key\n  url        String? // Public URL if applicable\n  createdAt  DateTime @default(now())\n\n  // Relations\n  org Org @relation(\"OrgAttachments\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, entityType, entityId])\n  @@index([userId])\n  @@index([createdAt])\n}\n\n// =============================================================================\n// BINDER5 ENHANCEMENTS\n// =============================================================================\n\n/// Asset - Track equipment, tools, vehicles, materials with QR codes\nmodel Asset {\n  id          String  @id @default(cuid())\n  orgId       String\n  buId        String? // Business Unit assignment\n  assetNumber String // Unique asset number (e.g., \"AST-001\")\n  name        String\n  description String?\n  category    String // 'equipment', 'tool', 'vehicle', 'material', 'other'\n  status      String  @default(\"active\") // 'active', 'maintenance', 'retired', 'lost'\n\n  // QR Code\n  qrCode    String  @unique // QR code value (UUID or custom)\n  qrCodeUrl String? // URL to QR code image\n\n  // Location & Assignment\n  locationId          String? // Current location (JobSite, BusinessUnit, etc.)\n  locationType        String? // 'jobsite', 'bu', 'warehouse', 'vehicle'\n  assignedToUserId    String? // Currently assigned to user\n  assignedToVehicleId String? // Currently assigned to vehicle\n\n  // Financial\n  purchasePrice  Int? // Purchase price in cents\n  currentValue   Int? // Current value in cents\n  purchaseDate   DateTime?\n  warrantyExpiry DateTime?\n\n  // Maintenance\n  lastMaintenanceAt       DateTime?\n  nextMaintenanceAt       DateTime?\n  maintenanceIntervalDays Int?\n\n  // Metadata\n  serialNumber String?\n  manufacturer String?\n  model        String?\n  customFields Json    @default(\"{}\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  org     Org            @relation(\"OrgAssets\", fields: [orgId], references: [id], onDelete: Cascade)\n  history AssetHistory[]\n\n  @@unique([orgId, assetNumber])\n  @@index([orgId, category])\n  @@index([orgId, status])\n  @@index([qrCode])\n  @@index([assignedToUserId])\n  @@index([buId])\n}\n\n/// AssetHistory - Track asset movements, assignments, scans\nmodel AssetHistory {\n  id        String   @id @default(cuid())\n  orgId     String\n  assetId   String\n  userId    String? // User who performed action\n  action    String // 'scan', 'assign', 'unassign', 'move', 'maintenance', 'status_change'\n  fromValue String? // Previous value\n  toValue   String? // New value\n  notes     String?\n  location  String? // GPS coordinates or location description\n  createdAt DateTime @default(now())\n\n  // Relations\n  org   Org   @relation(\"OrgAssetHistory\", fields: [orgId], references: [id], onDelete: Cascade)\n  asset Asset @relation(fields: [assetId], references: [id], onDelete: Cascade)\n\n  @@index([assetId, createdAt])\n  @@index([orgId, userId])\n  @@index([action])\n}\n\n/// RateLimit - Define rate limits per org/BU/key\nmodel RateLimit {\n  id             String   @id @default(cuid())\n  orgId          String\n  buId           String? // Optional: Business Unit specific limits\n  key            String // Rate limit key (e.g., 'api:leads:create', 'ai:chat')\n  limitPerMinute Int      @default(60)\n  limitPerHour   Int      @default(1000)\n  limitPerDay    Int      @default(10000)\n  enabled        Boolean  @default(true)\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgRateLimits\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, buId, key])\n  @@index([enabled])\n}\n\n/// RateLimitUsage - Track actual rate limit usage\nmodel RateLimitUsage {\n  id          String   @id @default(cuid())\n  orgId       String\n  buId        String?\n  key         String\n  windowStart DateTime // Start of time window\n  windowType  String // 'minute', 'hour', 'day'\n  count       Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  org Org @relation(\"OrgRateLimitUsage\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@unique([orgId, key, windowStart, windowType])\n  @@index([windowStart])\n}\n\n/// WorkOrderTimeEntry - Track time spent on work orders\nmodel WorkOrderTimeEntry {\n  id              String    @id @default(cuid())\n  orgId           String\n  workOrderId     String\n  userId          String // Tech who logged time\n  startedAt       DateTime\n  endedAt         DateTime?\n  durationMinutes Int? // Calculated duration\n  notes           String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  // Relations\n  org       Org       @relation(\"OrgWorkOrderTimeEntries\", fields: [orgId], references: [id], onDelete: Cascade)\n  workOrder WorkOrder @relation(fields: [workOrderId], references: [id], onDelete: Cascade)\n\n  @@index([workOrderId])\n  @@index([userId])\n  @@index([startedAt])\n}\n\n/// SyncQueue - Offline-first sync queue for Field PWA\nmodel SyncQueue {\n  id            String    @id @default(cuid())\n  orgId         String\n  userId        String\n  deviceId      String? // Device identifier\n  action        String // 'create', 'update', 'delete'\n  entityType    String // 'workorder', 'timeentry', 'note', etc.\n  entityId      String?\n  payload       String // JSON payload\n  status        String    @default(\"pending\") // 'pending', 'synced', 'failed'\n  attempts      Int       @default(0)\n  lastAttemptAt DateTime?\n  error         String?\n  createdAt     DateTime  @default(now())\n  syncedAt      DateTime?\n\n  // Relations\n  org Org @relation(\"OrgSyncQueue\", fields: [orgId], references: [id], onDelete: Cascade)\n\n  @@index([orgId, userId, status])\n  @@index([status, createdAt])\n  @@index([deviceId])\n}\n\n// Binder1: Cleaning events tracking\nmodel cleaning_events {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  user_id    String?\n  feature    String\n  request_id String\n  payload    Json?\n  result     Json?\n  cost_cents Int      @default(0)\n  tokens_in  Int      @default(0)\n  tokens_out Int      @default(0)\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n\n  @@index([tenant_id, feature, created_at])\n  @@index([request_id])\n}\n\n// Binder1: Fencing events tracking\nmodel fencing_events {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  user_id    String?\n  feature    String\n  request_id String\n  payload    Json?\n  result     Json?\n  cost_cents Int      @default(0)\n  tokens_in  Int      @default(0)\n  tokens_out Int      @default(0)\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n\n  @@index([tenant_id, feature, created_at])\n  @@index([request_id])\n}\n\nmodel work_orders {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,\n  //   bu_id UUID REFERENCES business_units(id),\n  //   job_id UUID,\n  //   title TEXT NOT NULL,\n  //   status TEXT DEFAULT 'scheduled',\n  //   scheduled_at TIMESTAMPTZ,\n  //   window_start TIMESTAMPTZ,\n  //   window_end TIMESTAMPTZ,\n  //   crew_id UUID,\n  //   address JSONB,\n  //   created_at TIMESTAMPTZ DEFAULT now(), updated_at TIMESTAMPTZ\n  // );\n\n  @@map(\"work_orders\")\n}\n\nmodel work_order_events {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   work_order_id UUID REFERENCES work_orders(id) ON DELETE CASCADE,\n  //   actor_id UUID,\n  //   type TEXT,\n  //   payload JSONB,\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"work_order_events\")\n}\n\nmodel dvir_records {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,\n  //   vehicle_id UUID NOT NULL,\n  //   type TEXT CHECK (type in ('pre','post')),\n  //   odometer BIGINT,\n  //   location JSONB,\n  //   status TEXT DEFAULT 'open',\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"dvir_records\")\n}\n\nmodel dvir_defects {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   dvir_id UUID REFERENCES dvir_records(id) ON DELETE CASCADE,\n  //   component TEXT,\n  //   severity TEXT,\n  //   note TEXT,\n  //   photo_id UUID,\n  //   status TEXT DEFAULT 'open'\n  // );\n\n  @@map(\"dvir_defects\")\n}\n\nmodel maintenance_tickets {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,\n  //   vehicle_id UUID,\n  //   source_dvir_id UUID REFERENCES dvir_records(id) ON DELETE SET NULL,\n  //   title TEXT, priority TEXT, description TEXT,\n  //   status TEXT DEFAULT 'open',\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"maintenance_tickets\")\n}\n\nmodel assets {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,\n  //   sku TEXT,\n  //   serial TEXT,\n  //   name TEXT,\n  //   type TEXT,\n  //   status TEXT DEFAULT 'in_service',\n  //   last_seen_at TIMESTAMPTZ,\n  //   last_seen_loc JSONB\n  // );\n\n  @@map(\"assets\")\n}\n\nmodel asset_events {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   asset_id UUID REFERENCES assets(id) ON DELETE CASCADE,\n  //   event_type TEXT,\n  //   actor_id UUID,\n  //   job_id UUID,\n  //   data JSONB,\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"asset_events\")\n}\n\nmodel qr_tags {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   asset_id UUID REFERENCES assets(id) ON DELETE CASCADE,\n  //   code TEXT UNIQUE NOT NULL,\n  //   signed_by_provider BOOLEAN DEFAULT true,\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"qr_tags\")\n}\n\nmodel migration_jobs {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL,\n  //   source TEXT,\n  //   status TEXT DEFAULT 'created',\n  //   options JSONB,\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"migration_jobs\")\n}\n\nmodel migration_mappings {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   job_id UUID REFERENCES migration_jobs(id) ON DELETE CASCADE,\n  //   entity TEXT,\n  //   mapping JSONB\n  // );\n\n  @@map(\"migration_mappings\")\n}\n\nmodel migration_results {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   job_id UUID REFERENCES migration_jobs(id) ON DELETE CASCADE,\n  //   entity TEXT,\n  //   processed INT, succeeded INT, failed INT,\n  //   report JSONB\n  // );\n\n  @@map(\"migration_results\")\n}\n\nmodel federation_domains {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL,\n  //   domain TEXT NOT NULL,\n  //   method TEXT,\n  //   status TEXT DEFAULT 'pending',\n  //   verified_at TIMESTAMPTZ,\n  //   cert_status TEXT DEFAULT 'none'\n  // );\n\n  @@map(\"federation_domains\")\n}\n\nmodel rate_limit_policies {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL,\n  //   plan TEXT,\n  //   base_per_min INT,\n  //   burst_per_min INT,\n  //   override_until TIMESTAMPTZ,\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"rate_limit_policies\")\n}\n\nmodel ai_sessions {\n  id String @id @default(cuid())\n  // TODO: Convert SQL definition to Prisma fields\n  // Original SQL:   id UUID PRIMARY KEY,\n  //   tenant_id UUID NOT NULL,\n  //   agent TEXT,\n  //   tier TEXT,\n  //   tokens_in BIGINT,\n  //   tokens_out BIGINT,\n  //   cost_cents BIGINT,\n  //   created_at TIMESTAMPTZ DEFAULT now()\n  // );\n\n  @@map(\"ai_sessions\")\n}\n\nmodel idx_cleaning_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 1489\n  // Database: CREATE INDEX idx_cleaning_events_1\n}\n\nmodel idx_cleaning_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 1490\n  // Database: CREATE INDEX idx_cleaning_events_2\n}\n\nmodel idx_fencing_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 2959\n  // Database: CREATE INDEX idx_fencing_events_1\n}\n\nmodel idx_fencing_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 2960\n  // Database: CREATE INDEX idx_fencing_events_2\n}\n\nmodel concrete_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 4415\n  // Database: CREATE TABLE concrete_events\n}\n\nmodel idx_concrete_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 4429\n  // Database: CREATE INDEX idx_concrete_events_1\n}\n\nmodel idx_concrete_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 4430\n  // Database: CREATE INDEX idx_concrete_events_2\n}\n\nmodel appliance_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 5885\n  // Database: CREATE TABLE appliance_events\n}\n\nmodel idx_appliance_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 5899\n  // Database: CREATE INDEX idx_appliance_events_1\n}\n\nmodel idx_appliance_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 5900\n  // Database: CREATE INDEX idx_appliance_events_2\n}\n\nmodel mechanic_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 7355\n  // Database: CREATE TABLE mechanic_events\n}\n\nmodel idx_mechanic_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 7369\n  // Database: CREATE INDEX idx_mechanic_events_1\n}\n\nmodel idx_mechanic_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 7370\n  // Database: CREATE INDEX idx_mechanic_events_2\n}\n\nmodel windowdoor_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 8825\n  // Database: CREATE TABLE windowdoor_events\n}\n\nmodel idx_windowdoor_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 8839\n  // Database: CREATE INDEX idx_windowdoor_events_1\n}\n\nmodel idx_windowdoor_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 8840\n  // Database: CREATE INDEX idx_windowdoor_events_2\n}\n\nmodel rolloff_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 10295\n  // Database: CREATE TABLE rolloff_events\n}\n\nmodel idx_rolloff_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 10309\n  // Database: CREATE INDEX idx_rolloff_events_1\n}\n\nmodel idx_rolloff_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 10310\n  // Database: CREATE INDEX idx_rolloff_events_2\n}\n\nmodel portajohn_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 11765\n  // Database: CREATE TABLE portajohn_events\n}\n\nmodel idx_portajohn_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 11779\n  // Database: CREATE INDEX idx_portajohn_events_1\n}\n\nmodel idx_portajohn_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 11780\n  // Database: CREATE INDEX idx_portajohn_events_2\n}\n\nmodel trucking_events {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 13235\n  // Database: CREATE TABLE trucking_events\n}\n\nmodel idx_trucking_events_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 13249\n  // Database: CREATE INDEX idx_trucking_events_1\n}\n\nmodel idx_trucking_events_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 13250\n  // Database: CREATE INDEX idx_trucking_events_2\n}\n\nmodel infra_adoption {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 13773\n  // Database: CREATE TABLE infra_adoption\n}\n\nmodel idx_infra_adoption_1 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 13781\n  // Database: CREATE INDEX idx_infra_adoption_1\n}\n\nmodel idx_infra_adoption_2 {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 13782\n  // Database: CREATE INDEX idx_infra_adoption_2\n}\n\nmodel IF {\n  id String @id @default(cuid())\n  // Generated from binder1_FULL line 1534\n  // Operation: drop_table\n  // Database: DROP TABLE IF\n\n  @@map(\"IF\")\n}\n\nmodel tenants {\n  id         String   @id @default(cuid())\n  name       String\n  plan       String\n  created_at DateTime\n  updated_at DateTime\n  // Generated from binder3_FULL line 91\n  // Operation: create_table\n  // Database: CREATE TABLE tenants\n\n  @@map(\"tenants\")\n}\n\nmodel business_units {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  name       String\n  timezone   String\n  address    Json\n  created_at DateTime\n  // Generated from binder3_FULL line 100\n  // Operation: create_table\n  // Database: CREATE TABLE business_units\n\n  @@map(\"business_units\")\n}\n\nmodel lines_of_business {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  bu_id      String\n  key        String\n  enabled    Boolean\n  config     Json\n  created_at DateTime\n  // Generated from binder3_FULL line 111\n  // Operation: create_table\n  // Database: CREATE TABLE lines_of_business\n\n  @@map(\"lines_of_business\")\n}\n\nmodel vendor_roles {\n  id          String @id @default(cuid())\n  key         String\n  description String\n  // Generated from binder3_FULL line 125\n  // Operation: create_table\n  // Database: CREATE TABLE vendor_roles\n\n  @@map(\"vendor_roles\")\n}\n\nmodel users {\n  id            String   @id @default(cuid())\n  tenant_id     String\n  email         String\n  password_hash String\n  role          String\n  role_scope    String\n  audience      String\n  status        String\n  created_at    DateTime\n  // Generated from binder3_FULL line 131\n  // Operation: create_table\n  // Database: CREATE TABLE users\n\n  @@map(\"users\")\n}\n\nmodel fleet_vehicles {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  bu_id      String\n  asset_tag  String\n  vin        String\n  plate      String\n  make       String\n  dot_number String\n  odometer   BigInt\n  status     String\n  metadata   Json\n  created_at DateTime\n  // Generated from binder3_FULL line 147\n  // Operation: create_table\n  // Database: CREATE TABLE fleet_vehicles\n\n  @@map(\"fleet_vehicles\")\n}\n\nmodel fleet_maintenance_tickets {\n  id          String   @id @default(cuid())\n  tenant_id   String\n  vehicle_id  String\n  opened_by   String\n  assigned_to String\n  title       String\n  description String\n  severity    String\n  status      String\n  dvir_ref    String\n  opened_at   DateTime\n  closed_at   DateTime\n  // Generated from binder3_FULL line 163\n  // Operation: create_table\n  // Database: CREATE TABLE fleet_maintenance_tickets\n\n  @@map(\"fleet_maintenance_tickets\")\n}\n\nmodel integration_configs {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  type       String\n  status     String\n  config     Json\n  created_at DateTime\n  updated_at DateTime\n  // Generated from binder3_FULL line 182\n  // Operation: create_table\n  // Database: CREATE TABLE integration_configs\n\n  @@map(\"integration_configs\")\n}\n\nmodel geotab_dvir_logs {\n  id           String   @id @default(cuid())\n  tenant_id    String\n  device_id    String\n  driver_id    String\n  vehicle_ref  String\n  defects      Json\n  certified_at DateTime\n  status       String\n  raw          Json\n  // Generated from binder3_FULL line 194\n  // Operation: create_table\n  // Database: CREATE TABLE geotab_dvir_logs\n\n  @@map(\"geotab_dvir_logs\")\n}\n\nmodel holman_fuel_transactions {\n  id           String   @id @default(cuid())\n  tenant_id    String\n  vehicle_ref  String\n  driver_pin   String\n  total_cents  BigInt\n  odometer     BigInt\n  vendor       String\n  purchased_at DateTime\n  raw          Json\n  // Generated from binder3_FULL line 208\n  // Operation: create_table\n  // Database: CREATE TABLE holman_fuel_transactions\n\n  @@map(\"holman_fuel_transactions\")\n}\n\nmodel pricing_catalog {\n  id                         String  @id @default(cuid())\n  key                        String\n  list_price_cents           BigInt\n  adoption_discount_eligible Boolean\n  // Generated from binder3_FULL line 226\n  // Operation: create_table\n  // Database: CREATE TABLE pricing_catalog\n\n  @@map(\"pricing_catalog\")\n}\n\nmodel tenant_entitlements {\n  id        String  @id @default(cuid())\n  tenant_id String\n  key       String\n  enabled   Boolean\n  quota     BigInt\n  meta      Json\n  // Generated from binder3_FULL line 233\n  // Operation: create_table\n  // Database: CREATE TABLE tenant_entitlements\n\n  @@map(\"tenant_entitlements\")\n}\n\nmodel credits_ledger {\n  id          String   @id @default(cuid())\n  tenant_id   String\n  key         String\n  delta_cents BigInt\n  reason      String\n  created_at  DateTime\n  // Generated from binder3_FULL line 243\n  // Operation: create_table\n  // Database: CREATE TABLE credits_ledger\n\n  @@map(\"credits_ledger\")\n}\n\nmodel usage_ledger {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  key        String\n  quantity   BigInt\n  cost_cents BigInt\n  context    Json\n  created_at DateTime\n  // Generated from binder3_FULL line 253\n  // Operation: create_table\n  // Database: CREATE TABLE usage_ledger\n\n  @@map(\"usage_ledger\")\n}\n\nmodel audit_logs {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  user_id    String\n  role       String\n  action     String\n  resource   String\n  meta       Json\n  created_at DateTime\n  // Generated from binder3_FULL line 267\n  // Operation: create_table\n  // Database: CREATE TABLE audit_logs\n\n  @@map(\"audit_logs\")\n}\n\nmodel crm_leads {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  bu_id      String\n  first_name String\n  email      String\n  status     String\n  created_at DateTime\n  // Generated from binder4_FULL line 4111\n  // Operation: create_table\n  // Database: CREATE TABLE crm_leads\n\n  @@map(\"crm_leads\")\n}\n\nmodel crm_orgs {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  name       String\n  created_at DateTime\n  // Generated from binder4_FULL line 4124\n  // Operation: create_table\n  // Database: CREATE TABLE crm_orgs\n\n  @@map(\"crm_orgs\")\n}\n\nmodel crm_contacts {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  org_id     String\n  first_name String\n  is_primary Boolean\n  created_at DateTime\n  // Generated from binder4_FULL line 4134\n  // Operation: create_table\n  // Database: CREATE TABLE crm_contacts\n\n  @@map(\"crm_contacts\")\n}\n\nmodel crm_opps {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  org_id     String\n  contact_id String\n  title      String\n  created_at DateTime\n  // Generated from binder4_FULL line 4146\n  // Operation: create_table\n  // Database: CREATE TABLE crm_opps\n\n  @@map(\"crm_opps\")\n}\n\nmodel schedule_jobs {\n  id     String @id @default(cuid())\n  org_id String\n  status String\n  // Generated from binder4_FULL line 4158\n  // Operation: create_table\n  // Database: CREATE TABLE schedule_jobs\n\n  @@map(\"schedule_jobs\")\n}\n\nmodel schedule_visits {\n  id           String   @id @default(cuid())\n  job_id       String\n  scheduled_at DateTime\n  status       String\n  // Generated from binder4_FULL line 4166\n  // Operation: create_table\n  // Database: CREATE TABLE schedule_visits\n\n  @@map(\"schedule_visits\")\n}\n\nmodel billing_estimates {\n  id         String   @id @default(cuid())\n  org_id     String\n  created_at DateTime\n  // Generated from binder4_FULL line 4176\n  // Operation: create_table\n  // Database: CREATE TABLE billing_estimates\n\n  @@map(\"billing_estimates\")\n}\n\nmodel billing_estimate_lines {\n  id  String @id @default(cuid())\n  sku String\n  // Generated from binder4_FULL line 4181\n  // Operation: create_table\n  // Database: CREATE TABLE billing_estimate_lines\n\n  @@map(\"billing_estimate_lines\")\n}\n\nmodel billing_invoices {\n  id         String   @id @default(cuid())\n  org_id     String\n  created_at DateTime\n  // Generated from binder4_FULL line 4188\n  // Operation: create_table\n  // Database: CREATE TABLE billing_invoices\n\n  @@map(\"billing_invoices\")\n}\n\nmodel billing_invoice_lines {\n  id  String @id @default(cuid())\n  sku String\n  // Generated from binder4_FULL line 4193\n  // Operation: create_table\n  // Database: CREATE TABLE billing_invoice_lines\n\n  @@map(\"billing_invoice_lines\")\n}\n\nmodel billing_payments {\n  id           String @id @default(cuid())\n  amount_cents BigInt\n  // Generated from binder4_FULL line 4197\n  // Operation: create_table\n  // Database: CREATE TABLE billing_payments\n\n  @@map(\"billing_payments\")\n}\n\nmodel inventory_items {\n  id  String @id @default(cuid())\n  sku String\n  // Generated from binder4_FULL line 4204\n  // Operation: create_table\n  // Database: CREATE TABLE inventory_items\n\n  @@map(\"inventory_items\")\n}\n\nmodel inventory_bins {\n  id   String @id @default(cuid())\n  name String\n  // Generated from binder4_FULL line 4208\n  // Operation: create_table\n  // Database: CREATE TABLE inventory_bins\n\n  @@map(\"inventory_bins\")\n}\n\nmodel inventory_stock {\n  id      String @id @default(cuid())\n  item_id String\n  bin_id  String\n  // Generated from binder4_FULL line 4212\n  // Operation: create_table\n  // Database: CREATE TABLE inventory_stock\n\n  @@map(\"inventory_stock\")\n}\n\nmodel subs_vendors {\n  id    String @id @default(cuid())\n  email String\n  // Generated from binder4_FULL line 4222\n  // Operation: create_table\n  // Database: CREATE TABLE subs_vendors\n\n  @@map(\"subs_vendors\")\n}\n\nmodel subs_work_orders {\n  id     String @id @default(cuid())\n  job_id String\n  // Generated from binder4_FULL line 4226\n  // Operation: create_table\n  // Database: CREATE TABLE subs_work_orders\n\n  @@map(\"subs_work_orders\")\n}\n\nmodel subs_milestones {\n  id    String @id @default(cuid())\n  title String\n  // Generated from binder4_FULL line 4230\n  // Operation: create_table\n  // Database: CREATE TABLE subs_milestones\n\n  @@map(\"subs_milestones\")\n}\n\nmodel subs_payouts {\n  id           String @id @default(cuid())\n  amount_cents BigInt\n  // Generated from binder4_FULL line 4234\n  // Operation: create_table\n  // Database: CREATE TABLE subs_payouts\n\n  @@map(\"subs_payouts\")\n}\n\nmodel portal_sessions {\n  id    String @id @default(cuid())\n  token String\n  // Generated from binder4_FULL line 4241\n  // Operation: create_table\n  // Database: CREATE TABLE portal_sessions\n\n  @@map(\"portal_sessions\")\n}\n\nmodel finance_cost_centers {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  bu_id      String\n  name       String\n  lob        String\n  created_at DateTime\n  // Generated from binder4_FULL line 45351\n  // Operation: create_table\n  // Database: CREATE TABLE finance_cost_centers\n\n  @@map(\"finance_cost_centers\")\n}\n\nmodel finance_budgets {\n  id             String   @id @default(cuid())\n  tenant_id      String\n  cost_center_id String\n  period_d       String\n  amount_cents   BigInt\n  created_at     DateTime\n  // Generated from binder4_FULL line 45362\n  // Operation: create_table\n  // Database: CREATE TABLE finance_budgets\n\n  @@map(\"finance_budgets\")\n}\n\nmodel time_entries {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  user_id    String\n  visit_id   String\n  started_at DateTime\n  ended_at   DateTime\n  notes      String\n  // Generated from binder4_FULL line 45373\n  // Operation: create_table\n  // Database: CREATE TABLE time_entries\n\n  @@map(\"time_entries\")\n}\n\nmodel integrations_vendor_tokens {\n  id         String   @id @default(cuid())\n  tenant_id  String\n  vendor     String\n  data       Json\n  created_at DateTime\n  updated_at DateTime\n  // Generated from binder4_FULL line 45386\n  // Operation: create_table\n  // Database: CREATE TABLE integrations_vendor_tokens\n\n  @@map(\"integrations_vendor_tokens\")\n}\n\nmodel CrmOpportunity {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // TODO: Add fields from binder2_FULL line 87\n}\n\nmodel CrmContact {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // TODO: Add fields from binder2_FULL line 173\n}\n\nmodel CrmOrganization {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // TODO: Add fields from binder2_FULL line 228\n}\n\nmodel RateLimitPolicy {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // TODO: Add fields from binder2_FULL line 533\n}\n\nmodel TenantUsageWindow {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // TODO: Add fields from binder2_FULL line 553\n}\n\nmodel ScalingEvent {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // TODO: Add fields from binder2_FULL line 569\n}\n",
  "inlineSchemaHash": "fba1e300f0d401786fda70bdc13c2e2b7f464bb297bffe9d31530b6b35e39762",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Org\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featureFlags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"industryType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"naicsCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sicCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industryConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"activeCapabilities\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"plan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiMonthlyBudgetCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiCreditBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiPlan\",\"kind\":\"enum\",\"type\":\"AiPlan\"},{\"name\":\"aiAlerts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionStartDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptionEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToOrg\"},{\"name\":\"ledger\",\"kind\":\"object\",\"type\":\"BillingLedger\",\"relationName\":\"BillingLedgerToOrg\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrg\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToOrg\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToOrg\"},{\"name\":\"leads\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToOrg\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"OpportunityToOrg\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrgToPayment\"},{\"name\":\"referrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"OrgToReferral\"},{\"name\":\"rfps\",\"kind\":\"object\",\"type\":\"Rfp\",\"relationName\":\"OrgToRfp\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrgToUser\"},{\"name\":\"rbacRoles\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"OrgRbacRoles\"},{\"name\":\"rbacUserRoles\",\"kind\":\"object\",\"type\":\"RbacUserRole\",\"relationName\":\"OrgRbacUserRoles\"},{\"name\":\"leadInvoices\",\"kind\":\"object\",\"type\":\"LeadInvoice\",\"relationName\":\"OrgLeadInvoices\"},{\"name\":\"pricingPlan\",\"kind\":\"object\",\"type\":\"PricingPlan\",\"relationName\":\"OrgPricingPlan\"},{\"name\":\"aiUsageEvents\",\"kind\":\"object\",\"type\":\"AiUsageEvent\",\"relationName\":\"OrgAiUsageEvents\"},{\"name\":\"aiMonthlySummaries\",\"kind\":\"object\",\"type\":\"AiMonthlySummary\",\"relationName\":\"OrgAiMonthlySummaries\"},{\"name\":\"leadActivities\",\"kind\":\"object\",\"type\":\"LeadActivity\",\"relationName\":\"OrgLeadActivities\"},{\"name\":\"leadTasks\",\"kind\":\"object\",\"type\":\"LeadTask\",\"relationName\":\"OrgLeadTasks\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"OrgContacts\"},{\"name\":\"quotes\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"OrgToQuote\"},{\"name\":\"crmTasks\",\"kind\":\"object\",\"type\":\"CrmTask\",\"relationName\":\"OrgCrmTasks\"},{\"name\":\"crmNotes\",\"kind\":\"object\",\"type\":\"CrmNote\",\"relationName\":\"OrgCrmNotes\"},{\"name\":\"crmFiles\",\"kind\":\"object\",\"type\":\"CrmFile\",\"relationName\":\"OrgCrmFiles\"},{\"name\":\"organizations\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrgOrganizations\"},{\"name\":\"conversionAudits\",\"kind\":\"object\",\"type\":\"ConversionAudit\",\"relationName\":\"OrgConversionAudits\"},{\"name\":\"employeeProfiles\",\"kind\":\"object\",\"type\":\"EmployeeProfile\",\"relationName\":\"OrgEmployeeProfiles\"},{\"name\":\"workOrders\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"OrgWorkOrders\"},{\"name\":\"jobSites\",\"kind\":\"object\",\"type\":\"JobSite\",\"relationName\":\"OrgJobSites\"},{\"name\":\"jobAssignments\",\"kind\":\"object\",\"type\":\"JobAssignment\",\"relationName\":\"OrgJobAssignments\"},{\"name\":\"timesheets\",\"kind\":\"object\",\"type\":\"TimesheetEntry\",\"relationName\":\"OrgTimesheets\"},{\"name\":\"jobChecklists\",\"kind\":\"object\",\"type\":\"JobChecklistItem\",\"relationName\":\"OrgJobChecklists\"},{\"name\":\"issueReports\",\"kind\":\"object\",\"type\":\"IssueReport\",\"relationName\":\"OrgIssueReports\"},{\"name\":\"mediaAssets\",\"kind\":\"object\",\"type\":\"MediaAsset\",\"relationName\":\"OrgMediaAssets\"},{\"name\":\"trainingModules\",\"kind\":\"object\",\"type\":\"TrainingModule\",\"relationName\":\"OrgTrainingModules\"},{\"name\":\"trainingCompletions\",\"kind\":\"object\",\"type\":\"TrainingCompletion\",\"relationName\":\"OrgTrainingCompletions\"},{\"name\":\"securityPolicies\",\"kind\":\"object\",\"type\":\"SecurityPolicy\",\"relationName\":\"OrgSecurityPolicies\"},{\"name\":\"featureModules\",\"kind\":\"object\",\"type\":\"FeatureModule\",\"relationName\":\"OrgFeatureModules\"},{\"name\":\"featureUsage\",\"kind\":\"object\",\"type\":\"FeatureUsage\",\"relationName\":\"OrgFeatureUsage\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"OrganizationBudget\",\"relationName\":\"OrgBudget\"},{\"name\":\"integrations\",\"kind\":\"object\",\"type\":\"Integration\",\"relationName\":\"OrgIntegrations\"},{\"name\":\"supportSessions\",\"kind\":\"object\",\"type\":\"SupportSession\",\"relationName\":\"OrgSupportSessions\"},{\"name\":\"auditEvents\",\"kind\":\"object\",\"type\":\"AuditEvent\",\"relationName\":\"OrgAuditEvents\"},{\"name\":\"roleVersions\",\"kind\":\"object\",\"type\":\"RoleVersion\",\"relationName\":\"OrgRoleVersions\"},{\"name\":\"roleTemplates\",\"kind\":\"object\",\"type\":\"RoleTemplate\",\"relationName\":\"OrgRoleTemplates\"},{\"name\":\"permissionBundles\",\"kind\":\"object\",\"type\":\"PermissionBundle\",\"relationName\":\"OrgPermissionBundles\"},{\"name\":\"roleScopes\",\"kind\":\"object\",\"type\":\"RoleScope\",\"relationName\":\"OrgRoleScopes\"},{\"name\":\"roleReviews\",\"kind\":\"object\",\"type\":\"RoleReview\",\"relationName\":\"OrgRoleReviews\"},{\"name\":\"provisioningFlows\",\"kind\":\"object\",\"type\":\"ProvisioningFlow\",\"relationName\":\"OrgProvisioningFlows\"},{\"name\":\"temporaryElevations\",\"kind\":\"object\",\"type\":\"TemporaryElevation\",\"relationName\":\"OrgTemporaryElevations\"},{\"name\":\"appEvents\",\"kind\":\"object\",\"type\":\"AppEvent\",\"relationName\":\"OrgAppEvents\"},{\"name\":\"featureStates\",\"kind\":\"object\",\"type\":\"OrgFeatureState\",\"relationName\":\"OrgFeatureStates\"},{\"name\":\"delegationGrants\",\"kind\":\"object\",\"type\":\"DelegationGrant\",\"relationName\":\"OrgDelegationGrants\"},{\"name\":\"aiActionLogs\",\"kind\":\"object\",\"type\":\"AiActionLog\",\"relationName\":\"OrgAiActionLogs\"},{\"name\":\"webhookEndpoints\",\"kind\":\"object\",\"type\":\"WebhookEndpoint\",\"relationName\":\"OrgWebhooks\"},{\"name\":\"webhookEvents\",\"kind\":\"object\",\"type\":\"WebhookEvent\",\"relationName\":\"OrgWebhookEvents\"},{\"name\":\"encryptionKeys\",\"kind\":\"object\",\"type\":\"EncryptionKey\",\"relationName\":\"OrgEncryptionKeys\"},{\"name\":\"backups\",\"kind\":\"object\",\"type\":\"Backup\",\"relationName\":\"OrgBackups\"},{\"name\":\"themeConfigs\",\"kind\":\"object\",\"type\":\"ThemeConfig\",\"relationName\":\"OrgThemeConfigs\"},{\"name\":\"themeUsage\",\"kind\":\"object\",\"type\":\"ThemeUsage\",\"relationName\":\"OrgThemeUsage\"},{\"name\":\"approvalRequests\",\"kind\":\"object\",\"type\":\"ApprovalRequest\",\"relationName\":\"OrgApprovalRequests\"},{\"name\":\"securityIncidents\",\"kind\":\"object\",\"type\":\"SecurityIncident\",\"relationName\":\"OrgSecurityIncidents\"},{\"name\":\"deviceAccess\",\"kind\":\"object\",\"type\":\"DeviceAccess\",\"relationName\":\"OrgDeviceAccess\"},{\"name\":\"userLockouts\",\"kind\":\"object\",\"type\":\"UserLockout\",\"relationName\":\"OrgUserLockouts\"},{\"name\":\"tenantRegistrations\",\"kind\":\"object\",\"type\":\"TenantRegistration\",\"relationName\":\"OrgToTenantRegistration\"},{\"name\":\"leadSourceConfigs\",\"kind\":\"object\",\"type\":\"LeadSourceConfig\",\"relationName\":\"LeadSourceConfigToOrg\"},{\"name\":\"jobTemplates\",\"kind\":\"object\",\"type\":\"JobTemplate\",\"relationName\":\"JobTemplateToOrg\"},{\"name\":\"idempotencyKeys\",\"kind\":\"object\",\"type\":\"IdempotencyKey\",\"relationName\":\"IdempotencyKeyToOrg\"},{\"name\":\"stripeConnect\",\"kind\":\"object\",\"type\":\"TenantStripeConnect\",\"relationName\":\"OrgToTenantStripeConnect\"},{\"name\":\"aiPowerProfile\",\"kind\":\"object\",\"type\":\"AiPowerProfile\",\"relationName\":\"AiPowerProfileToOrg\"},{\"name\":\"aiTasks\",\"kind\":\"object\",\"type\":\"AiTask\",\"relationName\":\"AiTaskToOrg\"},{\"name\":\"creditLedger\",\"kind\":\"object\",\"type\":\"CreditLedger\",\"relationName\":\"CreditLedgerToOrg\"},{\"name\":\"usageMeters\",\"kind\":\"object\",\"type\":\"UsageMeter\",\"relationName\":\"OrgToUsageMeter\"},{\"name\":\"verticalConfig\",\"kind\":\"object\",\"type\":\"VerticalConfig\",\"relationName\":\"OrgToVerticalConfig\"},{\"name\":\"trialConfig\",\"kind\":\"object\",\"type\":\"TrialConfig\",\"relationName\":\"OrgToTrialConfig\"},{\"name\":\"aiUsageLogs\",\"kind\":\"object\",\"type\":\"AIUsageLog\",\"relationName\":\"AIUsageLogToOrg\"},{\"name\":\"businessUnits\",\"kind\":\"object\",\"type\":\"BusinessUnit\",\"relationName\":\"OrgBusinessUnits\"},{\"name\":\"linesOfBusiness\",\"kind\":\"object\",\"type\":\"LineOfBusiness\",\"relationName\":\"OrgLinesOfBusiness\"},{\"name\":\"fleetVehicles\",\"kind\":\"object\",\"type\":\"FleetVehicle\",\"relationName\":\"OrgFleetVehicles\"},{\"name\":\"fleetMaintenanceTickets\",\"kind\":\"object\",\"type\":\"FleetMaintenanceTicket\",\"relationName\":\"OrgFleetMaintenanceTickets\"},{\"name\":\"integrationConfigs\",\"kind\":\"object\",\"type\":\"IntegrationConfig\",\"relationName\":\"OrgIntegrationConfigs\"},{\"name\":\"geotabDvirLogs\",\"kind\":\"object\",\"type\":\"GeotabDvirLog\",\"relationName\":\"OrgGeotabDvirLogs\"},{\"name\":\"holmanFuelTransactions\",\"kind\":\"object\",\"type\":\"HolmanFuelTransaction\",\"relationName\":\"OrgHolmanFuelTransactions\"},{\"name\":\"pricingCatalogItems\",\"kind\":\"object\",\"type\":\"PricingCatalogItem\",\"relationName\":\"OrgPricingCatalogItems\"},{\"name\":\"tenantEntitlements\",\"kind\":\"object\",\"type\":\"TenantEntitlement\",\"relationName\":\"OrgTenantEntitlements\"},{\"name\":\"creditsLedger\",\"kind\":\"object\",\"type\":\"CreditsLedgerEntry\",\"relationName\":\"OrgCreditsLedger\"},{\"name\":\"usageLedger\",\"kind\":\"object\",\"type\":\"UsageLedgerEntry\",\"relationName\":\"OrgUsageLedger\"},{\"name\":\"auditLogs2\",\"kind\":\"object\",\"type\":\"AuditLog2\",\"relationName\":\"OrgAuditLogs2\"},{\"name\":\"notes\",\"kind\":\"object\",\"type\":\"Note\",\"relationName\":\"OrgNotes\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"OrgAttachments\"},{\"name\":\"assets\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"OrgAssets\"},{\"name\":\"assetHistory\",\"kind\":\"object\",\"type\":\"AssetHistory\",\"relationName\":\"OrgAssetHistory\"},{\"name\":\"rateLimits\",\"kind\":\"object\",\"type\":\"RateLimit\",\"relationName\":\"OrgRateLimits\"},{\"name\":\"rateLimitUsage\",\"kind\":\"object\",\"type\":\"RateLimitUsage\",\"relationName\":\"OrgRateLimitUsage\"},{\"name\":\"workOrderTimeEntries\",\"kind\":\"object\",\"type\":\"WorkOrderTimeEntry\",\"relationName\":\"OrgWorkOrderTimeEntries\"},{\"name\":\"syncQueue\",\"kind\":\"object\",\"type\":\"SyncQueue\",\"relationName\":\"OrgSyncQueue\"},{\"name\":\"jobTickets\",\"kind\":\"object\",\"type\":\"JobTicket\",\"relationName\":\"JobTicketToOrg\"},{\"name\":\"tenantDomain\",\"kind\":\"object\",\"type\":\"TenantDomain\",\"relationName\":\"OrgToTenantDomain\"},{\"name\":\"profitability\",\"kind\":\"object\",\"type\":\"TenantProfitability\",\"relationName\":\"OrgToTenantProfitability\"},{\"name\":\"brandConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"settingsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"industryPack\",\"kind\":\"object\",\"type\":\"IndustryPack\",\"relationName\":\"OrgIndustryPack\"}],\"dbName\":null},\"IndustryPack\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"naicsRanges\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sicRanges\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"leadFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"workflowSteps\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"catalogItems\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contractTemplates\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"complianceReqs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"rateCards\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"formulaSet\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"measurementUnits\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"requiredCapabilities\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"optionalCapabilities\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"hiddenCapabilities\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizations\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgIndustryPack\"},{\"name\":\"capabilities\",\"kind\":\"object\",\"type\":\"IndustryCapability\",\"relationName\":\"IndustryPackCapabilities\"}],\"dbName\":null},\"Capability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCore\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requiresSubscription\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"minimumPlan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiEndpoints\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"uiComponents\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"dependencies\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"industries\",\"kind\":\"object\",\"type\":\"IndustryCapability\",\"relationName\":\"CapabilityIndustries\"}],\"dbName\":null},\"IndustryCapability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industryPackId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capabilityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isRecommended\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isHidden\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"defaultEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"industryConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"industryPack\",\"kind\":\"object\",\"type\":\"IndustryPack\",\"relationName\":\"IndustryPackCapabilities\"},{\"name\":\"capability\",\"kind\":\"object\",\"type\":\"Capability\",\"relationName\":\"CapabilityIndustries\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mustChangePassword\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roleScope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToUser\"},{\"name\":\"rbacUserRoles\",\"kind\":\"object\",\"type\":\"RbacUserRole\",\"relationName\":\"UserRbacUserRoles\"},{\"name\":\"leadActivities\",\"kind\":\"object\",\"type\":\"LeadActivity\",\"relationName\":\"UserLeadActivities\"},{\"name\":\"assignedTasks\",\"kind\":\"object\",\"type\":\"LeadTask\",\"relationName\":\"AssignedLeadTasks\"},{\"name\":\"createdTasks\",\"kind\":\"object\",\"type\":\"LeadTask\",\"relationName\":\"CreatedLeadTasks\"},{\"name\":\"ownedContacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"OwnedContacts\"},{\"name\":\"aiTasks\",\"kind\":\"object\",\"type\":\"AiTask\",\"relationName\":\"AiTaskToUser\"},{\"name\":\"assignedJobTickets\",\"kind\":\"object\",\"type\":\"JobTicket\",\"relationName\":\"JobTicketCrew\"},{\"name\":\"employeeProfile\",\"kind\":\"object\",\"type\":\"EmployeeProfile\",\"relationName\":\"UserEmployeeProfile\"},{\"name\":\"temporaryElevations\",\"kind\":\"object\",\"type\":\"TemporaryElevation\",\"relationName\":\"UserTemporaryElevations\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserSessions\"},{\"name\":\"twoFactor\",\"kind\":\"object\",\"type\":\"UserTwoFactor\",\"relationName\":\"UserTwoFactor\"},{\"name\":\"appEvents\",\"kind\":\"object\",\"type\":\"AppEvent\",\"relationName\":\"UserAppEvents\"},{\"name\":\"enabledFeatures\",\"kind\":\"object\",\"type\":\"OrgFeatureState\",\"relationName\":\"UserEnabledFeatures\"},{\"name\":\"delegationGrants\",\"kind\":\"object\",\"type\":\"DelegationGrant\",\"relationName\":\"UserDelegationGrants\"},{\"name\":\"grantedDelegations\",\"kind\":\"object\",\"type\":\"DelegationGrant\",\"relationName\":\"UserGrantedDelegations\"},{\"name\":\"aiActionRequests\",\"kind\":\"object\",\"type\":\"AiActionLog\",\"relationName\":\"UserAiActionRequests\"},{\"name\":\"aiActionApprovals\",\"kind\":\"object\",\"type\":\"AiActionLog\",\"relationName\":\"UserAiActionApprovals\"},{\"name\":\"themeUsage\",\"kind\":\"object\",\"type\":\"ThemeUsage\",\"relationName\":\"UserThemeUsage\"},{\"name\":\"approvalRequests\",\"kind\":\"object\",\"type\":\"ApprovalRequest\",\"relationName\":\"UserApprovalRequests\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"ApprovalRequest\",\"relationName\":\"UserApprovals\"},{\"name\":\"securityIncidents\",\"kind\":\"object\",\"type\":\"SecurityIncident\",\"relationName\":\"UserSecurityIncidents\"},{\"name\":\"assignedIncidents\",\"kind\":\"object\",\"type\":\"SecurityIncident\",\"relationName\":\"AssignedSecurityIncidents\"},{\"name\":\"deviceAccess\",\"kind\":\"object\",\"type\":\"DeviceAccess\",\"relationName\":\"UserDeviceAccess\"},{\"name\":\"lockouts\",\"kind\":\"object\",\"type\":\"UserLockout\",\"relationName\":\"UserLockouts\"},{\"name\":\"unlockedUsers\",\"kind\":\"object\",\"type\":\"UserLockout\",\"relationName\":\"UnlockedUsers\"},{\"name\":\"tenantRegistrations\",\"kind\":\"object\",\"type\":\"TenantRegistration\",\"relationName\":\"TenantRegistrationToUser\"},{\"name\":\"aiUsageLogs\",\"kind\":\"object\",\"type\":\"AIUsageLog\",\"relationName\":\"AIUsageLogToUser\"}],\"dbName\":null},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserSessions\"}],\"dbName\":null},\"UserTwoFactor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"totpSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"backupCodes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserTwoFactor\"}],\"dbName\":null},\"ProviderSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totpSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginIp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failedLoginCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"ProviderAuditLog\",\"relationName\":\"ProviderAuditLogToProviderSettings\"}],\"dbName\":null},\"ProviderAuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRecoveryMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"ProviderSettings\",\"relationName\":\"ProviderAuditLogToProviderSettings\"}],\"dbName\":null},\"ThemeConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"themeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isGlobal\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customColors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"customPatterns\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"customTypography\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"brandAssets\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgThemeConfigs\"}],\"dbName\":null},\"ThemeUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"themeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appliedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgThemeUsage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserThemeUsage\"}],\"dbName\":null},\"Lead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceType\",\"kind\":\"enum\",\"type\":\"LeadSource\"},{\"name\":\"identityHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneE164\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedToCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedToOrganizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedToContactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversionAuditId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industryType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"naicsCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sicCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"enrichmentJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scoreFactors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"systemGenerated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"convertedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rfp\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeadStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceDetail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"LeadToOrg\"},{\"name\":\"LeadInvoiceLine\",\"kind\":\"object\",\"type\":\"LeadInvoiceLine\",\"relationName\":\"LeadToLeadInvoiceLine\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"LeadActivity\",\"relationName\":\"LeadActivities\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"LeadTask\",\"relationName\":\"LeadTasks\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"CustomerToOrg\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CustomerToJob\"},{\"name\":\"workOrders\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"CustomerWorkOrders\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"CustomerToOpportunity\"},{\"name\":\"jobTickets\",\"kind\":\"object\",\"type\":\"JobTicket\",\"relationName\":\"CustomerToJobTicket\"},{\"name\":\"quotes\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"CustomerToQuote\"}],\"dbName\":null},\"Opportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valueType\",\"kind\":\"enum\",\"type\":\"ValueType\"},{\"name\":\"estValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"stage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceLeadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classification\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"probability\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"closeDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationOpportunities\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOpportunity\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OpportunityToOrg\"},{\"name\":\"quotes\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"OpportunityToQuote\"}],\"dbName\":null},\"Quote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opportunityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToQuote\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToQuote\"},{\"name\":\"opportunity\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"OpportunityToQuote\"}],\"dbName\":null},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mobilePhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fax\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"linkedIn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastContactedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgContacts\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationContacts\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OwnedContacts\"}],\"dbName\":null},\"CrmTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assigneeUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgCrmTasks\"}],\"dbName\":null},\"CrmNote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgCrmNotes\"}],\"dbName\":null},\"CrmFile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeBytes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storageKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgCrmFiles\"}],\"dbName\":null},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"annualRevenue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgOrganizations\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"OrganizationContacts\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"OrganizationOpportunities\"},{\"name\":\"conversionAudits\",\"kind\":\"object\",\"type\":\"ConversionAudit\",\"relationName\":\"OrganizationConversionAudits\"}],\"dbName\":null},\"ConversionAudit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationConversionAudits\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgConversionAudits\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"InvoiceToOrg\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"InvoiceToPayment\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToPayment\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToPayment\"}],\"dbName\":null},\"Rfp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceSite\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"docs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiBidFit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiPriceHint\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToRfp\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToRfp\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rfpId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schedule\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checklist\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToJob\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"JobToOrg\"},{\"name\":\"rfp\",\"kind\":\"object\",\"type\":\"Rfp\",\"relationName\":\"JobToRfp\"}],\"dbName\":null},\"Referral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToReferral\"}],\"dbName\":null},\"BillingLedger\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"LedgerType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"BillingLedgerToOrg\"}],\"dbName\":null},\"LeadInvoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgLeadInvoices\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodTo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtotalCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"taxCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeInvoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lines\",\"kind\":\"object\",\"type\":\"LeadInvoiceLine\",\"relationName\":\"LeadInvoiceToLeadInvoiceLine\"}],\"dbName\":null},\"LeadInvoiceLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"LeadInvoice\",\"relationName\":\"LeadInvoiceToLeadInvoiceLine\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToLeadInvoiceLine\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPriceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"AuditLogToOrg\"}],\"dbName\":null},\"RbacPermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rolePerms\",\"kind\":\"object\",\"type\":\"RbacRolePermission\",\"relationName\":\"RbacPermissionToRbacRolePermission\"}],\"dbName\":null},\"RbacRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRbacRoles\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSystem\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rolePerms\",\"kind\":\"object\",\"type\":\"RbacRolePermission\",\"relationName\":\"RbacRoleToRbacRolePermission\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"RbacUserRole\",\"relationName\":\"RbacRoleToRbacUserRole\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"RoleVersion\",\"relationName\":\"RoleVersions\"},{\"name\":\"scopes\",\"kind\":\"object\",\"type\":\"RoleScope\",\"relationName\":\"RoleScopes\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"RoleReview\",\"relationName\":\"RoleReviews\"}],\"dbName\":null},\"RbacRolePermission\":{\"fields\":[{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RbacRoleToRbacRolePermission\"},{\"name\":\"permission\",\"kind\":\"object\",\"type\":\"RbacPermission\",\"relationName\":\"RbacPermissionToRbacRolePermission\"}],\"dbName\":null},\"RbacUserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserRbacUserRoles\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRbacUserRoles\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RbacRoleToRbacUserRole\"}],\"dbName\":null},\"RoleVersion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changeReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"scopeConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RoleVersions\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRoleVersions\"}],\"dbName\":null},\"RoleTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSystemTemplate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"scopeConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complexity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRoleTemplates\"}],\"dbName\":null},\"PermissionBundle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isReusable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgPermissionBundles\"}],\"dbName\":null},\"RoleScope\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scopeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scopeKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scopeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"restrictions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"timeZone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RoleScopes\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRoleScopes\"}],\"dbName\":null},\"RoleReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewFrequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextReviewDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastReviewDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"findings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"actions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"riskLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complianceFramework\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exceptions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRoleReviews\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"RbacRole\",\"relationName\":\"RoleReviews\"}],\"dbName\":null},\"ProvisioningFlow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"trigger\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conditionalRoles\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"scimMapping\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ssoGroupMapping\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"steps\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"approvalRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"approvers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifyUsers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notifyManagers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailTemplate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requireMFA\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ipRestrictions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"successRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgProvisioningFlows\"}],\"dbName\":null},\"TemporaryElevation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actualDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ElevationStatus\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"activatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"terminatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvalRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emergencyAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantedPermissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"previousPermissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"usageTracked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"alertsSent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"terminationReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terminatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgTemporaryElevations\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserTemporaryElevations\"}],\"dbName\":null},\"ProviderConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"samApiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSecretKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otherConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PricingPlan\":{\"fields\":[{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgPricingPlan\"},{\"name\":\"model\",\"kind\":\"enum\",\"type\":\"PricingModel\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tiersJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"includedUnits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"LeadActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ActivityType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contactMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadActivities\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgLeadActivities\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserLeadActivities\"}],\"dbName\":null},\"LeadTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"TaskPriority\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TaskStatus\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reminderAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadTasks\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgLeadTasks\"},{\"name\":\"assignee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedLeadTasks\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreatedLeadTasks\"}],\"dbName\":null},\"AiUsageEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokensIn\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokensOut\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"creditsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAiUsageEvents\"}],\"dbName\":null},\"AiMonthlySummary\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monthKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokensIn\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokensOut\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"creditsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"callCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAiMonthlySummaries\"}],\"dbName\":null},\"EmployeeProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adpWorkerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobilePrefs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"emergencyContact\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgEmployeeProfiles\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserEmployeeProfile\"},{\"name\":\"timesheets\",\"kind\":\"object\",\"type\":\"TimesheetEntry\",\"relationName\":\"EmployeeTimesheets\"},{\"name\":\"jobAssignments\",\"kind\":\"object\",\"type\":\"JobAssignment\",\"relationName\":\"EmployeeAssignments\"},{\"name\":\"issueReports\",\"kind\":\"object\",\"type\":\"IssueReport\",\"relationName\":\"EmployeeIssueReports\"},{\"name\":\"trainingCompletions\",\"kind\":\"object\",\"type\":\"TrainingCompletion\",\"relationName\":\"EmployeeTrainingCompletions\"}],\"dbName\":null},\"WorkOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"JobPriority\"},{\"name\":\"scheduledStartAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduledEndAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualStartAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualEndAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobSiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"actualCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"pausedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resumedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pauseReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgWorkOrders\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerWorkOrders\"},{\"name\":\"jobSite\",\"kind\":\"object\",\"type\":\"JobSite\",\"relationName\":\"JobSiteWorkOrders\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"JobAssignment\",\"relationName\":\"WorkOrderAssignments\"},{\"name\":\"checklists\",\"kind\":\"object\",\"type\":\"JobChecklistItem\",\"relationName\":\"WorkOrderChecklists\"},{\"name\":\"timesheets\",\"kind\":\"object\",\"type\":\"TimesheetEntry\",\"relationName\":\"WorkOrderTimesheets\"},{\"name\":\"issueReports\",\"kind\":\"object\",\"type\":\"IssueReport\",\"relationName\":\"WorkOrderIssueReports\"},{\"name\":\"mediaAssets\",\"kind\":\"object\",\"type\":\"MediaAsset\",\"relationName\":\"WorkOrderMedia\"},{\"name\":\"timeEntries\",\"kind\":\"object\",\"type\":\"WorkOrderTimeEntry\",\"relationName\":\"WorkOrderToWorkOrderTimeEntry\"}],\"dbName\":null},\"JobSite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"radiusMeters\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"accessInstructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContacts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgJobSites\"},{\"name\":\"workOrders\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"JobSiteWorkOrders\"},{\"name\":\"timesheets\",\"kind\":\"object\",\"type\":\"TimesheetEntry\",\"relationName\":\"JobSiteTimesheets\"}],\"dbName\":null},\"JobAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unassignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgJobAssignments\"},{\"name\":\"workOrder\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkOrderAssignments\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"EmployeeProfile\",\"relationName\":\"EmployeeAssignments\"}],\"dbName\":null},\"TimesheetEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobSiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clockInAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clockOutAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"breakMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clockInLat\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clockInLng\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clockOutLat\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clockOutLng\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TimesheetStatus\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgTimesheets\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"EmployeeProfile\",\"relationName\":\"EmployeeTimesheets\"},{\"name\":\"workOrder\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkOrderTimesheets\"},{\"name\":\"jobSite\",\"kind\":\"object\",\"type\":\"JobSite\",\"relationName\":\"JobSiteTimesheets\"}],\"dbName\":null},\"JobChecklistItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ChecklistStatus\"},{\"name\":\"completedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photosCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgJobChecklists\"},{\"name\":\"workOrder\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkOrderChecklists\"},{\"name\":\"mediaAssets\",\"kind\":\"object\",\"type\":\"MediaAsset\",\"relationName\":\"ChecklistMedia\"}],\"dbName\":null},\"IssueReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"IssueSeverity\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IssueStatus\"},{\"name\":\"resolvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgIssueReports\"},{\"name\":\"workOrder\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkOrderIssueReports\"},{\"name\":\"reporter\",\"kind\":\"object\",\"type\":\"EmployeeProfile\",\"relationName\":\"EmployeeIssueReports\"},{\"name\":\"mediaAssets\",\"kind\":\"object\",\"type\":\"MediaAsset\",\"relationName\":\"IssueMedia\"}],\"dbName\":null},\"MediaAsset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnailUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assetType\",\"kind\":\"enum\",\"type\":\"MediaType\"},{\"name\":\"workOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issueReportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checklistItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trainingModuleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exifJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgMediaAssets\"},{\"name\":\"workOrder\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkOrderMedia\"},{\"name\":\"issueReport\",\"kind\":\"object\",\"type\":\"IssueReport\",\"relationName\":\"IssueMedia\"},{\"name\":\"checklistItem\",\"kind\":\"object\",\"type\":\"JobChecklistItem\",\"relationName\":\"ChecklistMedia\"},{\"name\":\"trainingModule\",\"kind\":\"object\",\"type\":\"TrainingModule\",\"relationName\":\"TrainingMedia\"}],\"dbName\":null},\"TrainingModule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requiredForRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requiresQuiz\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"passingScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"validityDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgTrainingModules\"},{\"name\":\"completions\",\"kind\":\"object\",\"type\":\"TrainingCompletion\",\"relationName\":\"ModuleCompletions\"},{\"name\":\"mediaAssets\",\"kind\":\"object\",\"type\":\"MediaAsset\",\"relationName\":\"TrainingMedia\"}],\"dbName\":null},\"TrainingCompletion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"moduleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isValid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timeSpentMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgTrainingCompletions\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"EmployeeProfile\",\"relationName\":\"EmployeeTrainingCompletions\"},{\"name\":\"module\",\"kind\":\"object\",\"type\":\"TrainingModule\",\"relationName\":\"ModuleCompletions\"}],\"dbName\":null},\"ApprovalRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"approverRoles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"escalationRules\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgApprovalRequests\"},{\"name\":\"requester\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserApprovalRequests\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserApprovals\"}],\"dbName\":null},\"SecurityIncident\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"incidentType\",\"kind\":\"enum\",\"type\":\"SecurityIncidentType\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"SecuritySeverity\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IncidentStatus\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgSecurityIncidents\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserSecurityIncidents\"},{\"name\":\"assignee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedSecurityIncidents\"}],\"dbName\":null},\"DeviceAccess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"enum\",\"type\":\"DeviceType\"},{\"name\":\"deviceName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fingerprint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accessCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isBlocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastIpAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgDeviceAccess\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserDeviceAccess\"}],\"dbName\":null},\"UserLockout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lockoutType\",\"kind\":\"enum\",\"type\":\"LockoutType\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"SecuritySeverity\"},{\"name\":\"lockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unlockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unlockedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgUserLockouts\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserLockouts\"},{\"name\":\"unlocker\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UnlockedUsers\"}],\"dbName\":null},\"SecurityPolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PolicyCategory\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUpdatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgSecurityPolicies\"}],\"dbName\":null},\"FeatureModule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"moduleKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"FeatureCategory\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usageLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costPerUnit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"monthlyBudget\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgFeatureModules\"},{\"name\":\"usageEvents\",\"kind\":\"object\",\"type\":\"FeatureUsage\",\"relationName\":\"ModuleUsageEvents\"}],\"dbName\":null},\"FeatureUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"moduleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgFeatureUsage\"},{\"name\":\"module\",\"kind\":\"object\",\"type\":\"FeatureModule\",\"relationName\":\"ModuleUsageEvents\"}],\"dbName\":null},\"OrganizationBudget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monthlyLimitCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alertThreshold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"autoDisable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notifyOwners\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"currentSpendCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastResetAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgBudget\"}],\"dbName\":null},\"Integration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"IntegrationType\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastSyncAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgIntegrations\"}],\"dbName\":null},\"SupportSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supportUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionType\",\"kind\":\"enum\",\"type\":\"SupportSessionType\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consentGiven\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"consentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SupportSessionStatus\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgSupportSessions\"}],\"dbName\":null},\"AuditEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"target\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"AuditSeverity\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"AuditCategory\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousEventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"immutable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAuditEvents\"},{\"name\":\"previousEvent\",\"kind\":\"object\",\"type\":\"AuditEvent\",\"relationName\":\"AuditChain\"},{\"name\":\"nextEvents\",\"kind\":\"object\",\"type\":\"AuditEvent\",\"relationName\":\"AuditChain\"}],\"dbName\":null},\"AppEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featureKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAppEvents\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAppEvents\"}],\"dbName\":null},\"FeatureRegistry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"FeatureCategory\"},{\"name\":\"defaultEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requiresPlan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dependencies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"incompatible\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discoverability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recommendWhen\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"helpUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"demoVideoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orgFeatures\",\"kind\":\"object\",\"type\":\"OrgFeatureState\",\"relationName\":\"FeatureOrgStates\"},{\"name\":\"actionLogs\",\"kind\":\"object\",\"type\":\"AiActionLog\",\"relationName\":\"FeatureActionLogs\"}],\"dbName\":null},\"OrgFeatureState\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featureId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enabledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"enabledBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"firstUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recommended\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"recommendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"recommendedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgFeatureStates\"},{\"name\":\"feature\",\"kind\":\"object\",\"type\":\"FeatureRegistry\",\"relationName\":\"FeatureOrgStates\"},{\"name\":\"enabledByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserEnabledFeatures\"}],\"dbName\":null},\"DelegationGrant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"granteeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"granterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toolId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgDelegationGrants\"},{\"name\":\"grantee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserDelegationGrants\"},{\"name\":\"granter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserGrantedDelegations\"},{\"name\":\"actionLogs\",\"kind\":\"object\",\"type\":\"AiActionLog\",\"relationName\":\"DelegationActionLogs\"}],\"dbName\":null},\"AiActionLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toolId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorizedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delegationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"beforeState\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"afterState\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestContext\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"approvalMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"costCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"executedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAiActionLogs\"},{\"name\":\"requester\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAiActionRequests\"},{\"name\":\"authorizer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAiActionApprovals\"},{\"name\":\"delegation\",\"kind\":\"object\",\"type\":\"DelegationGrant\",\"relationName\":\"DelegationActionLogs\"},{\"name\":\"feature\",\"kind\":\"object\",\"type\":\"FeatureRegistry\",\"relationName\":\"FeatureActionLogs\"}],\"dbName\":null},\"AiDocChunk\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featureKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embedding\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WebhookEndpoint\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"failureCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxRetries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastDeliveryAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgWebhooks\"},{\"name\":\"deliveries\",\"kind\":\"object\",\"type\":\"WebhookDelivery\",\"relationName\":\"WebhookDeliveryToWebhookEndpoint\"}],\"dbName\":\"webhook_endpoints\"},\"WebhookEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgWebhookEvents\"},{\"name\":\"deliveries\",\"kind\":\"object\",\"type\":\"WebhookDelivery\",\"relationName\":\"WebhookDeliveryToWebhookEvent\"}],\"dbName\":\"webhook_events\"},\"WebhookDelivery\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webhookEndpointId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"WebhookDeliveryStatus\"},{\"name\":\"httpStatus\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responseBody\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attemptCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nextRetryAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"webhookEndpoint\",\"kind\":\"object\",\"type\":\"WebhookEndpoint\",\"relationName\":\"WebhookDeliveryToWebhookEndpoint\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"WebhookEvent\",\"relationName\":\"WebhookDeliveryToWebhookEvent\"}],\"dbName\":\"webhook_deliveries\"},\"EncryptionKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"algorithm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rotatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgEncryptionKeys\"}],\"dbName\":\"encryption_keys\"},\"Backup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"BackupType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BackupStatus\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"checksum\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encrypted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"compressed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"destinations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgBackups\"}],\"dbName\":\"backups\"},\"TenantRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idempotencyKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"welcomeEmailQueued\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToTenantRegistration\"},{\"name\":\"ownerUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TenantRegistrationToUser\"}],\"dbName\":null},\"LeadSourceConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"LeadSourceConfigToOrg\"}],\"dbName\":null},\"JobTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"JobTemplateToOrg\"}],\"dbName\":null},\"IdempotencyKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responseStatus\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responseBody\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"IdempotencyKeyToOrg\"}],\"dbName\":null},\"StripeEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TenantStripeConnect\":{\"fields\":[{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeConnectedAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chargesEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payoutsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToTenantStripeConnect\"}],\"dbName\":null},\"AiPowerProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"globalDefault\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"overrides\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"roleCeilings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"AiPowerProfileToOrg\"}],\"dbName\":null},\"AiTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"powerLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokensIn\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokensOut\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rawCostCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"AiTaskToOrg\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AiTaskToUser\"}],\"dbName\":null},\"CreditLedger\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balanceBefore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"balanceAfter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"relatedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"CreditLedgerToOrg\"}],\"dbName\":null},\"AIUsageLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completionTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"AIUsageLogToOrg\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AIUsageLogToUser\"}],\"dbName\":null},\"UsageMeter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meterType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToUsageMeter\"}],\"dbName\":null},\"VerticalConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vertical\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabledAiTasks\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToVerticalConfig\"}],\"dbName\":null},\"TrialConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trialType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trialEndsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aiCreditsCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToTrialConfig\"}],\"dbName\":null},\"JobTicket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"crewId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opportunityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"JobTicketToOrg\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToJobTicket\"},{\"name\":\"crew\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobTicketCrew\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"JobLog\",\"relationName\":\"JobLogToJobTicket\"},{\"name\":\"completion\",\"kind\":\"object\",\"type\":\"JobCompletion\",\"relationName\":\"JobCompletionToJobTicket\"},{\"name\":\"anomalies\",\"kind\":\"object\",\"type\":\"JobAnomaly\",\"relationName\":\"JobAnomalyToJobTicket\"}],\"dbName\":null},\"JobLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobTicketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"partsUsed\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"syncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobTicket\",\"kind\":\"object\",\"type\":\"JobTicket\",\"relationName\":\"JobLogToJobTicket\"}],\"dbName\":null},\"JobCompletion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobTicketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"signatureUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiReportUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiReportText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobTicket\",\"kind\":\"object\",\"type\":\"JobTicket\",\"relationName\":\"JobCompletionToJobTicket\"}],\"dbName\":null},\"JobAnomaly\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobTicketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobTicket\",\"kind\":\"object\",\"type\":\"JobTicket\",\"relationName\":\"JobAnomalyToJobTicket\"}],\"dbName\":null},\"TenantDomain\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subdomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"txtRecord\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cnameTarget\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sslEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sslIssuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"suspendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"suspensionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToTenantDomain\"}],\"dbName\":null},\"TenantProfitability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monthlyRevenueCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsPurchased\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiCostCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"infraCostCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storageCostCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"marginPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"adoptionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgCreditsPerUser\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"aiRecommendations\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastAnalyzedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgToTenantProfitability\"}],\"dbName\":null},\"SystemNotice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetAll\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"targetOrgs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"dismissible\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AiGoldenDataset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expectedOutput\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AiEvaluation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"actualOutput\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expectedOutput\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AiModelVersion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BusinessUnit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgBusinessUnits\"},{\"name\":\"linesOfBusiness\",\"kind\":\"object\",\"type\":\"LineOfBusiness\",\"relationName\":\"BusinessUnitLinesOfBusiness\"},{\"name\":\"fleetVehicles\",\"kind\":\"object\",\"type\":\"FleetVehicle\",\"relationName\":\"BusinessUnitFleetVehicles\"}],\"dbName\":null},\"LineOfBusiness\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgLinesOfBusiness\"},{\"name\":\"businessUnit\",\"kind\":\"object\",\"type\":\"BusinessUnit\",\"relationName\":\"BusinessUnitLinesOfBusiness\"}],\"dbName\":null},\"VendorRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"FleetVehicle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assetTag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"make\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dotNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"odometer\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"dvirStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastDvirAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextDvirDue\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgFleetVehicles\"},{\"name\":\"businessUnit\",\"kind\":\"object\",\"type\":\"BusinessUnit\",\"relationName\":\"BusinessUnitFleetVehicles\"},{\"name\":\"maintenanceTickets\",\"kind\":\"object\",\"type\":\"FleetMaintenanceTicket\",\"relationName\":\"VehicleMaintenanceTickets\"},{\"name\":\"geotabDvirLogs\",\"kind\":\"object\",\"type\":\"GeotabDvirLog\",\"relationName\":\"VehicleDvirLogs\"},{\"name\":\"holmanFuelTxns\",\"kind\":\"object\",\"type\":\"HolmanFuelTransaction\",\"relationName\":\"VehicleFuelTransactions\"}],\"dbName\":null},\"FleetMaintenanceTicket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dvirRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgFleetMaintenanceTickets\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"FleetVehicle\",\"relationName\":\"VehicleMaintenanceTickets\"}],\"dbName\":null},\"IntegrationConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgIntegrationConfigs\"}],\"dbName\":null},\"GeotabDvirLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defects\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"certifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgGeotabDvirLogs\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"FleetVehicle\",\"relationName\":\"VehicleDvirLogs\"}],\"dbName\":null},\"HolmanFuelTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driverPin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gallons\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"pricePerGallon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalCents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"odometer\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgHolmanFuelTransactions\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"FleetVehicle\",\"relationName\":\"VehicleFuelTransactions\"}],\"dbName\":null},\"PricingCatalogItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listPriceCents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"adoptionDiscountEligible\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgPricingCatalogItems\"}],\"dbName\":null},\"TenantEntitlement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"quota\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgTenantEntitlements\"}],\"dbName\":null},\"CreditsLedgerEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deltaCents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgCreditsLedger\"}],\"dbName\":null},\"UsageLedgerEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"costCents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgUsageLedger\"}],\"dbName\":null},\"AuditLog2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAuditLogs2\"}],\"dbName\":null},\"Note\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPinned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgNotes\"}],\"dbName\":null},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storageKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAttachments\"}],\"dbName\":null},\"Asset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assetNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCodeUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedToUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedToVehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchasePrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentValue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"warrantyExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastMaintenanceAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextMaintenanceAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maintenanceIntervalDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAssets\"},{\"name\":\"history\",\"kind\":\"object\",\"type\":\"AssetHistory\",\"relationName\":\"AssetToAssetHistory\"}],\"dbName\":null},\"AssetHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgAssetHistory\"},{\"name\":\"asset\",\"kind\":\"object\",\"type\":\"Asset\",\"relationName\":\"AssetToAssetHistory\"}],\"dbName\":null},\"RateLimit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"limitPerMinute\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limitPerHour\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limitPerDay\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRateLimits\"}],\"dbName\":null},\"RateLimitUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"windowStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"windowType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgRateLimitUsage\"}],\"dbName\":null},\"WorkOrderTimeEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"durationMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgWorkOrderTimeEntries\"},{\"name\":\"workOrder\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkOrderToWorkOrderTimeEntry\"}],\"dbName\":null},\"SyncQueue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastAttemptAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"org\",\"kind\":\"object\",\"type\":\"Org\",\"relationName\":\"OrgSyncQueue\"}],\"dbName\":null},\"cleaning_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"cost_cents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokens_in\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokens_out\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"fencing_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"cost_cents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokens_in\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokens_out\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"work_orders\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"work_orders\"},\"work_order_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"work_order_events\"},\"dvir_records\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"dvir_records\"},\"dvir_defects\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"dvir_defects\"},\"maintenance_tickets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"maintenance_tickets\"},\"assets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"assets\"},\"asset_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"asset_events\"},\"qr_tags\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"qr_tags\"},\"migration_jobs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"migration_jobs\"},\"migration_mappings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"migration_mappings\"},\"migration_results\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"migration_results\"},\"federation_domains\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"federation_domains\"},\"rate_limit_policies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"rate_limit_policies\"},\"ai_sessions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"ai_sessions\"},\"idx_cleaning_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_cleaning_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_fencing_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_fencing_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"concrete_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_concrete_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_concrete_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"appliance_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_appliance_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_appliance_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"mechanic_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_mechanic_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_mechanic_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"windowdoor_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_windowdoor_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_windowdoor_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"rolloff_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_rolloff_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_rolloff_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"portajohn_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_portajohn_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_portajohn_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"trucking_events\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_trucking_events_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_trucking_events_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"infra_adoption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_infra_adoption_1\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"idx_infra_adoption_2\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"IF\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"IF\"},\"tenants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"tenants\"},\"business_units\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"business_units\"},\"lines_of_business\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bu_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"lines_of_business\"},\"vendor_roles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"vendor_roles\"},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role_scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"fleet_vehicles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bu_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"asset_tag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"make\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dot_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"odometer\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"fleet_vehicles\"},\"fleet_maintenance_tickets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicle_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opened_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigned_to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dvir_ref\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opened_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"fleet_maintenance_tickets\"},\"integration_configs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"integration_configs\"},\"geotab_dvir_logs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicle_ref\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defects\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"certified_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"geotab_dvir_logs\"},\"holman_fuel_transactions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicle_ref\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver_pin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"odometer\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchased_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"holman_fuel_transactions\"},\"pricing_catalog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"list_price_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"adoption_discount_eligible\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":\"pricing_catalog\"},\"tenant_entitlements\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"quota\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"tenant_entitlements\"},\"credits_ledger\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delta_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"credits_ledger\"},\"usage_ledger\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"cost_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"usage_ledger\"},\"audit_logs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"audit_logs\"},\"crm_leads\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bu_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"crm_leads\"},\"crm_orgs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"crm_orgs\"},\"crm_contacts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_primary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"crm_contacts\"},\"crm_opps\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"crm_opps\"},\"schedule_jobs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"schedule_jobs\"},\"schedule_visits\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduled_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"schedule_visits\"},\"billing_estimates\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"billing_estimates\"},\"billing_estimate_lines\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"billing_estimate_lines\"},\"billing_invoices\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"billing_invoices\"},\"billing_invoice_lines\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"billing_invoice_lines\"},\"billing_payments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"}],\"dbName\":\"billing_payments\"},\"inventory_items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"inventory_items\"},\"inventory_bins\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"inventory_bins\"},\"inventory_stock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bin_id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"inventory_stock\"},\"subs_vendors\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"subs_vendors\"},\"subs_work_orders\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"subs_work_orders\"},\"subs_milestones\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"subs_milestones\"},\"subs_payouts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"}],\"dbName\":\"subs_payouts\"},\"portal_sessions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"portal_sessions\"},\"finance_cost_centers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bu_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lob\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"finance_cost_centers\"},\"finance_budgets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cost_center_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"period_d\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount_cents\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"finance_budgets\"},\"time_entries\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visit_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"started_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ended_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"time_entries\"},\"integrations_vendor_tokens\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"integrations_vendor_tokens\"},\"CrmOpportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CrmContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CrmOrganization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RateLimitPolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TenantUsageWindow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ScalingEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

